<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="classnjli_1_1_thread_builder">
<title>njli::ThreadBuilder class Reference</title>
<para>
    <programlisting>#include <link linkend="_thread_builder_8h">&lt;ThreadBuilder.h&gt;</link></programlisting>
</para>
<para>Inheritance diagram for njli::ThreadBuilder</para>
<para>
    <figure>
        <title>Inheritance graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="classnjli_1_1_thread_builder__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Collaboration diagram for njli::ThreadBuilder</para>
<para>
    <figure>
        <title>Collaboration graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="classnjli_1_1_thread_builder__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="classnjli_1_1_thread_builder_1a9227bab7e740e9493bc07a7fbfd705ff">ThreadBuilder</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="classnjli_1_1_thread_builder_1a887f0a70d7ad02680d18fa7d60300f8b">ThreadBuilder</link> (
const <link linkend="classnjli_1_1_thread_builder">ThreadBuilder</link> &amp; )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="classnjli_1_1_thread_builder_1af26adc22112326d0e02b78f5aa52b3a8">BT_DECLARE_ALIGNED_ALLOCATOR</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual <link linkend="classnjli_1_1_thread_builder_1ad9458b68332b469230ed9f58095d94bb">~ThreadBuilder</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="classnjli_1_1_thread_builder">ThreadBuilder</link> &amp; <link linkend="classnjli_1_1_thread_builder_1af415f719c34b3251f66a2de69a7456ac">operator=</link> (
const <link linkend="classnjli_1_1_thread_builder">ThreadBuilder</link> &amp; )</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual <link linkend="_util_8h_1aa62c75d314a0d1f37f79c4b73b2292e2">s32</link> <link linkend="classnjli_1_1_thread_builder_1a8103920282811ae5b15a0a4bafd68da8">calculateSerializeBufferSize</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual <link linkend="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66">void</link> <link linkend="classnjli_1_1_thread_builder_1a62c78b29c46d7df9b7716240d0cbeaec">serialize</link> (
<link linkend="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66">void</link> * , btSerializer * )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual <link linkend="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049">u32</link> <link linkend="classnjli_1_1_thread_builder_1aadf8787251238303ea4ed66d3646720c">getObjectType</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual const char * <link linkend="classnjli_1_1_thread_builder_1ad7ee70d967c641bed56ed5e5c4b1eed7">getClassName</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual <link linkend="_util_8h_1aa62c75d314a0d1f37f79c4b73b2292e2">s32</link> <link linkend="classnjli_1_1_thread_builder_1a204ebecd17055ed8c61a4728e289d329">getType</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="classnjli_1_1_thread_builder_1a8214e20ec29fe1e71f97b9916497f775">operator std::string</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="classnjli_1_1_thread_builder">ThreadBuilder</link> ** <link linkend="classnjli_1_1_thread_builder_1a602cd7eca7d3c71df536c32e430cadaf">createArray</link> (
const <link linkend="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049">u32</link> size)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66">void</link> <link linkend="classnjli_1_1_thread_builder_1a3206de9874c908cc6c0700781f04d5d0">destroyArray</link> (
<link linkend="classnjli_1_1_thread_builder">ThreadBuilder</link> ** array, const <link linkend="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049">u32</link> size)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="classnjli_1_1_thread_builder">ThreadBuilder</link> * <link linkend="classnjli_1_1_thread_builder_1af9d34834b3e1c597062aa8ba3cc9202a">create</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="classnjli_1_1_thread_builder">ThreadBuilder</link> * <link linkend="classnjli_1_1_thread_builder_1a6accf6a772f344091930e2004ea4038d">clone</link> (
const <link linkend="classnjli_1_1_thread_builder">ThreadBuilder</link> &amp; object)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66">void</link> <link linkend="classnjli_1_1_thread_builder_1a7165d5e0c4523d1174d7d660d8701081">destroy</link> (
<link linkend="classnjli_1_1_thread_builder">ThreadBuilder</link> * object)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66">void</link> <link linkend="classnjli_1_1_thread_builder_1a9812137b110eb6b877466ee36ce134bd">load</link> (
<link linkend="classnjli_1_1_thread_builder">ThreadBuilder</link> &amp; object, lua_State * L, int stack_index)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049">u32</link> <link linkend="classnjli_1_1_thread_builder_1a648198257fe14369e1868a420e1bab47">type</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <simplesect>
            <title>Detailed Description</title>

<para>Builder for <link linkend="classnjli_1_1_thread">Thread</link> </para>
                <para>Definition at line 28 of file ThreadBuilder.h</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>ThreadBuilder.h</para></listitem></itemizedlist></para>
        </simplesect>
            <section xml:id="classnjli_1_1_thread_builder_1a9227bab7e740e9493bc07a7fbfd705ff">
                <title>njli::ThreadBuilder::ThreadBuilder ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classnjli_1_1_thread_builder_1a887f0a70d7ad02680d18fa7d60300f8b">
                <title>njli::ThreadBuilder::ThreadBuilder (const ThreadBuilder &amp;)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classnjli_1_1_thread_builder_1af26adc22112326d0e02b78f5aa52b3a8">
                <title>njli::ThreadBuilder::BT_DECLARE_ALIGNED_ALLOCATOR ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classnjli_1_1_thread_builder_1ad9458b68332b469230ed9f58095d94bb">
                <title>virtual njli::ThreadBuilder::~ThreadBuilder ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classnjli_1_1_thread_builder_1af415f719c34b3251f66a2de69a7456ac">
                <title>ThreadBuilder&amp; njli::ThreadBuilder::operator= (const ThreadBuilder &amp;)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classnjli_1_1_thread_builder_1a8103920282811ae5b15a0a4bafd68da8">
                <title>virtual s32 njli::ThreadBuilder::calculateSerializeBufferSize () const</title> <emphasis></emphasis>
                
<para>Calculate the buffer size of this object.</para>

<para><formalpara><title>Returns: </title>

<para>The buffer size. </para>
</formalpara>
</para>

            </section>
            <section xml:id="classnjli_1_1_thread_builder_1a62c78b29c46d7df9b7716240d0cbeaec">
                <title>virtual void njli::ThreadBuilder::serialize (void *, btSerializer *) const</title> <emphasis></emphasis>
                
<para>Serialize this object.</para>

<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>btSerializer</entry>
                                <entry>
<para>the serializer which does the serialize. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="classnjli_1_1_thread_builder_1aadf8787251238303ea4ed66d3646720c">
                <title>virtual u32 njli::ThreadBuilder::getObjectType () const</title> <emphasis></emphasis>
                
<para>Get the type of <link linkend="namespacenjli_1a6d56d4fbaf89fcf3e3d32839df05b444">njliObjectEnumType</link> enum value, which this builder builds.</para>

<para><formalpara><title>Returns: </title>

<para>The <link linkend="namespacenjli_1a6d56d4fbaf89fcf3e3d32839df05b444">njliObjectEnumType</link> enum value. </para>
</formalpara>
</para>

            </section>
            <section xml:id="classnjli_1_1_thread_builder_1ad7ee70d967c641bed56ed5e5c4b1eed7">
                <title>virtual const char* njli::ThreadBuilder::getClassName () const</title> <emphasis></emphasis>
                
<para>The name of this class.</para>

<para><formalpara><title>Returns: </title>

<para>The name of this class. </para>
</formalpara>
</para>

            </section>
            <section xml:id="classnjli_1_1_thread_builder_1a204ebecd17055ed8c61a4728e289d329">
                <title>virtual s32 njli::ThreadBuilder::getType () const</title> <emphasis></emphasis>
                
<para>Get the type of <link linkend="namespacenjli_1a6d56d4fbaf89fcf3e3d32839df05b444">njliObjectEnumType</link> enum value.</para>

<para><formalpara><title>Returns: </title>

<para>The <link linkend="namespacenjli_1a6d56d4fbaf89fcf3e3d32839df05b444">njliObjectEnumType</link> enum value. </para>
</formalpara>
</para>

            </section>
            <section xml:id="classnjli_1_1_thread_builder_1a8214e20ec29fe1e71f97b9916497f775">
                <title>njli::ThreadBuilder::operator std::string () const</title> <emphasis></emphasis>
                
<para>The string value for this object, which can be used for debugging.</para>

<para><formalpara><title>Returns: </title>

<para>&quot;The string value for this object. </para>
</formalpara>
</para>

            </section>
            <section xml:id="classnjli_1_1_thread_builder_1a602cd7eca7d3c71df536c32e430cadaf">
                <title>static ThreadBuilder** njli::ThreadBuilder::createArray (const u32 size)</title> <emphasis></emphasis>
                
<para>Create an Array of instances of this class.</para>

<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>size</entry>
                                <entry>
<para>The amount of elements in the array.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                <formalpara><title>Returns: </title>

<para>Pointer to the newly created array. </para>
</formalpara>
</para>

            </section>
            <section xml:id="classnjli_1_1_thread_builder_1a3206de9874c908cc6c0700781f04d5d0">
                <title>static void njli::ThreadBuilder::destroyArray (ThreadBuilder **array, const u32 size)</title> <emphasis></emphasis>
                
<para>Destroy an Array of this class type.</para>

<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>array</entry>
                                <entry>
<para>The Pointer to the array to delete. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="classnjli_1_1_thread_builder_1af9d34834b3e1c597062aa8ba3cc9202a">
                <title>static ThreadBuilder* njli::ThreadBuilder::create ()</title> <emphasis></emphasis>
                
<para>Create an instance of this class.</para>

<para><formalpara><title>Returns: </title>

<para>Pointer to the newly created instance. </para>
</formalpara>
</para>

            </section>
            <section xml:id="classnjli_1_1_thread_builder_1a6accf6a772f344091930e2004ea4038d">
                <title>static ThreadBuilder* njli::ThreadBuilder::clone (const ThreadBuilder &amp;object)</title> <emphasis></emphasis>
                
<para>Create a clone of an instance of this class.</para>

<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>object</entry>
                                <entry>
<para>The object to clone.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                <formalpara><title>Returns: </title>

<para>Pointer to the newly created instance. </para>
</formalpara>
</para>

            </section>
            <section xml:id="classnjli_1_1_thread_builder_1a7165d5e0c4523d1174d7d660d8701081">
                <title>static void njli::ThreadBuilder::destroy (ThreadBuilder *object)</title> <emphasis></emphasis>
                
<para>Destroy an instance of this class.</para>

<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>object</entry>
                                <entry>
<para>The object to destroy. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="classnjli_1_1_thread_builder_1a9812137b110eb6b877466ee36ce134bd">
                <title>static void njli::ThreadBuilder::load (ThreadBuilder &amp;object, lua_State *L, int stack_index)</title> <emphasis></emphasis>
                
<para>Load a lua table representation of this class. This is used for JLIM.create(object).</para>

<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>object</entry>
                                <entry>
<para>The object to load. </para>
</entry>
                            </row>
                            <row>
                                <entry>L</entry>
                                <entry>
<para>The current lua state. </para>
</entry>
                            </row>
                            <row>
                                <entry>stack_index</entry>
                                <entry>
<para>The stack index of the lua stack. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="classnjli_1_1_thread_builder_1a648198257fe14369e1868a420e1bab47">
                <title>static u32 njli::ThreadBuilder::type ()</title> <emphasis></emphasis>
                
<para>Get the type of <link linkend="namespacenjli_1a6d56d4fbaf89fcf3e3d32839df05b444">njliObjectEnumType</link> enum value.</para>

<para><formalpara><title>Returns: </title>

<para>The <link linkend="namespacenjli_1a6d56d4fbaf89fcf3e3d32839df05b444">njliObjectEnumType</link> enum value. </para>
</formalpara>
</para>

            </section>
</section>
