<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="classnjli_1_1_thread">
<title>njli::Thread class Reference</title>
<para>
    <programlisting>#include <link linkend="_thread_8h">&lt;Thread.h&gt;</link></programlisting>
</para>
<para>Inheritance diagram for njli::Thread</para>
<para>
    <figure>
        <title>Inheritance graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="classnjli_1_1_thread__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Collaboration diagram for njli::Thread</para>
<para>
    <figure>
        <title>Collaboration graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="classnjli_1_1_thread__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Private Attributes</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>unsigned char m_state</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int m_priority</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>pthread_t m_thread</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>unsigned int m_thread_hdl</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>JLIthreadcallback * m_JLIthreadcallback</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void * m_userdata</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="classnjli_1_1_thread_1a317e23ba8f0ced14960249e4c54c6090">Thread</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="classnjli_1_1_thread_1a0c051d119b52f3daec20229275c5f889">Thread</link> (
const <link linkend="classnjli_1_1_abstract_builder">AbstractBuilder</link> &amp; )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="classnjli_1_1_thread_1ab2c08ff55a50001e1da7e03b2a91f59f">Thread</link> (
const <link linkend="classnjli_1_1_thread">Thread</link> &amp; )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="classnjli_1_1_thread_1afb0a6e67e331179054954ece61fc0b9c">BT_DECLARE_ALIGNED_ALLOCATOR</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual <link linkend="classnjli_1_1_thread_1aa7d7a6a932929386936089618d4d7e3e">~Thread</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="classnjli_1_1_thread">Thread</link> &amp; <link linkend="classnjli_1_1_thread_1a6de32ea344863fe165a1200e36b36dc4">operator=</link> (
const <link linkend="classnjli_1_1_thread">Thread</link> &amp; )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66">void</link> <link linkend="classnjli_1_1_thread_1ad6f6f4cf48168e85787ad3c0d91f4d3d">setup</link> (
JLIthreadcallback * _JLIthreadcallback, <link linkend="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66">void</link> * _userdata, int _priority)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual <link linkend="_util_8h_1aa62c75d314a0d1f37f79c4b73b2292e2">s32</link> <link linkend="classnjli_1_1_thread_1aa3b2e7df4ade1f690d8325d788c67bef">calculateSerializeBufferSize</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual <link linkend="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66">void</link> <link linkend="classnjli_1_1_thread_1ae1acf75828f1ab2ee4a0f818dc849292">serialize</link> (
<link linkend="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66">void</link> * , btSerializer * )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual const char * <link linkend="classnjli_1_1_thread_1a212e294b12cb653e82d9e4ab96ebf006">getClassName</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual <link linkend="_util_8h_1aa62c75d314a0d1f37f79c4b73b2292e2">s32</link> <link linkend="classnjli_1_1_thread_1a38cbb608d012da083fd9d35ed87ba277">getType</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="classnjli_1_1_thread_1ad44cbca3ce255ac199d745ea3bd072de">operator std::string</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66">void</link> <link linkend="classnjli_1_1_thread_1a644871703e3eaa5f500f8ee9d38e64b9">setup</link> (
const std::string &amp; luaFunctionName, int _priority)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66">void</link> <link linkend="classnjli_1_1_thread_1add29f8799756f141a64f8b559445aa72">enablePause</link> (
bool enable)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="classnjli_1_1_thread_1ab0d4353d5fbca34da213eb4cbeb8bfe3">isPaused</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66">void</link> <link linkend="classnjli_1_1_thread_1a337a98642b6c61d7af26ecc942b7d12c">stop</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66">void</link> <link linkend="classnjli_1_1_thread_1a14bd06414dc70facee0ec6840ab52c7b">run</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66">void</link> <link linkend="classnjli_1_1_thread_1a087eb5f8d9f51cc476f12f1d10a3cb95">setName</link> (
const char * name)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>const char * <link linkend="classnjli_1_1_thread_1ad41266885be835f3ee602311e20877a4">getName</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual <link linkend="classnjli_1_1_abstract_factory_object">AbstractFactoryObject</link> * <link linkend="classnjli_1_1_thread_1a83a8876ae63b92804004cf3febe76573">create</link> (
const <link linkend="classnjli_1_1_abstract_builder">AbstractBuilder</link> &amp; builder)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>const <link linkend="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66">void</link> * <link linkend="classnjli_1_1_thread_1ac4ca71716ed832be357f15f8262c8448">getPointer</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="_util_8h_1ad758b7a5c3f18ed79d2fcd23d9f16357">u64</link> <link linkend="classnjli_1_1_thread_1a4ffddf141a426a5a07d0ac19f1913811">getPointerValue</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual <link linkend="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66">void</link> <link linkend="classnjli_1_1_thread_1a4fc4bcd9d1930911474210c047372fc0">serializeObject</link> (
class btSerializer * serializer)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="classnjli_1_1_thread">Thread</link> ** <link linkend="classnjli_1_1_thread_1a30ca432834fe539f3560b9964f789a0f">createArray</link> (
const <link linkend="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049">u32</link> size)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66">void</link> <link linkend="classnjli_1_1_thread_1abfca36fb1618366c5c196a2c7076c245">destroyArray</link> (
<link linkend="classnjli_1_1_thread">Thread</link> ** array, const <link linkend="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049">u32</link> size)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="classnjli_1_1_thread">Thread</link> * <link linkend="classnjli_1_1_thread_1a1d5d960366afef7d49c9798d2ee7e6f0">create</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="classnjli_1_1_thread">Thread</link> * <link linkend="classnjli_1_1_thread_1afc6765a4e6e64e05e28013bdbc2dd38c">create</link> (
const <link linkend="classnjli_1_1_thread_builder">ThreadBuilder</link> &amp; builder)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="classnjli_1_1_thread">Thread</link> * <link linkend="classnjli_1_1_thread_1a704923b90ea123659acaa4545b76c8b3">clone</link> (
const <link linkend="classnjli_1_1_thread">Thread</link> &amp; object)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="classnjli_1_1_thread">Thread</link> * <link linkend="classnjli_1_1_thread_1ae4597841975827e25aaeea32f4e465fa">copy</link> (
const <link linkend="classnjli_1_1_thread">Thread</link> &amp; object)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66">void</link> <link linkend="classnjli_1_1_thread_1a9fa49919c924343758d9148294ad8e6e">destroy</link> (
<link linkend="classnjli_1_1_thread">Thread</link> * object)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66">void</link> <link linkend="classnjli_1_1_thread_1abf32abdd7ee4778ae166033b2295e444">load</link> (
<link linkend="classnjli_1_1_thread">Thread</link> &amp; object, lua_State * L, int stack_index)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049">u32</link> <link linkend="classnjli_1_1_thread_1ae805bd8ca1582bfe6da7c73516c76d6d">type</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <simplesect>
            <title>Detailed Description</title>

<para>&lt;#Description#&gt; </para>
                <para>Definition at line 34 of file Thread.h</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>Thread.h</para></listitem></itemizedlist></para>
        </simplesect>
        <section>
            <title>Member Data Documentation</title>
        </section>
            <section xml:id="classnjli_1_1_thread_1a317e23ba8f0ced14960249e4c54c6090">
                <title>njli::Thread::Thread ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classnjli_1_1_thread_1a0c051d119b52f3daec20229275c5f889">
                <title>njli::Thread::Thread (const AbstractBuilder &amp;)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classnjli_1_1_thread_1ab2c08ff55a50001e1da7e03b2a91f59f">
                <title>njli::Thread::Thread (const Thread &amp;)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classnjli_1_1_thread_1afb0a6e67e331179054954ece61fc0b9c">
                <title>njli::Thread::BT_DECLARE_ALIGNED_ALLOCATOR ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classnjli_1_1_thread_1aa7d7a6a932929386936089618d4d7e3e">
                <title>virtual njli::Thread::~Thread ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classnjli_1_1_thread_1a6de32ea344863fe165a1200e36b36dc4">
                <title>Thread&amp; njli::Thread::operator= (const Thread &amp;)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classnjli_1_1_thread_1ad6f6f4cf48168e85787ad3c0d91f4d3d">
                <title>void njli::Thread::setup (JLIthreadcallback *_JLIthreadcallback, void *_userdata, int _priority)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classnjli_1_1_thread_1aa3b2e7df4ade1f690d8325d788c67bef">
                <title>virtual s32 njli::Thread::calculateSerializeBufferSize () const</title> <emphasis></emphasis>
                
<para>Calculate the buffer size of this object.</para>

<para><formalpara><title>Returns: </title>

<para>The buffer size. </para>
</formalpara>
</para>

            </section>
            <section xml:id="classnjli_1_1_thread_1ae1acf75828f1ab2ee4a0f818dc849292">
                <title>virtual void njli::Thread::serialize (void *, btSerializer *) const</title> <emphasis></emphasis>
                
<para>Serialize this object.</para>

<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>btSerializer</entry>
                                <entry>
<para>the serializer which does the serialize. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="classnjli_1_1_thread_1a212e294b12cb653e82d9e4ab96ebf006">
                <title>virtual const char* njli::Thread::getClassName () const</title> <emphasis></emphasis>
                
<para>The name of this class.</para>

<para><formalpara><title>Returns: </title>

<para>The name of this class. </para>
</formalpara>
</para>

            </section>
            <section xml:id="classnjli_1_1_thread_1a38cbb608d012da083fd9d35ed87ba277">
                <title>virtual s32 njli::Thread::getType () const</title> <emphasis></emphasis>
                
<para>Get the type of <link linkend="namespacenjli_1a6d56d4fbaf89fcf3e3d32839df05b444">njliObjectEnumType</link> enum value.</para>

<para><formalpara><title>Returns: </title>

<para>The <link linkend="namespacenjli_1a6d56d4fbaf89fcf3e3d32839df05b444">njliObjectEnumType</link> enum value. </para>
</formalpara>
</para>

            </section>
            <section xml:id="classnjli_1_1_thread_1ad44cbca3ce255ac199d745ea3bd072de">
                <title>njli::Thread::operator std::string () const</title> <emphasis></emphasis>
                
<para>The string value for this object, which can be used for debugging.</para>

<para><formalpara><title>Returns: </title>

<para>&quot;The string value for this object. </para>
</formalpara>
</para>

            </section>
            <section xml:id="classnjli_1_1_thread_1a644871703e3eaa5f500f8ee9d38e64b9">
                <title>void njli::Thread::setup (const std::string &amp;luaFunctionName, int _priority)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classnjli_1_1_thread_1add29f8799756f141a64f8b559445aa72">
                <title>void njli::Thread::enablePause (bool enable=true)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classnjli_1_1_thread_1ab0d4353d5fbca34da213eb4cbeb8bfe3">
                <title>bool njli::Thread::isPaused () const</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classnjli_1_1_thread_1a337a98642b6c61d7af26ecc942b7d12c">
                <title>void njli::Thread::stop ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classnjli_1_1_thread_1a14bd06414dc70facee0ec6840ab52c7b">
                <title>void njli::Thread::run ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classnjli_1_1_thread_1a087eb5f8d9f51cc476f12f1d10a3cb95">
                <title>void njli::AbstractDecorator::setName (const char *name)</title> <emphasis></emphasis>
                
<para>&lt;#Description#&gt;</para>

<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>name</entry>
                                <entry>
<para>&lt;#name description#&gt; </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="classnjli_1_1_thread_1ad41266885be835f3ee602311e20877a4">
                <title>const char* njli::AbstractDecorator::getName () const</title> <emphasis></emphasis>
                
<para>&lt;#Description#&gt;</para>

<para><formalpara><title>Returns: </title>

<para>&lt;#return value description#&gt; </para>
</formalpara>
</para>

            </section>
            <section xml:id="classnjli_1_1_thread_1a83a8876ae63b92804004cf3febe76573">
                <title>virtual AbstractFactoryObject* njli::AbstractFactoryObject::create (const AbstractBuilder &amp;builder) const</title> <emphasis></emphasis>
                
<para>&lt;#Description#&gt;</para>

<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>builder</entry>
                                <entry>
<para>&lt;#builder description#&gt;</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                <formalpara><title>Returns: </title>

<para>&lt;#return value description#&gt; </para>
</formalpara>
</para>

            </section>
            <section xml:id="classnjli_1_1_thread_1ac4ca71716ed832be357f15f8262c8448">
                <title>const void* njli::AbstractFactoryObject::getPointer () const</title> <emphasis></emphasis>
                
<para>&lt;#Description#&gt; </para>

            </section>
            <section xml:id="classnjli_1_1_thread_1a4ffddf141a426a5a07d0ac19f1913811">
                <title>u64 njli::AbstractFactoryObject::getPointerValue () const</title> <emphasis></emphasis>
                
<para>&lt;#Description#&gt;</para>

<para><formalpara><title>Returns: </title>

<para>&lt;#return value description#&gt; </para>
</formalpara>
</para>

            </section>
            <section xml:id="classnjli_1_1_thread_1a4fc4bcd9d1930911474210c047372fc0">
                <title>virtual void njli::AbstractFactoryObject::serializeObject (class btSerializer *serializer) const</title> <emphasis></emphasis>
                
<para>&lt;#Description#&gt;</para>

<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>serializer</entry>
                                <entry>
<para>&lt;#serializer description#&gt; </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="classnjli_1_1_thread_1a30ca432834fe539f3560b9964f789a0f">
                <title>static Thread** njli::Thread::createArray (const u32 size)</title> <emphasis></emphasis>
                
<para>Create an Array of instances of this class.</para>

<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>size</entry>
                                <entry>
<para>The amount of elements in the array.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                <formalpara><title>Returns: </title>

<para>Pointer to the newly created array. </para>
</formalpara>
</para>

            </section>
            <section xml:id="classnjli_1_1_thread_1abfca36fb1618366c5c196a2c7076c245">
                <title>static void njli::Thread::destroyArray (Thread **array, const u32 size)</title> <emphasis></emphasis>
                
<para>Destroy an Array of this class type.</para>

<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>array</entry>
                                <entry>
<para>The Pointer to the array to delete. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="classnjli_1_1_thread_1a1d5d960366afef7d49c9798d2ee7e6f0">
                <title>static Thread* njli::Thread::create ()</title> <emphasis></emphasis>
                
<para>Create an instance of this class.</para>

<para><formalpara><title>Returns: </title>

<para>Pointer to the newly created instance. </para>
</formalpara>
</para>

            </section>
            <section xml:id="classnjli_1_1_thread_1afc6765a4e6e64e05e28013bdbc2dd38c">
                <title>static Thread* njli::Thread::create (const ThreadBuilder &amp;builder)</title> <emphasis></emphasis>
                
<para>Create an instance of this class using a builder.</para>

<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>builder</entry>
                                <entry>
<para>The builder to use for construction</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                <formalpara><title>Returns: </title>

<para>Pointer to the newly created instance. </para>
</formalpara>
</para>

            </section>
            <section xml:id="classnjli_1_1_thread_1a704923b90ea123659acaa4545b76c8b3">
                <title>static Thread* njli::Thread::clone (const Thread &amp;object)</title> <emphasis></emphasis>
                
<para>Create a shallow copy of an instance of this class (sharing pointers).</para>

<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>object</entry>
                                <entry>
<para>The object to clone. <literallayout> @return Pointer to the newly created instance.</literallayout> </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="classnjli_1_1_thread_1ae4597841975827e25aaeea32f4e465fa">
                <title>static Thread* njli::Thread::copy (const Thread &amp;object)</title> <emphasis></emphasis>
                
<para>Create a deep copy of an instance of this class (NOT sharing pointers).</para>

<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>object</entry>
                                <entry>
<para>The object to clone. <literallayout> @return Pointer to the newly created instance.</literallayout> </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="classnjli_1_1_thread_1a9fa49919c924343758d9148294ad8e6e">
                <title>static void njli::Thread::destroy (Thread *object)</title> <emphasis></emphasis>
                
<para>Destroy an instance of this class.</para>

<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>object</entry>
                                <entry>
<para>The object to destroy. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="classnjli_1_1_thread_1abf32abdd7ee4778ae166033b2295e444">
                <title>static void njli::Thread::load (Thread &amp;object, lua_State *L, int stack_index)</title> <emphasis></emphasis>
                
<para>Load a lua table representation of this class. This is used for JLIM.create(object).</para>

<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>object</entry>
                                <entry>
<para>The object to load. </para>
</entry>
                            </row>
                            <row>
                                <entry>L</entry>
                                <entry>
<para>The current lua state. </para>
</entry>
                            </row>
                            <row>
                                <entry>stack_index</entry>
                                <entry>
<para>The stack index of the lua stack. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="classnjli_1_1_thread_1ae805bd8ca1582bfe6da7c73516c76d6d">
                <title>static u32 njli::Thread::type ()</title> <emphasis></emphasis>
                
<para>Get the type of <link linkend="namespacenjli_1a6d56d4fbaf89fcf3e3d32839df05b444">njliObjectEnumType</link> enum value.</para>

<para><formalpara><title>Returns: </title>

<para>The <link linkend="namespacenjli_1a6d56d4fbaf89fcf3e3d32839df05b444">njliObjectEnumType</link> enum value. </para>
</formalpara>
</para>

            </section>
</section>
