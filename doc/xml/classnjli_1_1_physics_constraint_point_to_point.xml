<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classnjli_1_1_physics_constraint_point_to_point" kind="class" language="C++" prot="public">
    <compoundname>njli::PhysicsConstraintPointToPoint</compoundname>
    <basecompoundref refid="classnjli_1_1_physics_constraint" prot="public" virt="non-virtual">njli::PhysicsConstraint</basecompoundref>
    <includes refid="_physics_constraint_point_to_point_8h" local="no">PhysicsConstraintPointToPoint.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classnjli_1_1_physics_constraint_point_to_point_1acb96ebb09abe8f2a37a915a842babfac" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class WorldFactory</definition>
        <argsstring></argsstring>
        <name>WorldFactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="33" column="1" bodyfile="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnjli_1_1_physics_constraint_point_to_point_1a54d76a95cd5fd595cc8c71715479cccf" prot="private" static="no" mutable="no">
        <type>btPoint2PointConstraint *</type>
        <definition>btPoint2PointConstraint* njli::PhysicsConstraintPointToPoint::m_btPoint2PointConstraint</definition>
        <argsstring></argsstring>
        <name>m_btPoint2PointConstraint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="202" column="1" bodyfile="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1a6fe4d9bb07a35df5e54e96762f305905" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>njli::PhysicsConstraintPointToPoint::PhysicsConstraintPointToPoint</definition>
        <argsstring>()</argsstring>
        <name>PhysicsConstraintPointToPoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1a2d1e3de4759eff8e43b414401a4508e9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>njli::PhysicsConstraintPointToPoint::PhysicsConstraintPointToPoint</definition>
        <argsstring>(const AbstractBuilder &amp;)</argsstring>
        <name>PhysicsConstraintPointToPoint</name>
        <param>
          <type>const <ref refid="classnjli_1_1_abstract_builder" kindref="compound">AbstractBuilder</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1a6809b9b60c90768e4677b9b398963073" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>njli::PhysicsConstraintPointToPoint::PhysicsConstraintPointToPoint</definition>
        <argsstring>(const PhysicsConstraintPointToPoint &amp;)</argsstring>
        <name>PhysicsConstraintPointToPoint</name>
        <param>
          <type>const <ref refid="classnjli_1_1_physics_constraint_point_to_point" kindref="compound">PhysicsConstraintPointToPoint</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1a07981bdbee82db7870f1fb69fbf190d6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>njli::PhysicsConstraintPointToPoint::BT_DECLARE_ALIGNED_ALLOCATOR</definition>
        <argsstring>()</argsstring>
        <name>BT_DECLARE_ALIGNED_ALLOCATOR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1ae32b237c28fc0dc8c0fb6a0d95ffc7be" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual njli::PhysicsConstraintPointToPoint::~PhysicsConstraintPointToPoint</definition>
        <argsstring>()</argsstring>
        <name>~PhysicsConstraintPointToPoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1a74aa555b80e55dbb4700e9f230bda563" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnjli_1_1_physics_constraint_point_to_point" kindref="compound">PhysicsConstraintPointToPoint</ref> &amp;</type>
        <definition>PhysicsConstraintPointToPoint&amp; njli::PhysicsConstraintPointToPoint::operator=</definition>
        <argsstring>(const PhysicsConstraintPointToPoint &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classnjli_1_1_physics_constraint_point_to_point" kindref="compound">PhysicsConstraintPointToPoint</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1ac6660242268a76ff271f041fe22ea52a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>btTypedConstraint *</type>
        <definition>virtual btTypedConstraint* njli::PhysicsConstraintPointToPoint::getConstraint</definition>
        <argsstring>()</argsstring>
        <name>getConstraint</name>
        <reimplements refid="classnjli_1_1_physics_constraint_1a0a22d54c2c896af49fa57db9be76a5da">getConstraint</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1a2ee05517ec402655c0953184dc7642b3" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const btTypedConstraint *</type>
        <definition>virtual const btTypedConstraint* njli::PhysicsConstraintPointToPoint::getConstraint</definition>
        <argsstring>() const</argsstring>
        <name>getConstraint</name>
        <reimplements refid="classnjli_1_1_physics_constraint_1af4cb8c0158a044f75fe61f89cc278338">getConstraint</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1a337401a0a9ad667b5d7c952913c40852" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>virtual void njli::PhysicsConstraintPointToPoint::removeConstraint</definition>
        <argsstring>()</argsstring>
        <name>removeConstraint</name>
        <reimplements refid="classnjli_1_1_physics_constraint_1ae3dc487da3069d859bb4ddb05aa2e779">removeConstraint</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="199" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1af0766c0d2de84aa206cd4fcc33b6b9ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_util_8h_1aa62c75d314a0d1f37f79c4b73b2292e2" kindref="member">s32</ref></type>
        <definition>virtual s32 njli::PhysicsConstraintPointToPoint::calculateSerializeBufferSize</definition>
        <argsstring>() const</argsstring>
        <name>calculateSerializeBufferSize</name>
        <reimplements refid="classnjli_1_1_physics_constraint_1aeda6c35ab271897cfe3192870d4ac7a4">calculateSerializeBufferSize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt;#Description#&gt;</para><para><simplesect kind="return"><para>&lt;#return value description#&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1a9327a02aa2883e39074baf3503c2ddcc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>virtual void njli::PhysicsConstraintPointToPoint::serialize</definition>
        <argsstring>(void *dataBuffer, btSerializer *) const</argsstring>
        <name>serialize</name>
        <reimplements refid="classnjli_1_1_physics_constraint_1ae294d089963246a8e65b41913730efb1">serialize</reimplements>
        <param>
          <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref> *</type>
          <declname>dataBuffer</declname>
        </param>
        <param>
          <type>btSerializer *</type>
        </param>
        <briefdescription>
<para>&lt;#Description#&gt; </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>James Folk, 16-02-11 15:02:26</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>&lt;#dataBuffer description#&gt; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>btSerializer</parametername>
</parameternamelist>
<parameterdescription>
<para>&lt;#btSerializer description#&gt; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1a98c21294338cec0671e817ff2c2afc2f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const char *</type>
        <definition>virtual const char* njli::PhysicsConstraintPointToPoint::getClassName</definition>
        <argsstring>() const</argsstring>
        <name>getClassName</name>
        <reimplements refid="classnjli_1_1_physics_constraint_1a4d31c5267199972942d66b3480374010">getClassName</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt;#Description#&gt;</para><para><simplesect kind="return"><para>&lt;#return value description#&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1a1daae07c31eb59ee245674d465919cec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_util_8h_1aa62c75d314a0d1f37f79c4b73b2292e2" kindref="member">s32</ref></type>
        <definition>virtual s32 njli::PhysicsConstraintPointToPoint::getType</definition>
        <argsstring>() const</argsstring>
        <name>getType</name>
        <reimplements refid="classnjli_1_1_physics_constraint_1a3234aefaf2706165fbc52b5b37c05888">getType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt;#Description#&gt;</para><para><simplesect kind="return"><para>&lt;#return value description#&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1a17b1f8d141a377f71ffeca21d6dad0f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>njli::PhysicsConstraintPointToPoint::operator std::string</definition>
        <argsstring>() const</argsstring>
        <name>operator std::string</name>
        <reimplements refid="classnjli_1_1_physics_constraint_1a4cb967ebae1b139bc7511bc9fcc074c5">operator std::string</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt;#Description#&gt;</para><para><simplesect kind="return"><para>&lt;#return value description#&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1af5f949ec6492fd8c96d5ae03a3aa6436" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>void njli::PhysicsConstraintPointToPoint::setNodes</definition>
        <argsstring>(Node *nodeA, Node *nodeB, const btVector3 &amp;pivotInA=btVector3(0, 0, 0), const btVector3 &amp;pivotInB=btVector3(0, 0, 0))</argsstring>
        <name>setNodes</name>
        <param>
          <type><ref refid="classnjli_1_1_node" kindref="compound">Node</ref> *</type>
          <declname>nodeA</declname>
        </param>
        <param>
          <type><ref refid="classnjli_1_1_node" kindref="compound">Node</ref> *</type>
          <declname>nodeB</declname>
        </param>
        <param>
          <type>const btVector3 &amp;</type>
          <declname>pivotInA</declname>
          <defval>btVector3(0, 0, 0)</defval>
        </param>
        <param>
          <type>const btVector3 &amp;</type>
          <declname>pivotInB</declname>
          <defval>btVector3(0, 0, 0)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt;#Description#&gt;</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nodeA</parametername>
</parameternamelist>
<parameterdescription>
<para>&lt;#nodeA description#&gt; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nodeB</parametername>
</parameternamelist>
<parameterdescription>
<para>&lt;#nodeB description#&gt; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1acbf07690cbef3072ee6b5c141a4d21c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>void njli::PhysicsConstraintPointToPoint::setNodes</definition>
        <argsstring>(Node *nodeA, const btVector3 &amp;pivotInA=btVector3(0, 0, 0))</argsstring>
        <name>setNodes</name>
        <param>
          <type><ref refid="classnjli_1_1_node" kindref="compound">Node</ref> *</type>
          <declname>nodeA</declname>
        </param>
        <param>
          <type>const btVector3 &amp;</type>
          <declname>pivotInA</declname>
          <defval>btVector3(0, 0, 0)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt;#Description#&gt;</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nodeA</parametername>
</parameternamelist>
<parameterdescription>
<para>&lt;#nodeA description#&gt; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1a22513468676e92e523caea9e7c0e5ae7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>void njli::PhysicsConstraintPointToPoint::setPivotInA</definition>
        <argsstring>(const btVector3 &amp;pivot)</argsstring>
        <name>setPivotInA</name>
        <param>
          <type>const btVector3 &amp;</type>
          <declname>pivot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt;#Description#&gt;</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pivot</parametername>
</parameternamelist>
<parameterdescription>
<para>&lt;#pivot description#&gt; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1aab12a17b9530cd91700860c6e8e1fc3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>void njli::PhysicsConstraintPointToPoint::setPivotInB</definition>
        <argsstring>(const btVector3 &amp;pivot)</argsstring>
        <name>setPivotInB</name>
        <param>
          <type>const btVector3 &amp;</type>
          <declname>pivot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt;#Description#&gt;</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pivot</parametername>
</parameternamelist>
<parameterdescription>
<para>&lt;#pivot description#&gt; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1a0081daad53ef60302f884626e1da987b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const btVector3 &amp;</type>
        <definition>const btVector3&amp; njli::PhysicsConstraintPointToPoint::getPivotInA</definition>
        <argsstring>() const</argsstring>
        <name>getPivotInA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt;#Description#&gt;</para><para><simplesect kind="return"><para>&lt;#return value description#&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1aaf9a440f01231b52ff5b4e6cc390ed25" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const btVector3 &amp;</type>
        <definition>const btVector3&amp; njli::PhysicsConstraintPointToPoint::getPivotInB</definition>
        <argsstring>() const</argsstring>
        <name>getPivotInB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt;#Description#&gt;</para><para><simplesect kind="return"><para>&lt;#return value description#&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="193" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1a267ed31f1fb0083be950281b9bea0385" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnjli_1_1_physics_constraint_point_to_point" kindref="compound">PhysicsConstraintPointToPoint</ref> **</type>
        <definition>static PhysicsConstraintPointToPoint** njli::PhysicsConstraintPointToPoint::createArray</definition>
        <argsstring>(const u32 size)</argsstring>
        <name>createArray</name>
        <param>
          <type>const <ref refid="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049" kindref="member">u32</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt;#Description#&gt;</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>&lt;#size description#&gt;</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&lt;#return value description#&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1a44225e2e07a7792db8d50f752621c526" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>static void njli::PhysicsConstraintPointToPoint::destroyArray</definition>
        <argsstring>(PhysicsConstraintPointToPoint **array, const u32 size=0)</argsstring>
        <name>destroyArray</name>
        <param>
          <type><ref refid="classnjli_1_1_physics_constraint_point_to_point" kindref="compound">PhysicsConstraintPointToPoint</ref> **</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const <ref refid="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049" kindref="member">u32</ref></type>
          <declname>size</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt;#Description#&gt;</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>&lt;#array description#&gt; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1a76dd0450878d6b069bf8533024255a6e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnjli_1_1_physics_constraint_point_to_point" kindref="compound">PhysicsConstraintPointToPoint</ref> *</type>
        <definition>static PhysicsConstraintPointToPoint* njli::PhysicsConstraintPointToPoint::create</definition>
        <argsstring>()</argsstring>
        <name>create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt;#Description#&gt;</para><para><simplesect kind="return"><para>&lt;#return value description#&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1a10657194042f642076ba63d6e34246a8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnjli_1_1_physics_constraint_point_to_point" kindref="compound">PhysicsConstraintPointToPoint</ref> *</type>
        <definition>static PhysicsConstraintPointToPoint* njli::PhysicsConstraintPointToPoint::create</definition>
        <argsstring>(const PhysicsConstraintPointToPointBuilder &amp;builder)</argsstring>
        <name>create</name>
        <param>
          <type>const <ref refid="classnjli_1_1_physics_constraint_point_to_point_builder" kindref="compound">PhysicsConstraintPointToPointBuilder</ref> &amp;</type>
          <declname>builder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt;#Description#&gt;</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>builder</parametername>
</parameternamelist>
<parameterdescription>
<para>&lt;#builder description#&gt;</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&lt;#return value description#&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1aa68a1860b305a227593fe00442bb8846" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnjli_1_1_physics_constraint_point_to_point" kindref="compound">PhysicsConstraintPointToPoint</ref> *</type>
        <definition>static PhysicsConstraintPointToPoint* njli::PhysicsConstraintPointToPoint::clone</definition>
        <argsstring>(const PhysicsConstraintPointToPoint &amp;object)</argsstring>
        <name>clone</name>
        <param>
          <type>const <ref refid="classnjli_1_1_physics_constraint_point_to_point" kindref="compound">PhysicsConstraintPointToPoint</ref> &amp;</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt;#Description#&gt;</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>&lt;#object description#&gt;</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&lt;#return value description#&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1abcabf8d381d2c8c7adc66b3ad6a4eb08" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnjli_1_1_physics_constraint_point_to_point" kindref="compound">PhysicsConstraintPointToPoint</ref> *</type>
        <definition>static PhysicsConstraintPointToPoint* njli::PhysicsConstraintPointToPoint::copy</definition>
        <argsstring>(const PhysicsConstraintPointToPoint &amp;object)</argsstring>
        <name>copy</name>
        <param>
          <type>const <ref refid="classnjli_1_1_physics_constraint_point_to_point" kindref="compound">PhysicsConstraintPointToPoint</ref> &amp;</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt;#Description#&gt;</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>&lt;#object description#&gt;</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&lt;#return value description#&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1a99954ab0a125669815fcde1d80868f87" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>static void njli::PhysicsConstraintPointToPoint::destroy</definition>
        <argsstring>(PhysicsConstraintPointToPoint *object)</argsstring>
        <name>destroy</name>
        <param>
          <type><ref refid="classnjli_1_1_physics_constraint_point_to_point" kindref="compound">PhysicsConstraintPointToPoint</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt;#Description#&gt;</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>&lt;#object description#&gt; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1a1b48c6302604d867278645b18e4119ea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>static void njli::PhysicsConstraintPointToPoint::load</definition>
        <argsstring>(PhysicsConstraintPointToPoint &amp;object, lua_State *L, int stack_index)</argsstring>
        <name>load</name>
        <param>
          <type><ref refid="classnjli_1_1_physics_constraint_point_to_point" kindref="compound">PhysicsConstraintPointToPoint</ref> &amp;</type>
          <declname>object</declname>
        </param>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stack_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt;#Description#&gt;</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>&lt;#object description#&gt; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>&lt;#L description#&gt; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stack_index</parametername>
</parameternamelist>
<parameterdescription>
<para>&lt;#stack_index description#&gt; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnjli_1_1_physics_constraint_point_to_point_1ac1f72e0fab59953758302de4b5c8fb72" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049" kindref="member">u32</ref></type>
        <definition>static u32 njli::PhysicsConstraintPointToPoint::type</definition>
        <argsstring>()</argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt;#Description#&gt;</para><para><simplesect kind="return"><para>&lt;#return value description#&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="149" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>&lt;#Description#&gt; </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1477">
        <label>njli::AbstractFactoryObject</label>
        <link refid="classnjli_1_1_abstract_factory_object"/>
        <childnode refid="1478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1476">
        <label>njli::PhysicsConstraint</label>
        <link refid="classnjli_1_1_physics_constraint"/>
        <childnode refid="1477" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1479">
        <label>njli::AbstractDecorator</label>
        <link refid="classnjli_1_1_abstract_decorator"/>
      </node>
      <node id="1478">
        <label>njli::AbstractObject</label>
        <link refid="classnjli_1_1_abstract_object"/>
        <childnode refid="1479" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1475">
        <label>njli::PhysicsConstraintPointToPoint</label>
        <link refid="classnjli_1_1_physics_constraint_point_to_point"/>
        <childnode refid="1476" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1482">
        <label>njli::AbstractFactoryObject</label>
        <link refid="classnjli_1_1_abstract_factory_object"/>
        <childnode refid="1483" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1481">
        <label>njli::PhysicsConstraint</label>
        <link refid="classnjli_1_1_physics_constraint"/>
        <childnode refid="1482" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1484">
        <label>njli::AbstractDecorator</label>
        <link refid="classnjli_1_1_abstract_decorator"/>
        <childnode refid="1484" relation="usage">
          <edgelabel>m_pParent</edgelabel>
        </childnode>
      </node>
      <node id="1483">
        <label>njli::AbstractObject</label>
        <link refid="classnjli_1_1_abstract_object"/>
        <childnode refid="1484" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1480">
        <label>njli::PhysicsConstraintPointToPoint</label>
        <link refid="classnjli_1_1_physics_constraint_point_to_point"/>
        <childnode refid="1481" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" line="32" column="1" bodyfile="njligames-njlic_engine/njli/physics/constraint/PhysicsConstraintPointToPoint.h" bodystart="30" bodyend="203"/>
    <listofallmembers>
      <member refid="classnjli_1_1_abstract_decorator_1aeebcf1e20165c7d17da774f57eb2a989" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>AbstractDecorator</name></member>
      <member refid="classnjli_1_1_abstract_factory_object_1ad8a2eaf0b14375ad9739a8968429739e" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>AbstractFactoryObject</name></member>
      <member refid="classnjli_1_1_abstract_decorator_1a6b94b03ed7bcf783795e02a628d46bca" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>addChild</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1a07981bdbee82db7870f1fb69fbf190d6" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>BT_DECLARE_ALIGNED_ALLOCATOR</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1af0766c0d2de84aa206cd4fcc33b6b9ea" prot="public" virt="virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>calculateSerializeBufferSize</name></member>
      <member refid="classnjli_1_1_abstract_factory_object_1aaa088eb7160046ccf467c0f29f509291" prot="protected" virt="virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>canDelete</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1aa68a1860b305a227593fe00442bb8846" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>clone</name></member>
      <member refid="classnjli_1_1_physics_constraint_1abffd36e886d036ee96c69857cfad4f9e" prot="public" virt="non-virtual" ambiguityscope="njli::PhysicsConstraint::"><scope>njli::PhysicsConstraintPointToPoint</scope><name>clone</name></member>
      <member refid="classnjli_1_1_abstract_factory_object_1a6236ab8114b3f3033bc9824b0980b055" prot="public" virt="virtual" ambiguityscope="njli::AbstractFactoryObject::"><scope>njli::PhysicsConstraintPointToPoint</scope><name>clone</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1abcabf8d381d2c8c7adc66b3ad6a4eb08" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>copy</name></member>
      <member refid="classnjli_1_1_physics_constraint_1a5c8b99c2a957918ee982a6101a4a6a8a" prot="public" virt="non-virtual" ambiguityscope="njli::PhysicsConstraint::"><scope>njli::PhysicsConstraintPointToPoint</scope><name>copy</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1a76dd0450878d6b069bf8533024255a6e" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>create</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1a10657194042f642076ba63d6e34246a8" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>create</name></member>
      <member refid="classnjli_1_1_physics_constraint_1ab3c5d215f3df6f2ae6f6d1492114449b" prot="public" virt="non-virtual" ambiguityscope="njli::PhysicsConstraint::"><scope>njli::PhysicsConstraintPointToPoint</scope><name>create</name></member>
      <member refid="classnjli_1_1_physics_constraint_1a83a8876ae63b92804004cf3febe76573" prot="public" virt="non-virtual" ambiguityscope="njli::PhysicsConstraint::"><scope>njli::PhysicsConstraintPointToPoint</scope><name>create</name></member>
      <member refid="classnjli_1_1_abstract_factory_object_1a83a8876ae63b92804004cf3febe76573" prot="public" virt="virtual" ambiguityscope="njli::AbstractFactoryObject::"><scope>njli::PhysicsConstraintPointToPoint</scope><name>create</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1a267ed31f1fb0083be950281b9bea0385" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>createArray</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1a99954ab0a125669815fcde1d80868f87" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>destroy</name></member>
      <member refid="classnjli_1_1_physics_constraint_1a3b197c229e8bd4a030a54bdba54e081a" prot="public" virt="non-virtual" ambiguityscope="njli::PhysicsConstraint::"><scope>njli::PhysicsConstraintPointToPoint</scope><name>destroy</name></member>
      <member refid="classnjli_1_1_abstract_factory_object_1afec18dff52178eaf73a64764c262d95a" prot="public" virt="virtual" ambiguityscope="njli::AbstractFactoryObject::"><scope>njli::PhysicsConstraintPointToPoint</scope><name>destroy</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1a44225e2e07a7792db8d50f752621c526" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>destroyArray</name></member>
      <member refid="classnjli_1_1_physics_constraint_1a100472a7edab98f9bcd213459f3ae2c6" prot="public" virt="non-virtual" ambiguityscope="njli::PhysicsConstraint::"><scope>njli::PhysicsConstraintPointToPoint</scope><name>destroyArray</name></member>
      <member refid="classnjli_1_1_abstract_factory_object_1a678b8f28320f6a7e2aa38d5ef72889a8" prot="protected" virt="virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>enableCanDelete</name></member>
      <member refid="classnjli_1_1_physics_constraint_1a2c3b06804d8447485c9170bca568b244" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>enableConstraint</name></member>
      <member refid="classnjli_1_1_abstract_factory_object_1a87597409cecc91b4d40be5e9b3a2d4dc" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>enableRenderObject</name></member>
      <member refid="classnjli_1_1_abstract_decorator_1a8bdc7cebaaeae22a9519a8839ff3eba0" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>findChild</name></member>
      <member refid="classnjli_1_1_abstract_decorator_1af924f47defa4cd007308847e1c6d9c2a" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>findChild</name></member>
      <member refid="classnjli_1_1_physics_constraint_1aaffa0c7d84f053e276d0fda61db14550" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getBreakingImpulseThreshold</name></member>
      <member refid="classnjli_1_1_abstract_decorator_1ab4685efa1283c203aabd7e8b4aa86fb4" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getChild</name></member>
      <member refid="classnjli_1_1_abstract_decorator_1a47f431982092b823d925ac031491d344" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getChild</name></member>
      <member refid="classnjli_1_1_abstract_decorator_1ad34934f1a89ae3a586af2ce17ab598d1" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getChildIndex</name></member>
      <member refid="classnjli_1_1_abstract_decorator_1a87aedeab22233d8e57b870abbaa61941" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getChildIndex</name></member>
      <member refid="classnjli_1_1_abstract_decorator_1a7bfa660dbfaeed3531c9041569bc23b3" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getChildren</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1a98c21294338cec0671e817ff2c2afc2f" prot="public" virt="virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getClassName</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1ac6660242268a76ff271f041fe22ea52a" prot="protected" virt="virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getConstraint</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1a2ee05517ec402655c0953184dc7642b3" prot="protected" virt="virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getConstraint</name></member>
      <member refid="classnjli_1_1_physics_constraint_1a2a02805fa70d5ba764986a0678dacb57" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getJointAppliedForceA</name></member>
      <member refid="classnjli_1_1_physics_constraint_1a62b371d9914b2206441be949df162afb" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getJointAppliedForceB</name></member>
      <member refid="classnjli_1_1_physics_constraint_1a4fb1d50043e450fd584d12852a756c79" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getJointAppliedTorqueA</name></member>
      <member refid="classnjli_1_1_physics_constraint_1a1df0c51cb5bb8bebbfc4474908df3f74" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getJointAppliedTorqueB</name></member>
      <member refid="classnjli_1_1_physics_constraint_1ad41266885be835f3ee602311e20877a4" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getName</name></member>
      <member refid="classnjli_1_1_abstract_decorator_1ad41266885be835f3ee602311e20877a4" prot="public" virt="non-virtual" ambiguityscope="njli::AbstractObject::"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getName</name></member>
      <member refid="classnjli_1_1_physics_constraint_1abe33286cebf5cb3c2e9440393f176517" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getNodeA</name></member>
      <member refid="classnjli_1_1_physics_constraint_1ac3722d2349aedf66ea3378f1d8e41e2e" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getNodeA</name></member>
      <member refid="classnjli_1_1_physics_constraint_1adecbad6334d7fbfdafc8bc5bab75d171" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getNodeB</name></member>
      <member refid="classnjli_1_1_physics_constraint_1aebd01f59387c919d255c07f1b1c0e0a2" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getNodeB</name></member>
      <member refid="classnjli_1_1_physics_constraint_1aea662a8e9b6eb74c2f772d35226aa79b" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getParent</name></member>
      <member refid="classnjli_1_1_physics_constraint_1a206984148059aa74e81ee7a3ae09ecb5" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getParent</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1a0081daad53ef60302f884626e1da987b" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getPivotInA</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1aaf9a440f01231b52ff5b4e6cc390ed25" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getPivotInB</name></member>
      <member refid="classnjli_1_1_physics_constraint_1ac4ca71716ed832be357f15f8262c8448" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getPointer</name></member>
      <member refid="classnjli_1_1_abstract_factory_object_1ac4ca71716ed832be357f15f8262c8448" prot="public" virt="non-virtual" ambiguityscope="njli::AbstractFactoryObject::"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getPointer</name></member>
      <member refid="classnjli_1_1_physics_constraint_1a4ffddf141a426a5a07d0ac19f1913811" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getPointerValue</name></member>
      <member refid="classnjli_1_1_abstract_factory_object_1a4ffddf141a426a5a07d0ac19f1913811" prot="public" virt="non-virtual" ambiguityscope="njli::AbstractFactoryObject::"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getPointerValue</name></member>
      <member refid="classnjli_1_1_abstract_decorator_1a1892eb8a5216ffbbe937e747a0d1d141" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getTag</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1a1daae07c31eb59ee245674d465919cec" prot="public" virt="virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>getType</name></member>
      <member refid="classnjli_1_1_abstract_decorator_1ad483ceb78102e1a2ac489d2d5d58674c" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>hasChild</name></member>
      <member refid="classnjli_1_1_abstract_decorator_1a64c272cd1d9c212dacad178db49e2b20" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>hasChildren</name></member>
      <member refid="classnjli_1_1_abstract_decorator_1ae68a7fd88bfd50c2d3dd7831f9e95e09" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>hasParent</name></member>
      <member refid="classnjli_1_1_physics_constraint_1abb9996d3456e93ba7027d85f038d10a9" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>isConstraintEnabled</name></member>
      <member refid="classnjli_1_1_abstract_factory_object_1a75e5bb1d52f364d303a0a38617639649" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>isRenderObject</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1a1b48c6302604d867278645b18e4119ea" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>load</name></member>
      <member refid="classnjli_1_1_physics_constraint_1ab423c0c46435ea5630e50f1f39fb1dd8" prot="public" virt="non-virtual" ambiguityscope="njli::PhysicsConstraint::"><scope>njli::PhysicsConstraintPointToPoint</scope><name>load</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1a54d76a95cd5fd595cc8c71715479cccf" prot="private" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>m_btPoint2PointConstraint</name></member>
      <member refid="classnjli_1_1_abstract_factory_object_1a8eea2673c37f55c871de8a808a1a0b94" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>m_pointer</name></member>
      <member refid="classnjli_1_1_abstract_factory_object_1af1a3dd67b0ce2fc70cff9ca111263829" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>m_pointerVal</name></member>
      <member refid="classnjli_1_1_abstract_decorator_1a7c725af71849474d7a5e05ae79b38661" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>numberOfChildren</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1a17b1f8d141a377f71ffeca21d6dad0f6" prot="public" virt="virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>operator std::string</name></member>
      <member refid="classnjli_1_1_abstract_factory_object_1a475bffe85257bce9d5ad5ea4a991fdf9" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>operator!=</name></member>
      <member refid="classnjli_1_1_abstract_factory_object_1af62456deb9b3cd80eeb894b7ee033f44" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>operator&lt;</name></member>
      <member refid="classnjli_1_1_abstract_factory_object_1a2703a2ef27de3bd21b0905c571235922" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>operator&lt;=</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1a74aa555b80e55dbb4700e9f230bda563" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>operator=</name></member>
      <member refid="classnjli_1_1_physics_constraint_1a354f06ed616836ba1a5b21387ed5b83b" prot="protected" virt="non-virtual" ambiguityscope="njli::PhysicsConstraint::"><scope>njli::PhysicsConstraintPointToPoint</scope><name>operator=</name></member>
      <member refid="classnjli_1_1_abstract_factory_object_1ae620e2d5fd6bacf75d6dc63a1a499856" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>operator==</name></member>
      <member refid="classnjli_1_1_abstract_factory_object_1aebb630b30d4649b79a5655471cf727a9" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>operator&gt;</name></member>
      <member refid="classnjli_1_1_abstract_factory_object_1a8ce0719b53e2cca86046b6dbd31aa6af" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>operator&gt;=</name></member>
      <member refid="classnjli_1_1_physics_constraint_1a7b3e8cf84cbb22fc6a9e238c56404a03" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>PhysicsConstraint</name></member>
      <member refid="classnjli_1_1_physics_constraint_1a7b711432de531a357b0b49e446d224bf" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>PhysicsConstraint</name></member>
      <member refid="classnjli_1_1_physics_constraint_1ae70f2363020b35433e46fa34fba42752" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>PhysicsConstraint</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1a6fe4d9bb07a35df5e54e96762f305905" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>PhysicsConstraintPointToPoint</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1a2d1e3de4759eff8e43b414401a4508e9" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>PhysicsConstraintPointToPoint</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1a6809b9b60c90768e4677b9b398963073" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>PhysicsConstraintPointToPoint</name></member>
      <member refid="classnjli_1_1_abstract_decorator_1a907a417691a2e3bfef5fd7d0f0eb0417" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>removeChild</name></member>
      <member refid="classnjli_1_1_abstract_decorator_1a3de9eaa0ff8afc7ccd4378efdaadc191" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>removeChild</name></member>
      <member refid="classnjli_1_1_abstract_decorator_1accd814c7ee5dd1b5e00a3e44e79bff27" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>removeChildren</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1a337401a0a9ad667b5d7c952913c40852" prot="protected" virt="virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>removeConstraint</name></member>
      <member refid="classnjli_1_1_abstract_decorator_1a04b797ac24b5de658d1e6dc165167d8f" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>removeFromParent</name></member>
      <member refid="classnjli_1_1_abstract_decorator_1a5ef875734a96eca9b3c7aa3be482ff29" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>removeParent</name></member>
      <member refid="classnjli_1_1_abstract_decorator_1afd5844a76f88ee1271f228c6dab2dc6d" prot="protected" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>replaceChild</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1a9327a02aa2883e39074baf3503c2ddcc" prot="public" virt="virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>serialize</name></member>
      <member refid="classnjli_1_1_physics_constraint_1a4fc4bcd9d1930911474210c047372fc0" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>serializeObject</name></member>
      <member refid="classnjli_1_1_abstract_factory_object_1a4fc4bcd9d1930911474210c047372fc0" prot="public" virt="virtual" ambiguityscope="njli::AbstractFactoryObject::"><scope>njli::PhysicsConstraintPointToPoint</scope><name>serializeObject</name></member>
      <member refid="classnjli_1_1_physics_constraint_1aff159cbeea66d0f2598172e7cecf2269" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>setBreakingImpulseThreshold</name></member>
      <member refid="classnjli_1_1_physics_constraint_1a087eb5f8d9f51cc476f12f1d10a3cb95" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>setName</name></member>
      <member refid="classnjli_1_1_abstract_decorator_1a087eb5f8d9f51cc476f12f1d10a3cb95" prot="public" virt="non-virtual" ambiguityscope="njli::AbstractObject::"><scope>njli::PhysicsConstraintPointToPoint</scope><name>setName</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1af5f949ec6492fd8c96d5ae03a3aa6436" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>setNodes</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1acbf07690cbef3072ee6b5c141a4d21c5" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>setNodes</name></member>
      <member refid="classnjli_1_1_abstract_decorator_1a292c49c95d3fd287d0e4799554288520" prot="protected" virt="virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>setParent</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1a22513468676e92e523caea9e7c0e5ae7" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>setPivotInA</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1aab12a17b9530cd91700860c6e8e1fc3e" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>setPivotInB</name></member>
      <member refid="classnjli_1_1_abstract_decorator_1a45a6af60b195efd39b1b56f19a8ef14a" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>setTag</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1ac1f72e0fab59953758302de4b5c8fb72" prot="public" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>type</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1acb96ebb09abe8f2a37a915a842babfac" prot="private" virt="non-virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>WorldFactory</name></member>
      <member refid="classnjli_1_1_abstract_decorator_1a8c5ac466e74e908ecc8286af04937d72" prot="protected" virt="virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>~AbstractDecorator</name></member>
      <member refid="classnjli_1_1_abstract_factory_object_1a23b7edad5e21229d9f9f14359dd3ec46" prot="public" virt="virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>~AbstractFactoryObject</name></member>
      <member refid="classnjli_1_1_abstract_object_1aadfc508440196d05461ebf48fd3d3625" prot="protected" virt="virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>~AbstractObject</name></member>
      <member refid="classnjli_1_1_physics_constraint_1a7532a67911e2d8aba738f08638c2efb5" prot="protected" virt="virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>~PhysicsConstraint</name></member>
      <member refid="classnjli_1_1_physics_constraint_point_to_point_1ae32b237c28fc0dc8c0fb6a0d95ffc7be" prot="protected" virt="virtual"><scope>njli::PhysicsConstraintPointToPoint</scope><name>~PhysicsConstraintPointToPoint</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
