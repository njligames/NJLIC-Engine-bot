<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_node_state_8h" kind="file" language="C++">
    <compoundname>NodeState.h</compoundname>
    <includes refid="_abstract_builder_8h" local="yes">AbstractBuilder.h</includes>
    <includes refid="_abstract_state_8h" local="yes">AbstractState.h</includes>
    <includes refid="_node_8h" local="yes">Node.h</includes>
    <includes local="yes">lua.hpp</includes>
    <includedby refid="_j_l_i_engine_8h" local="yes">njligames-njlic_engine/njli/JLIEngine.h</includedby>
    <incdepgraph>
      <node id="3938">
        <label>lua.hpp</label>
      </node>
      <node id="3934">
        <label>queue</label>
      </node>
      <node id="3937">
        <label>btVector2.h</label>
      </node>
      <node id="3939">
        <label>PhysicsBody.h</label>
        <link refid="_physics_body_8h"/>
        <childnode refid="3911" relation="include">
        </childnode>
        <childnode refid="3912" relation="include">
        </childnode>
        <childnode refid="3935" relation="include">
        </childnode>
        <childnode refid="3940" relation="include">
        </childnode>
        <childnode refid="3938" relation="include">
        </childnode>
      </node>
      <node id="3923">
        <label>stdlib.h</label>
      </node>
      <node id="3912">
        <label>AbstractFactoryObject.h</label>
        <link refid="_abstract_factory_object_8h"/>
        <childnode refid="3913" relation="include">
        </childnode>
        <childnode refid="3914" relation="include">
        </childnode>
        <childnode refid="3916" relation="include">
        </childnode>
        <childnode refid="3929" relation="include">
        </childnode>
      </node>
      <node id="3917">
        <label>Log.h</label>
        <link refid="_log_8h"/>
        <childnode refid="3918" relation="include">
        </childnode>
        <childnode refid="3919" relation="include">
        </childnode>
        <childnode refid="3920" relation="include">
        </childnode>
        <childnode refid="3921" relation="include">
        </childnode>
      </node>
      <node id="3911">
        <label>AbstractBuilder.h</label>
        <link refid="_abstract_builder_8h"/>
        <childnode refid="3912" relation="include">
        </childnode>
        <childnode refid="3916" relation="include">
        </childnode>
        <childnode refid="3929" relation="include">
        </childnode>
        <childnode refid="3927" relation="include">
        </childnode>
      </node>
      <node id="3919">
        <label>SDL_assert.h</label>
      </node>
      <node id="3927">
        <label>string</label>
      </node>
      <node id="3920">
        <label>SDL_config.h</label>
      </node>
      <node id="3921">
        <label>SDL_log.h</label>
      </node>
      <node id="3913">
        <label>btAlignedObjectArray.h</label>
      </node>
      <node id="3918">
        <label>Macros.h</label>
        <link refid="_macros_8h"/>
      </node>
      <node id="3929">
        <label>btSerializer.h</label>
      </node>
      <node id="3936">
        <label>btBroadphaseProxy.h</label>
      </node>
      <node id="3931">
        <label>btScalar.h</label>
      </node>
      <node id="3935">
        <label>JLIFactoryTypes.h</label>
        <link refid="_j_l_i_factory_types_8h"/>
        <childnode refid="3916" relation="include">
        </childnode>
        <childnode refid="3936" relation="include">
        </childnode>
      </node>
      <node id="3910">
        <label>njligames-njlic_engine/njli/NodeState.h</label>
        <link refid="_node_state_8h"/>
        <childnode refid="3911" relation="include">
        </childnode>
        <childnode refid="3930" relation="include">
        </childnode>
        <childnode refid="3932" relation="include">
        </childnode>
        <childnode refid="3938" relation="include">
        </childnode>
      </node>
      <node id="3928">
        <label>vector</label>
      </node>
      <node id="3914">
        <label>AbstractObject.h</label>
        <link refid="_abstract_object_8h"/>
        <childnode refid="3915" relation="include">
        </childnode>
        <childnode refid="3916" relation="include">
        </childnode>
        <childnode refid="3927" relation="include">
        </childnode>
      </node>
      <node id="3924">
        <label>math.h</label>
      </node>
      <node id="3933">
        <label>AbstractActionable.h</label>
        <link refid="_abstract_actionable_8h"/>
        <childnode refid="3916" relation="include">
        </childnode>
        <childnode refid="3934" relation="include">
        </childnode>
        <childnode refid="3927" relation="include">
        </childnode>
        <childnode refid="3928" relation="include">
        </childnode>
      </node>
      <node id="3916">
        <label>Util.h</label>
        <link refid="_util_8h"/>
        <childnode refid="3917" relation="include">
        </childnode>
        <childnode refid="3922" relation="include">
        </childnode>
        <childnode refid="3923" relation="include">
        </childnode>
        <childnode refid="3924" relation="include">
        </childnode>
      </node>
      <node id="3932">
        <label>Node.h</label>
        <link refid="_node_8h"/>
        <childnode refid="3911" relation="include">
        </childnode>
        <childnode refid="3912" relation="include">
        </childnode>
        <childnode refid="3933" relation="include">
        </childnode>
        <childnode refid="3935" relation="include">
        </childnode>
        <childnode refid="3937" relation="include">
        </childnode>
        <childnode refid="3938" relation="include">
        </childnode>
        <childnode refid="3927" relation="include">
        </childnode>
        <childnode refid="3939" relation="include">
        </childnode>
        <childnode refid="3940" relation="include">
        </childnode>
      </node>
      <node id="3930">
        <label>AbstractState.h</label>
        <link refid="_abstract_state_8h"/>
        <childnode refid="3911" relation="include">
        </childnode>
        <childnode refid="3916" relation="include">
        </childnode>
        <childnode refid="3931" relation="include">
        </childnode>
        <childnode refid="3923" relation="include">
        </childnode>
      </node>
      <node id="3940">
        <label>btTransform.h</label>
      </node>
      <node id="3925">
        <label>algorithm</label>
      </node>
      <node id="3915">
        <label>AbstractDecorator.h</label>
        <link refid="_abstract_decorator_8h"/>
        <childnode refid="3916" relation="include">
        </childnode>
        <childnode refid="3925" relation="include">
        </childnode>
        <childnode refid="3926" relation="include">
        </childnode>
        <childnode refid="3927" relation="include">
        </childnode>
        <childnode refid="3928" relation="include">
        </childnode>
      </node>
      <node id="3922">
        <label>stdio.h</label>
      </node>
      <node id="3926">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3942">
        <label>njligames-njlic_engine/njli/JLIEngine.h</label>
        <link refid="_j_l_i_engine_8h"/>
      </node>
      <node id="3941">
        <label>njligames-njlic_engine/njli/NodeState.h</label>
        <link refid="_node_state_8h"/>
        <childnode refid="3942" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classnjli_1_1_node_state" prot="public">njli::NodeState</innerclass>
    <innernamespace refid="namespacenjli">njli</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>NodeState.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>JLIGameEngineTest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Created<sp/>by<sp/>James<sp/>Folk<sp/>on<sp/>12/6/14.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2014<sp/>James<sp/>Folk.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__JLIGameEngineTest__NodeState__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__JLIGameEngineTest__NodeState__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_abstract_builder_8h" kindref="compound">AbstractBuilder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_abstract_state_8h" kindref="compound">AbstractState.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_node_8h" kindref="compound">Node.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lua.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenjli" kindref="compound">njli</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">NodeStateBuilder;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classnjli_1_1_node_state" refkind="compound"><highlight class="normal"><sp/><sp/>ATTRIBUTE_ALIGNED16(</highlight><highlight class="keyword">class</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="classnjli_1_1_node_state" kindref="compound">NodeState</ref><sp/>:<sp/>public<sp/><ref refid="classnjli_1_1_abstract_state" kindref="compound">AbstractState</ref>&lt;<ref refid="classnjli_1_1_node" kindref="compound">Node</ref>&gt;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="27" refid="classnjli_1_1_node_state_1acb96ebb09abe8f2a37a915a842babfac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnjli_1_1_world_factory" kindref="compound">WorldFactory</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_node_state" kindref="compound">NodeState</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_node_state" kindref="compound">NodeState</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_abstract_builder" kindref="compound">AbstractBuilder</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_node_state" kindref="compound">NodeState</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_node_state" kindref="compound">NodeState</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>BT_DECLARE_ALIGNED_ALLOCATOR();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classnjli_1_1_node_state" kindref="compound">NodeState</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_node_state" kindref="compound">NodeState</ref><sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_node_state" kindref="compound">NodeState</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_abstract_decorator_1a087eb5f8d9f51cc476f12f1d10a3cb95" kindref="member">AbstractDecorator::setName</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_abstract_decorator_1ad41266885be835f3ee602311e20877a4" kindref="member">AbstractDecorator::getName</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_abstract_factory_object_1a83a8876ae63b92804004cf3febe76573" kindref="member">AbstractFactoryObject::create</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>AbstractFactoryObject::clone;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_abstract_factory_object_1ac4ca71716ed832be357f15f8262c8448" kindref="member">AbstractFactoryObject::getPointer</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_abstract_factory_object_1a4ffddf141a426a5a07d0ac19f1913811" kindref="member">AbstractFactoryObject::getPointerValue</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_abstract_factory_object_1a4fc4bcd9d1930911474210c047372fc0" kindref="member">AbstractFactoryObject::serializeObject</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_abstract_state_1a4c7007210237496fbe169ba114c3750d" kindref="member">AbstractState::isFinished</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_abstract_state_1aa4e66d0016cd5c43dc3a485eaf558174" kindref="member">AbstractState::enableFinished</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_abstract_state_1a4ed007508bd8f80af668a302376b7d1a" kindref="member">AbstractState::enableCanDelete</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="_util_8h_1aa62c75d314a0d1f37f79c4b73b2292e2" kindref="member">s32</ref><sp/>calculateSerializeBufferSize()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serialize(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dataBuffer,<sp/>btSerializer<sp/>*)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*getClassName()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="_util_8h_1aa62c75d314a0d1f37f79c4b73b2292e2" kindref="member">s32</ref><sp/>getType()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>std::string()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_node_state" kindref="compound">NodeState</ref><sp/>**createArray(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049" kindref="member">u32</ref><sp/>size);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>destroyArray(<ref refid="classnjli_1_1_node_state" kindref="compound">NodeState</ref><sp/>*<sp/>*array,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049" kindref="member">u32</ref><sp/>size<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_node_state" kindref="compound">NodeState</ref><sp/>*create();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_node_state" kindref="compound">NodeState</ref><sp/>*create(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_node_state_builder" kindref="compound">NodeStateBuilder</ref><sp/>&amp;builder);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_node_state" kindref="compound">NodeState</ref><sp/>*clone(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_node_state" kindref="compound">NodeState</ref><sp/>&amp;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_node_state" kindref="compound">NodeState</ref><sp/>*copy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_node_state" kindref="compound">NodeState</ref><sp/>&amp;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>destroy(<ref refid="classnjli_1_1_node_state" kindref="compound">NodeState</ref><sp/>*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>load(<ref refid="classnjli_1_1_node_state" kindref="compound">NodeState</ref><sp/>&amp;<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>lua_State<sp/>*<sp/>L,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stack_index);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049" kindref="member">u32</ref><sp/>type();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>enter(<ref refid="classnjli_1_1_node" kindref="compound">Node</ref><sp/>*<sp/>node);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update(<ref refid="classnjli_1_1_node" kindref="compound">Node</ref><sp/>*<sp/>node,<sp/><ref refid="_util_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>timestep);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>exit(<ref refid="classnjli_1_1_node" kindref="compound">Node</ref><sp/>*<sp/>node);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onMessage(<ref refid="classnjli_1_1_node" kindref="compound">Node</ref><sp/>*<sp/>node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_telegram" kindref="compound">Telegram</ref><sp/>&amp;telegram)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>m_Name;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>defined(__JLIGameEngineTest__NodeState__)<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="njligames-njlic_engine/njli/NodeState.h"/>
  </compounddef>
</doxygen>
