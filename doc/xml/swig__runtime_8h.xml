<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="swig__runtime_8h" kind="file" language="C++">
    <compoundname>swig_runtime.h</compoundname>
    <includes local="no">string.h</includes>
    <includes local="yes">lauxlib.h</includes>
    <includes local="yes">lua.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">stdlib.h</includes>
    <incdepgraph>
      <node id="3020">
        <label>njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h</label>
        <link refid="swig__runtime_8h"/>
        <childnode refid="3021" relation="include">
        </childnode>
        <childnode refid="3022" relation="include">
        </childnode>
        <childnode refid="3023" relation="include">
        </childnode>
        <childnode refid="3024" relation="include">
        </childnode>
        <childnode refid="3025" relation="include">
        </childnode>
      </node>
      <node id="3024">
        <label>assert.h</label>
      </node>
      <node id="3023">
        <label>lua.h</label>
      </node>
      <node id="3025">
        <label>stdlib.h</label>
      </node>
      <node id="3022">
        <label>lauxlib.h</label>
      </node>
      <node id="3021">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structswig__type__info" prot="public">swig_type_info</innerclass>
    <innerclass refid="structswig__cast__info" prot="public">swig_cast_info</innerclass>
    <innerclass refid="structswig__module__info" prot="public">swig_module_info</innerclass>
    <innerclass refid="structswig__lua__var__info" prot="public">swig_lua_var_info</innerclass>
    <innerclass refid="structswig__lua__const__info" prot="public">swig_lua_const_info</innerclass>
    <innerclass refid="structswig__lua__attribute" prot="public">swig_lua_attribute</innerclass>
    <innerclass refid="structswig__lua__namespace" prot="public">swig_lua_namespace</innerclass>
    <innerclass refid="structswig__lua__class" prot="public">swig_lua_class</innerclass>
    <innerclass refid="structswig__lua__userdata" prot="public">swig_lua_userdata</innerclass>
    <innerclass refid="structswig__lua__rawdata" prot="public">swig_lua_rawdata</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="swig__runtime_8h_1a7e84031693895e512662f5b390c6d0e4" prot="public" static="no">
        <name>SWIGTEMPLATEDISAMBIGUATOR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="31" column="10" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a6d0a7c65b3712775e92c8bdb7acdd0ee" prot="public" static="no">
        <name>SWIGINLINE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="40" column="10" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a6ee41cd160d397aa76668bf4db65e2d1" prot="public" static="no">
        <name>SWIGUNUSED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="56" column="10" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a6a54164d0685c632e7540c5ad32a453a" prot="public" static="no">
        <name>SWIGUNUSEDPARM</name>
        <param><defname>p</defname></param>
        <initializer>p <ref refid="swig__runtime_8h_1a6ee41cd160d397aa76668bf4db65e2d1" kindref="member">SWIGUNUSED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="71" column="10" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" prot="public" static="no">
        <name>SWIGINTERN</name>
        <initializer>static <ref refid="swig__runtime_8h_1a6ee41cd160d397aa76668bf4db65e2d1" kindref="member">SWIGUNUSED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="77" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1afc5b08bb3c3cd2e3fb2e34b775346153" prot="public" static="no">
        <name>SWIGINTERNINLINE</name>
        <initializer><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> <ref refid="swig__runtime_8h_1a6d0a7c65b3712775e92c8bdb7acdd0ee" kindref="member">SWIGINLINE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="82" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1aea3c8b056dcc8c1ab93f6b825cd1371b" prot="public" static="no">
        <name>SWIGEXPORT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="105" column="11" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1adcd6410456ea7a76147d3ad95b9bcb36" prot="public" static="no">
        <name>SWIGSTDCALL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="115" column="10" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a45817cd389e6f40d0ffb004ff0678031" prot="public" static="no">
        <name>SWIG_UnknownError</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="147" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a9fcdfcd79ad6f30120990223ea16879a" prot="public" static="no">
        <name>SWIG_IOError</name>
        <initializer>-2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="148" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a34d3d1c1310427d00140bf1cc8de3ef6" prot="public" static="no">
        <name>SWIG_RuntimeError</name>
        <initializer>-3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="149" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1af1ed73e454bdee28cc19369784f56eed" prot="public" static="no">
        <name>SWIG_IndexError</name>
        <initializer>-4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="150" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a2685345a18f9d5fe8a390ec8500cb916" prot="public" static="no">
        <name>SWIG_TypeError</name>
        <initializer>-5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="151" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1ae4cc0f5599402526dd5c2fdb80d87517" prot="public" static="no">
        <name>SWIG_DivisionByZero</name>
        <initializer>-6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="152" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1ae9c11d011d8390489595f718d7565a8a" prot="public" static="no">
        <name>SWIG_OverflowError</name>
        <initializer>-7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="153" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a1c4e29c043d3220cedca539360e07148" prot="public" static="no">
        <name>SWIG_SyntaxError</name>
        <initializer>-8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="154" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a4c1b15a2401d60351d98df9327886280" prot="public" static="no">
        <name>SWIG_ValueError</name>
        <initializer>-9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="155" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1ae4a7b4ce78e031cbf5227bea38d81221" prot="public" static="no">
        <name>SWIG_SystemError</name>
        <initializer>-10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="156" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a5c83bd4d8f39d6eed1df7d3444caa2e1" prot="public" static="no">
        <name>SWIG_AttributeError</name>
        <initializer>-11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="157" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1ae1cd9de0a75c6d814815a9de66a4a46d" prot="public" static="no">
        <name>SWIG_MemoryError</name>
        <initializer>-12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="158" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1aa11fe417abd4c5a02d31cc1a51dee007" prot="public" static="no">
        <name>SWIG_NullReferenceError</name>
        <initializer>-13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="159" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a4895907de5539551925ab5c03ea05d28" prot="public" static="no">
        <name>SWIG_RUNTIME_VERSION</name>
        <initializer>&quot;4&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="172" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1ac619a84edecccb5e00c1b4a3180b8c3a" prot="public" static="no">
        <name>SWIG_TYPE_TABLE_NAME</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="180" column="10" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" prot="public" static="no">
        <name>SWIGRUNTIME</name>
        <initializer><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="193" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1affa7aa2bcce5bea24a20e5b184ae0533" prot="public" static="no">
        <name>SWIGRUNTIMEINLINE</name>
        <initializer><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> <ref refid="swig__runtime_8h_1a6d0a7c65b3712775e92c8bdb7acdd0ee" kindref="member">SWIGINLINE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="197" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a26324fcd1baceab72680dfec078da440" prot="public" static="no">
        <name>SWIG_BUFFER_SIZE</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="202" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1aa56139a289829795ed651d533826b65e" prot="public" static="no">
        <name>SWIG_POINTER_DISOWN</name>
        <initializer>0x1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="206" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1ac8216459bfd45cbd2be36175ef6f1ccc" prot="public" static="no">
        <name>SWIG_CAST_NEW_MEMORY</name>
        <initializer>0x2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="207" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a1a125b0e9c551bb9cdeb21b8e5be5b57" prot="public" static="no">
        <name>SWIG_POINTER_OWN</name>
        <initializer>0x1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="210" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1af9ecbac56d4c5cd6104ae8f6bb82e9f7" prot="public" static="no">
        <name>SWIG_OK</name>
        <initializer>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="292" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1acfa11a770d66f9ca6ba170b173c56c94" prot="public" static="no">
        <name>SWIG_ERROR</name>
        <initializer>(-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="293" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1aea8ef410fde907633cb76d9d18131fa1" prot="public" static="no">
        <name>SWIG_IsOK</name>
        <param><defname>r</defname></param>
        <initializer>(r &gt;= 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="294" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a95bab7504841595502bac5ed195becc1" prot="public" static="no">
        <name>SWIG_ArgError</name>
        <param><defname>r</defname></param>
        <initializer>((r != <ref refid="swig__runtime_8h_1acfa11a770d66f9ca6ba170b173c56c94" kindref="member">SWIG_ERROR</ref>) ? r : <ref refid="swig__runtime_8h_1a2685345a18f9d5fe8a390ec8500cb916" kindref="member">SWIG_TypeError</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="295" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a2f15c36f8b66185937b8232640be62e4" prot="public" static="no">
        <name>SWIG_CASTRANKLIMIT</name>
        <initializer>(1 &lt;&lt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="298" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a0021b435c31c3ab285b5a6f4547719e3" prot="public" static="no">
        <name>SWIG_NEWOBJMASK</name>
        <initializer>(<ref refid="swig__runtime_8h_1a2f15c36f8b66185937b8232640be62e4" kindref="member">SWIG_CASTRANKLIMIT</ref> &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="300" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a399dafc6302bd9b309041d5570ae94c9" prot="public" static="no">
        <name>SWIG_TMPOBJMASK</name>
        <initializer>(<ref refid="swig__runtime_8h_1a0021b435c31c3ab285b5a6f4547719e3" kindref="member">SWIG_NEWOBJMASK</ref> &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="302" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a8268a243a8a840396db70f745c23c37c" prot="public" static="no">
        <name>SWIG_BADOBJ</name>
        <initializer>(<ref refid="swig__runtime_8h_1acfa11a770d66f9ca6ba170b173c56c94" kindref="member">SWIG_ERROR</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="304" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a4afcf490ff5b4abbca27ca23d9af288e" prot="public" static="no">
        <name>SWIG_OLDOBJ</name>
        <initializer>(<ref refid="swig__runtime_8h_1af9ecbac56d4c5cd6104ae8f6bb82e9f7" kindref="member">SWIG_OK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="305" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1ab00ef4fde02a6d8d9653ea9edb28d3c9" prot="public" static="no">
        <name>SWIG_NEWOBJ</name>
        <initializer>(<ref refid="swig__runtime_8h_1af9ecbac56d4c5cd6104ae8f6bb82e9f7" kindref="member">SWIG_OK</ref> | <ref refid="swig__runtime_8h_1a0021b435c31c3ab285b5a6f4547719e3" kindref="member">SWIG_NEWOBJMASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="306" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1ab1fe70ae34b39b709eb4cfb084862236" prot="public" static="no">
        <name>SWIG_TMPOBJ</name>
        <initializer>(<ref refid="swig__runtime_8h_1af9ecbac56d4c5cd6104ae8f6bb82e9f7" kindref="member">SWIG_OK</ref> | <ref refid="swig__runtime_8h_1a399dafc6302bd9b309041d5570ae94c9" kindref="member">SWIG_TMPOBJMASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="307" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1af7ac7e424b623712f70e9b6640a54853" prot="public" static="no">
        <name>SWIG_AddNewMask</name>
        <param><defname>r</defname></param>
        <initializer>(<ref refid="swig__runtime_8h_1aea8ef410fde907633cb76d9d18131fa1" kindref="member">SWIG_IsOK</ref>(r) ? (r | <ref refid="swig__runtime_8h_1a0021b435c31c3ab285b5a6f4547719e3" kindref="member">SWIG_NEWOBJMASK</ref>) : r)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="309" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1ab3ead1d5cb36e1d79daf0bb4732957be" prot="public" static="no">
        <name>SWIG_DelNewMask</name>
        <param><defname>r</defname></param>
        <initializer>(<ref refid="swig__runtime_8h_1aea8ef410fde907633cb76d9d18131fa1" kindref="member">SWIG_IsOK</ref>(r) ? (r &amp; ~<ref refid="swig__runtime_8h_1a0021b435c31c3ab285b5a6f4547719e3" kindref="member">SWIG_NEWOBJMASK</ref>) : r)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="310" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a5246ae38052e6fa0e3cca2026cdda153" prot="public" static="no">
        <name>SWIG_IsNewObj</name>
        <param><defname>r</defname></param>
        <initializer>(<ref refid="swig__runtime_8h_1aea8ef410fde907633cb76d9d18131fa1" kindref="member">SWIG_IsOK</ref>(r) &amp;&amp; (r &amp; <ref refid="swig__runtime_8h_1a0021b435c31c3ab285b5a6f4547719e3" kindref="member">SWIG_NEWOBJMASK</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="311" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1af8527f0123949ec90e05d0fb156c11e3" prot="public" static="no">
        <name>SWIG_AddTmpMask</name>
        <param><defname>r</defname></param>
        <initializer>(<ref refid="swig__runtime_8h_1aea8ef410fde907633cb76d9d18131fa1" kindref="member">SWIG_IsOK</ref>(r) ? (r | <ref refid="swig__runtime_8h_1a399dafc6302bd9b309041d5570ae94c9" kindref="member">SWIG_TMPOBJMASK</ref>) : r)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="312" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1ac08b44ea4ae9f73b19d915969f301a5d" prot="public" static="no">
        <name>SWIG_DelTmpMask</name>
        <param><defname>r</defname></param>
        <initializer>(<ref refid="swig__runtime_8h_1aea8ef410fde907633cb76d9d18131fa1" kindref="member">SWIG_IsOK</ref>(r) ? (r &amp; ~<ref refid="swig__runtime_8h_1a399dafc6302bd9b309041d5570ae94c9" kindref="member">SWIG_TMPOBJMASK</ref>) : r)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="313" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1aa8f2563a536468b40dc33843d4bb7efe" prot="public" static="no">
        <name>SWIG_IsTmpObj</name>
        <param><defname>r</defname></param>
        <initializer>(<ref refid="swig__runtime_8h_1aea8ef410fde907633cb76d9d18131fa1" kindref="member">SWIG_IsOK</ref>(r) &amp;&amp; (r &amp; <ref refid="swig__runtime_8h_1a399dafc6302bd9b309041d5570ae94c9" kindref="member">SWIG_TMPOBJMASK</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="314" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a4f6f5e0444e44e48aef51f6620438a5f" prot="public" static="no">
        <name>SWIG_AddCast</name>
        <param><defname>r</defname></param>
        <initializer>(r)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="337" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a1faed8ca17e98c961611bc35fde708a9" prot="public" static="no">
        <name>SWIG_CheckState</name>
        <param><defname>r</defname></param>
        <initializer>(<ref refid="swig__runtime_8h_1aea8ef410fde907633cb76d9d18131fa1" kindref="member">SWIG_IsOK</ref>(r) ? 1 : 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="338" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a84d911ffa9c41b3a66cc7e7d3645671f" prot="public" static="no">
        <name>SWIG_LUA_TARGET</name>
        <initializer><ref refid="swig__runtime_8h_1a6e2b880437634cb73e882be20de53d32" kindref="member">SWIG_LUA_FLAVOR_LUA</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="822" column="10" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="822" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a6e2b880437634cb73e882be20de53d32" prot="public" static="no">
        <name>SWIG_LUA_FLAVOR_LUA</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="846" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="846" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a00a6f75261552001dd1ac741f712d82f" prot="public" static="no">
        <name>SWIG_LUA_FLAVOR_ELUA</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="847" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="847" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a351d33087485b24840afe357df576385" prot="public" static="no">
        <name>SWIG_LUA_FLAVOR_ELUAC</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="848" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="848" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a81533fe9e3e23fc8a0caad2a15ddc953" prot="public" static="no">
        <name>SWIG_LUA_CONSTTAB_INT</name>
        <param><defname>B</defname></param>
        <param><defname>C</defname></param>
        <initializer><ref refid="swig__runtime_8h_1ae486ba0f8ccf6c87507633344d3f6a96" kindref="member">SWIG_LUA_INT</ref>, (char *)B, (long)C, 0, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="973" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="973" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a86474eb3525b32c80966dde2330e9596" prot="public" static="no">
        <name>SWIG_LUA_CONSTTAB_FLOAT</name>
        <param><defname>B</defname></param>
        <param><defname>C</defname></param>
        <initializer><ref refid="swig__runtime_8h_1a9c4ea7e25de05f5a501e7163fd480b67" kindref="member">SWIG_LUA_FLOAT</ref>, (char *)B, 0, (double)C, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="974" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="974" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a9bcdad1f49921f12301ceb55b31f7f48" prot="public" static="no">
        <name>SWIG_LUA_CONSTTAB_STRING</name>
        <param><defname>B</defname></param>
        <param><defname>C</defname></param>
        <initializer><ref refid="swig__runtime_8h_1af6a25edb9ad2ab838e1b1fa3e4450121" kindref="member">SWIG_LUA_STRING</ref>, (char *)B, 0, 0, (<ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref> *)C, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="976" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="976" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1af21b898b6e053c8bb73855969e0888b0" prot="public" static="no">
        <name>SWIG_LUA_CONSTTAB_CHAR</name>
        <param><defname>B</defname></param>
        <param><defname>C</defname></param>
        <initializer><ref refid="swig__runtime_8h_1a50c58df5c9bd1cea902021a7f7fc9896" kindref="member">SWIG_LUA_CHAR</ref>, (char *)B, (long)C, 0, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="978" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="978" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1ab5c3df1096e1d0596e6401e9aaf91f4b" prot="public" static="no">
        <name>SWIG_LUA_CONSTTAB_POINTER</name>
        <param><defname>B</defname></param>
        <param><defname>C</defname></param>
        <param><defname>D</defname></param>
        <initializer><ref refid="swig__runtime_8h_1a2f4d58f9ce413585253063575c033082" kindref="member">SWIG_LUA_POINTER</ref>, (char *)B, 0, 0, (<ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref> *)C, &amp;D</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="979" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="979" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a38564dfb0235d7ba0f543836919b6dac" prot="public" static="no">
        <name>SWIG_LUA_CONSTTAB_BINARY</name>
        <param><defname>B</defname></param>
        <param><defname>S</defname></param>
        <param><defname>C</defname></param>
        <param><defname>D</defname></param>
        <initializer><ref refid="swig__runtime_8h_1af2062cfc3a6907d38c2587cdab77ae38" kindref="member">SWIG_LUA_BINARY</ref>, (char *)B, S, 0, (<ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref> *)C, &amp;D</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="981" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="981" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a0a129d773aae7e71b7c30370cd3c3dd9" prot="public" static="no">
        <name>lua_rawlen</name>
        <initializer>lua_strlen</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1022" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1022" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1abf88c897458bd9848010301cb46ade18" prot="public" static="no">
        <name>lua_pushglobaltable</name>
        <param><defname>L</defname></param>
        <initializer>lua_pushvalue(L, LUA_GLOBALSINDEX)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1031" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1031" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a9c4332806d14eef7167aac79d101b5ff" prot="public" static="no">
        <name>lua_absindex</name>
        <param><defname>L</defname></param>
        <param><defname>i</defname></param>
        <initializer>((i) &gt; 0 || (i) &lt;= LUA_REGISTRYINDEX ? (i) : lua_gettop(L) + (i) + 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1036" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1036" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a703a7b5ef04cbe6e627f04bcdcebc153" prot="public" static="no">
        <name>lua_rawsetp</name>
        <param><defname>L</defname></param>
        <param><defname>index</defname></param>
        <param><defname>ptr</defname></param>
        <initializer>lua_pushlightuserdata(L, (<ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref> *)(ptr));                                     \
  lua_insert(L, -2);                                                           \
  lua_rawset(L, index);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1042" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1042" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1afda1448f711f5b5351c3fa779e487724" prot="public" static="no">
        <name>lua_rawgetp</name>
        <param><defname>L</defname></param>
        <param><defname>index</defname></param>
        <param><defname>ptr</defname></param>
        <initializer>lua_pushlightuserdata(L, (<ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref> *)(ptr));                                     \
  lua_rawget(L, index);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1047" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1047" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1ae486ba0f8ccf6c87507633344d3f6a96" prot="public" static="no">
        <name>SWIG_LUA_INT</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1085" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1085" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a9c4ea7e25de05f5a501e7163fd480b67" prot="public" static="no">
        <name>SWIG_LUA_FLOAT</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1086" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1086" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1af6a25edb9ad2ab838e1b1fa3e4450121" prot="public" static="no">
        <name>SWIG_LUA_STRING</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1087" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1087" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a2f4d58f9ce413585253063575c033082" prot="public" static="no">
        <name>SWIG_LUA_POINTER</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1088" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1088" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1af2062cfc3a6907d38c2587cdab77ae38" prot="public" static="no">
        <name>SWIG_LUA_BINARY</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1089" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1089" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a50c58df5c9bd1cea902021a7f7fc9896" prot="public" static="no">
        <name>SWIG_LUA_CHAR</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1090" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1090" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a8eb06167550295873af166db6a49cf36" prot="public" static="no">
        <name>SWIG_NewPointerObj</name>
        <param><defname>L</defname></param>
        <param><defname>ptr</defname></param>
        <param><defname>type</defname></param>
        <param><defname>owner</defname></param>
        <initializer><ref refid="swig__runtime_8h_1a96c4cba9e0940983c98de6a9d6f339c8" kindref="member">SWIG_Lua_NewPointerObj</ref>(L, (<ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref> *)ptr, type, owner)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1178" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a3a4e5f587d3994722b0628b2cc96ed42" prot="public" static="no">
        <name>SWIG_ConvertPtr</name>
        <param><defname>L</defname></param>
        <param><defname>idx</defname></param>
        <param><defname>ptr</defname></param>
        <param><defname>type</defname></param>
        <param><defname>flags</defname></param>
        <initializer><ref refid="swig__runtime_8h_1a0d0394796468d0001b1d3d358a19891f" kindref="member">SWIG_Lua_ConvertPtr</ref>(L, idx, ptr, type, flags)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1180" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a59f926cc14b21f2e478ac27541df0162" prot="public" static="no">
        <name>SWIG_MustGetPtr</name>
        <param><defname>L</defname></param>
        <param><defname>idx</defname></param>
        <param><defname>type</defname></param>
        <param><defname>flags</defname></param>
        <param><defname>argnum</defname></param>
        <param><defname>fnname</defname></param>
        <initializer><ref refid="swig__runtime_8h_1a8ed84d67fe041f17069ed2e28e23d1e4" kindref="member">SWIG_Lua_MustGetPtr</ref>(L, idx, type, flags, argnum, fnname)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1182" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a019c90e4471fdd37ef65653afe55fb5c" prot="public" static="no">
        <name>SWIG_ConvertMember</name>
        <param><defname>L</defname></param>
        <param><defname>idx</defname></param>
        <param><defname>ptr</defname></param>
        <param><defname>sz</defname></param>
        <param><defname>ty</defname></param>
        <initializer><ref refid="swig__runtime_8h_1a34313b58896afa8f8a27f1d0bfd2b7c4" kindref="member">SWIG_Lua_ConvertPacked</ref>(L, idx, ptr, sz, ty)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1185" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a20c6437f49ae257857683ba0e7b2100f" prot="public" static="no">
        <name>SWIG_NewMemberObj</name>
        <param><defname>L</defname></param>
        <param><defname>ptr</defname></param>
        <param><defname>sz</defname></param>
        <param><defname>type</defname></param>
        <initializer><ref refid="swig__runtime_8h_1ab98924e8e52ff8f34ace1515120ccda6" kindref="member">SWIG_Lua_NewPackedObj</ref>(L, ptr, sz, type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1187" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1ab97db3bbfc9e3a73de01e1ee95fa0bb5" prot="public" static="no">
        <name>SWIG_GetModule</name>
        <param><defname>clientdata</defname></param>
        <initializer><ref refid="swig__runtime_8h_1aa7e1ff7a89ff12ee84b36802220fae51" kindref="member">SWIG_Lua_GetModule</ref>((lua_State *)(clientdata))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1191" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a673a7dcc5c15f5cffa7072785a6c7972" prot="public" static="no">
        <name>SWIG_SetModule</name>
        <param><defname>clientdata</defname></param>
        <param><defname>pointer</defname></param>
        <initializer><ref refid="swig__runtime_8h_1a127abd2d6d37e5b1e86d2421c751492e" kindref="member">SWIG_Lua_SetModule</ref>((lua_State *)(clientdata), pointer)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1192" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a50d0a80dccc1d34749f07c82d6a04169" prot="public" static="no">
        <name>SWIG_MODULE_CLIENTDATA_TYPE</name>
        <initializer>lua_State *</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1194" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1aca11636b220cff70dac286c268c95ee6" prot="public" static="no">
        <name>SWIG_contract_assert</name>
        <param><defname>expr</defname></param>
        <param><defname>msg</defname></param>
        <initializer>if (!(expr))                                                                 \
    {                                                                          \
      <ref refid="swig__runtime_8h_1a17d5e7cfbab0914882ec82e36d22381e" kindref="member">SWIG_Lua_pusherrstring</ref>(L, (char *)msg);                                  \
      goto fail;                                                               \
    }                                                                          \
  else</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1197" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1ababf56889b69e7a569556eb38cd4f157" prot="public" static="no">
        <name>SWIG_fail</name>
        <initializer>{                                                                            \
    goto fail;                                                                 \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1206" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a41cf11e6c8c4513cbca00772e8aef9fd" prot="public" static="no">
        <name>SWIG_fail_arg</name>
        <param><defname>func_name</defname></param>
        <param><defname>argnum</defname></param>
        <param><defname>type</defname></param>
        <initializer>{                                                                            \
    <ref refid="swig__runtime_8h_1ad4708a823127d389179291ebcace732d" kindref="member">SWIG_Lua_pushferrstring</ref>(L, &quot;Error in %s (arg %d), expected &apos;%s&apos; got &apos;%s&apos;&quot;, \
                            func_name, argnum, type,                           \
                            <ref refid="swig__runtime_8h_1a3ebd284134ee5f4877fe86f646aebde6" kindref="member">SWIG_Lua_typename</ref>(L, argnum));                     \
    goto fail;                                                                 \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1210" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a2075b3c34e15bf3feb67887a633ccddf" prot="public" static="no">
        <name>SWIG_fail_ptr</name>
        <param><defname>func_name</defname></param>
        <param><defname>argnum</defname></param>
        <param><defname>type</defname></param>
        <initializer><ref refid="swig__runtime_8h_1a41cf11e6c8c4513cbca00772e8aef9fd" kindref="member">SWIG_fail_arg</ref>(func_name, argnum, (type &amp;&amp; type-&gt;str) ? type-&gt;str : &quot;void*&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1217" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a7e3daad25f96879be557754a9e2ed6b4" prot="public" static="no">
        <name>SWIG_check_num_args</name>
        <param><defname>func_name</defname></param>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>if (lua_gettop(L) &lt; a || lua_gettop(L) &gt; b)                                  \
    {                                                                          \
      <ref refid="swig__runtime_8h_1ad4708a823127d389179291ebcace732d" kindref="member">SWIG_Lua_pushferrstring</ref>(L, &quot;Error in %s expected %d..%d args, got %d&quot;,   \
                              func_name, a, b, lua_gettop(L));                 \
      goto fail;                                                               \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1219" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a45e06ea798b759df9853467b13abcdfc" prot="public" static="no">
        <name>SWIG_Lua_get_table</name>
        <param><defname>L</defname></param>
        <param><defname>n</defname></param>
        <initializer>(lua_pushstring(L, n), lua_rawget(L, -2))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1227" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a4e0088e1d53848f80738e5a49f1c0cf3" prot="public" static="no">
        <name>SWIG_Lua_add_function</name>
        <param><defname>L</defname></param>
        <param><defname>n</defname></param>
        <param><defname>f</defname></param>
        <initializer>(lua_pushstring(L, n), lua_pushcfunction(L, f), lua_rawset(L, -3))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1229" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1afd5580acc2cb0c0eeaf0644bac06f99e" prot="public" static="no">
        <name>SWIG_Lua_add_boolean</name>
        <param><defname>L</defname></param>
        <param><defname>n</defname></param>
        <param><defname>b</defname></param>
        <initializer>(lua_pushstring(L, n), lua_pushboolean(L, b), lua_rawset(L, -3))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1232" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1ac24315f20782462ad057bf1c8309a616" prot="public" static="no">
        <name>SWIG_isptrtype</name>
        <param><defname>L</defname></param>
        <param><defname>I</defname></param>
        <initializer>(lua_isuserdata(L, I) || lua_isnil(L, I))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1236" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swig__runtime_8h_1a054a85a15c821ad190018e106214a1ac" prot="public" static="no">
        <name>SWIG_DOSTRING_FAIL</name>
        <param><defname>S</defname></param>
        <initializer>fprintf(stderr, &quot;%s\n&quot;, S)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2987" column="9" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2987" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="swig__runtime_8h_1a9a51597c7c2041da303a65468011f59b" prot="public" static="no">
        <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref> *(*</type>
        <definition>typedef void*(* swig_converter_func) (void *, int *)</definition>
        <argsstring>)(void *, int *)</argsstring>
        <name>swig_converter_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="347" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="swig__runtime_8h_1aee981c41d733723d60337a77630106af" prot="public" static="no">
        <type>struct <ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *(*</type>
        <definition>typedef struct swig_type_info*(* swig_dycast_func) (void **)</definition>
        <argsstring>)(void **)</argsstring>
        <name>swig_dycast_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="347" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="swig__runtime_8h_1a838fee418372997705a565cd6ecd3b22" prot="public" static="no">
        <type>struct <ref refid="structswig__type__info" kindref="compound">swig_type_info</ref></type>
        <definition>typedef struct swig_type_info  swig_type_info</definition>
        <argsstring></argsstring>
        <name>swig_type_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="360" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="swig__runtime_8h_1a9a04e6e78de723759e5450cd29429d1f" prot="public" static="no">
        <type>struct <ref refid="structswig__cast__info" kindref="compound">swig_cast_info</ref></type>
        <definition>typedef struct swig_cast_info  swig_cast_info</definition>
        <argsstring></argsstring>
        <name>swig_cast_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="369" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="swig__runtime_8h_1acf7d83901372902dd5cf59a611dfb320" prot="public" static="no">
        <type>struct <ref refid="structswig__module__info" kindref="compound">swig_module_info</ref></type>
        <definition>typedef struct swig_module_info  swig_module_info</definition>
        <argsstring></argsstring>
        <name>swig_module_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="387" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="swig__runtime_8h_1a89958881f4c9d723a197b20ac42f6946" prot="public" static="no">
        <type>luaL_Reg</type>
        <definition>typedef luaL_Reg swig_lua_method</definition>
        <argsstring></argsstring>
        <name>swig_lua_method</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1105" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="swig__runtime_8h_1aa881a157e50736ba2ad83a4f6faad472" prot="public" static="no">
        <type>struct <ref refid="structswig__lua__namespace" kindref="compound">swig_lua_namespace</ref></type>
        <definition>typedef struct swig_lua_namespace  swig_lua_namespace</definition>
        <argsstring></argsstring>
        <name>swig_lua_namespace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1138" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="swig__runtime_8h_1a6923d1145cdb4f743ce8082c79172b39" prot="public" static="no">
        <type>struct <ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref></type>
        <definition>typedef struct swig_lua_class  swig_lua_class</definition>
        <argsstring></argsstring>
        <name>swig_lua_class</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1153" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="swig__runtime_8h_1acb5ead7109df678f22b2ec7d2203ce62" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* swig_lua_base_iterator_func) (lua_State *, swig_type_info *, int, int *ret)</definition>
        <argsstring>)(lua_State *, swig_type_info *, int, int *ret)</argsstring>
        <name>swig_lua_base_iterator_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1643" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1643" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="swig__runtime_8h_1a2f69ad4207037cb391a2b2d5915fcba2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> int</type>
        <definition>SWIGRUNTIME int SWIG_TypeNameComp</definition>
        <argsstring>(const char *f1, const char *l1, const char *f2, const char *l2)</argsstring>
        <name>SWIG_TypeNameComp</name>
        <param>
          <type>const char *</type>
          <declname>f1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>f2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>l2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="396" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="396" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a73131c439c907ed987c34da85b95a597" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> int</type>
        <definition>SWIGRUNTIME int SWIG_TypeCmp</definition>
        <argsstring>(const char *nb, const char *tb)</argsstring>
        <name>SWIG_TypeCmp</name>
        <param>
          <type>const char *</type>
          <declname>nb</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="415" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="415" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a23ecf039d651082ffc7582c4f50af780" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> int</type>
        <definition>SWIGRUNTIME int SWIG_TypeEquiv</definition>
        <argsstring>(const char *nb, const char *tb)</argsstring>
        <name>SWIG_TypeEquiv</name>
        <param>
          <type>const char *</type>
          <declname>nb</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="438" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="438" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1abd0cb78a9663e41312c8f14ab6715f04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> <ref refid="structswig__cast__info" kindref="compound">swig_cast_info</ref> *</type>
        <definition>SWIGRUNTIME swig_cast_info* SWIG_TypeCheck</definition>
        <argsstring>(const char *c, swig_type_info *ty)</argsstring>
        <name>SWIG_TypeCheck</name>
        <param>
          <type>const char *</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *</type>
          <declname>ty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="446" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="446" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a898a1dfcdf96d53a2c7fd90e8500b36e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> <ref refid="structswig__cast__info" kindref="compound">swig_cast_info</ref> *</type>
        <definition>SWIGRUNTIME swig_cast_info* SWIG_TypeCheckStruct</definition>
        <argsstring>(swig_type_info *from, swig_type_info *ty)</argsstring>
        <name>SWIG_TypeCheckStruct</name>
        <param>
          <type><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *</type>
          <declname>ty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="478" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="478" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a334486cb1e8f569c949a0384cbdb2a16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1affa7aa2bcce5bea24a20e5b184ae0533" kindref="member">SWIGRUNTIMEINLINE</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref> *</type>
        <definition>SWIGRUNTIMEINLINE void* SWIG_TypeCast</definition>
        <argsstring>(swig_cast_info *ty, void *ptr, int *newmemory)</argsstring>
        <name>SWIG_TypeCast</name>
        <param>
          <type><ref refid="structswig__cast__info" kindref="compound">swig_cast_info</ref> *</type>
          <declname>ty</declname>
        </param>
        <param>
          <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>newmemory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="510" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="510" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1add8cb1a47628b36915ffa37d61452b1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> <ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *</type>
        <definition>SWIGRUNTIME swig_type_info* SWIG_TypeDynamicCast</definition>
        <argsstring>(swig_type_info *ty, void **ptr)</argsstring>
        <name>SWIG_TypeDynamicCast</name>
        <param>
          <type><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *</type>
          <declname>ty</declname>
        </param>
        <param>
          <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref> **</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="519" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="519" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a68560e0bf641c9691704d6d05bac4358" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1affa7aa2bcce5bea24a20e5b184ae0533" kindref="member">SWIGRUNTIMEINLINE</ref> const char *</type>
        <definition>SWIGRUNTIMEINLINE const char* SWIG_TypeName</definition>
        <argsstring>(const swig_type_info *ty)</argsstring>
        <name>SWIG_TypeName</name>
        <param>
          <type>const <ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *</type>
          <declname>ty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="536" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="536" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a3f38ea686cb3f85bf6a15b08416f2684" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> const char *</type>
        <definition>SWIGRUNTIME const char* SWIG_TypePrettyName</definition>
        <argsstring>(const swig_type_info *type)</argsstring>
        <name>SWIG_TypePrettyName</name>
        <param>
          <type>const <ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="545" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="545" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a4b0a40223812f7d43bc2f0c2342fe2f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>SWIGRUNTIME void SWIG_TypeClientData</definition>
        <argsstring>(swig_type_info *ti, void *clientdata)</argsstring>
        <name>SWIG_TypeClientData</name>
        <param>
          <type><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *</type>
          <declname>ti</declname>
        </param>
        <param>
          <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref> *</type>
          <declname>clientdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="569" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="569" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a710082a7ea6978d654bad712dbebc0ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>SWIGRUNTIME void SWIG_TypeNewClientData</definition>
        <argsstring>(swig_type_info *ti, void *clientdata)</argsstring>
        <name>SWIG_TypeNewClientData</name>
        <param>
          <type><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *</type>
          <declname>ti</declname>
        </param>
        <param>
          <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref> *</type>
          <declname>clientdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="588" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="588" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1ac63ad9b58a96793188f944c92ff40ec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> <ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *</type>
        <definition>SWIGRUNTIME swig_type_info* SWIG_MangledTypeQueryModule</definition>
        <argsstring>(swig_module_info *start, swig_module_info *end, const char *name)</argsstring>
        <name>SWIG_MangledTypeQueryModule</name>
        <param>
          <type><ref refid="structswig__module__info" kindref="compound">swig_module_info</ref> *</type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="structswig__module__info" kindref="compound">swig_module_info</ref> *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="603" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="603" bodyend="653"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a5b6a2719f95288678fa55ade4493b175" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> <ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *</type>
        <definition>SWIGRUNTIME swig_type_info* SWIG_TypeQueryModule</definition>
        <argsstring>(swig_module_info *start, swig_module_info *end, const char *name)</argsstring>
        <name>SWIG_TypeQueryModule</name>
        <param>
          <type><ref refid="structswig__module__info" kindref="compound">swig_module_info</ref> *</type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="structswig__module__info" kindref="compound">swig_module_info</ref> *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="667" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="667" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a02c2ac3db8ce87dd62813334e66c9a3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> char *</type>
        <definition>SWIGRUNTIME char* SWIG_PackData</definition>
        <argsstring>(char *c, void *ptr, size_t sz)</argsstring>
        <name>SWIG_PackData</name>
        <param>
          <type>char *</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="703" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="703" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a80e9e66f66413297452de92c69cdf9d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> const char *</type>
        <definition>SWIGRUNTIME const char* SWIG_UnpackData</definition>
        <argsstring>(const char *c, void *ptr, size_t sz)</argsstring>
        <name>SWIG_UnpackData</name>
        <param>
          <type>const char *</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="720" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="720" bodyend="744"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a10c5572eb6206df7c95c8a2fcde90911" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> char *</type>
        <definition>SWIGRUNTIME char* SWIG_PackVoidPtr</definition>
        <argsstring>(char *buff, void *ptr, const char *name, size_t bsz)</argsstring>
        <name>SWIG_PackVoidPtr</name>
        <param>
          <type>char *</type>
          <declname>buff</declname>
        </param>
        <param>
          <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="749" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="749" bodyend="761"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1ae3e13f3464cb74f7e5d9f7a50a6855c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> const char *</type>
        <definition>SWIGRUNTIME const char* SWIG_UnpackVoidPtr</definition>
        <argsstring>(const char *c, void **ptr, const char *name)</argsstring>
        <name>SWIG_UnpackVoidPtr</name>
        <param>
          <type>const char *</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref> **</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="763" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="763" bodyend="779"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1af903e6809a1fb2ba06deff49795c6e65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> char *</type>
        <definition>SWIGRUNTIME char* SWIG_PackDataName</definition>
        <argsstring>(char *buff, void *ptr, size_t sz, const char *name, size_t bsz)</argsstring>
        <name>SWIG_PackDataName</name>
        <param>
          <type>char *</type>
          <declname>buff</declname>
        </param>
        <param>
          <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="781" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="781" bodyend="799"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a99540d89d9ffca957892cf22af3e49dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> const char *</type>
        <definition>SWIGRUNTIME const char* SWIG_UnpackDataName</definition>
        <argsstring>(const char *c, void *ptr, size_t sz, const char *name)</argsstring>
        <name>SWIG_UnpackDataName</name>
        <param>
          <type>const char *</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="801" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="801" bodyend="817"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a17d5e7cfbab0914882ec82e36d22381e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>SWIGRUNTIME void SWIG_Lua_pusherrstring</definition>
        <argsstring>(lua_State *L, const char *str)</argsstring>
        <name>SWIG_Lua_pusherrstring</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1060" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1060" bodyend="1065"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1ad4708a823127d389179291ebcace732d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>SWIGRUNTIME void SWIG_Lua_pushferrstring</definition>
        <argsstring>(lua_State *L, const char *fmt,...)</argsstring>
        <name>SWIG_Lua_pushferrstring</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1070" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1070" bodyend="1078"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1aa7e1ff7a89ff12ee84b36802220fae51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> <ref refid="structswig__module__info" kindref="compound">swig_module_info</ref> *</type>
        <definition>SWIGRUNTIME swig_module_info* SWIG_Lua_GetModule</definition>
        <argsstring>(lua_State *L)</argsstring>
        <name>SWIG_Lua_GetModule</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1245" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1245" bodyend="1255"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a127abd2d6d37e5b1e86d2421c751492e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>SWIGRUNTIME void SWIG_Lua_SetModule</definition>
        <argsstring>(lua_State *L, swig_module_info *module)</argsstring>
        <name>SWIG_Lua_SetModule</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="structswig__module__info" kindref="compound">swig_module_info</ref> *</type>
          <declname>module</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1257" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1257" bodyend="1264"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a98115a70232aa660ee341e0ea4353485" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> int</type>
        <definition>SWIGINTERN int SWIG_Lua_set_immutable</definition>
        <argsstring>(lua_State *L)</argsstring>
        <name>SWIG_Lua_set_immutable</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1274" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1274" bodyend="1282"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a82a3c5d46b7bdaa57cc1106ff5a89663" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> int</type>
        <definition>SWIGINTERN int SWIG_Lua_namespace_get</definition>
        <argsstring>(lua_State *L)</argsstring>
        <name>SWIG_Lua_namespace_get</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1445" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1445" bodyend="1481"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1aa56ce48dad661ece0586e2b0477d04d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> int</type>
        <definition>SWIGINTERN int SWIG_Lua_namespace_set</definition>
        <argsstring>(lua_State *L)</argsstring>
        <name>SWIG_Lua_namespace_set</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1483" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1483" bodyend="1513"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1af6d78a7441d3788ad73c978698a0cc1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>SWIGINTERN void SWIG_Lua_InstallConstants</definition>
        <argsstring>(lua_State *L, swig_lua_const_info constants[])</argsstring>
        <name>SWIG_Lua_InstallConstants</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="structswig__lua__const__info" kindref="compound">swig_lua_const_info</ref></type>
          <declname>constants</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1516" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2932" bodyend="2978"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a7d4fb4ca1944b99a7ac54467d8a11866" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>SWIGINTERN void SWIG_Lua_add_variable</definition>
        <argsstring>(lua_State *L, const char *name, lua_CFunction getFn, lua_CFunction setFn)</argsstring>
        <name>SWIG_Lua_add_variable</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>lua_CFunction</type>
          <declname>getFn</declname>
        </param>
        <param>
          <type>lua_CFunction</type>
          <declname>setFn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1519" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2243" bodyend="2258"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a96a75364a5f20fd525bb603440f698d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>SWIGINTERN void SWIG_Lua_class_register</definition>
        <argsstring>(lua_State *L, swig_lua_class *clss)</argsstring>
        <name>SWIG_Lua_class_register</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref> *</type>
          <declname>clss</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1521" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2701" bodyend="2742"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a9ee5ba0a0bf072010a447d4b2f98d545" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> int</type>
        <definition>SWIGINTERN int SWIG_Lua_add_namespace_details</definition>
        <argsstring>(lua_State *L, swig_lua_namespace *ns)</argsstring>
        <name>SWIG_Lua_add_namespace_details</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="structswig__lua__namespace" kindref="compound">swig_lua_namespace</ref> *</type>
          <declname>ns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1524" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1524" bodyend="1550"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a1eaf1788c7d2da312e1ebd9f251017f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>SWIGINTERN void SWIG_Lua_add_namespace_classes</definition>
        <argsstring>(lua_State *L, swig_lua_namespace *ns)</argsstring>
        <name>SWIG_Lua_add_namespace_classes</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="structswig__lua__namespace" kindref="compound">swig_lua_namespace</ref> *</type>
          <declname>ns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1553" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1553" bodyend="1571"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a85ebfe3fdce248c83e2e3620dc6f330e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>SWIGINTERN void SWIG_Lua_namespace_register</definition>
        <argsstring>(lua_State *L, swig_lua_namespace *ns, int reg)</argsstring>
        <name>SWIG_Lua_namespace_register</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="structswig__lua__namespace" kindref="compound">swig_lua_namespace</ref> *</type>
          <declname>ns</declname>
        </param>
        <param>
          <type>int</type>
          <declname>reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1579" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1579" bodyend="1633"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1af93e8f0a3beec1aefa768abb89fe7485" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>SWIGINTERN void SWIG_Lua_get_class_metatable</definition>
        <argsstring>(lua_State *L, const char *cname)</argsstring>
        <name>SWIG_Lua_get_class_metatable</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1641" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2136" bodyend="2142"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a355fae01cf3c5ae6e3ce7e947a3116ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> int</type>
        <definition>SWIGINTERN int SWIG_Lua_iterate_bases</definition>
        <argsstring>(lua_State *L, swig_type_info *SWIGUNUSED swig_type, int first_arg, swig_lua_base_iterator_func func, int *const ret)</argsstring>
        <name>SWIG_Lua_iterate_bases</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *<ref refid="swig__runtime_8h_1a6ee41cd160d397aa76668bf4db65e2d1" kindref="member">SWIGUNUSED</ref></type>
          <declname>swig_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first_arg</declname>
        </param>
        <param>
          <type><ref refid="swig__runtime_8h_1acb5ead7109df678f22b2ec7d2203ce62" kindref="member">swig_lua_base_iterator_func</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>int *const</type>
          <declname>ret</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1646" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1646" bodyend="1761"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a4d600ac112b2281f2b7b77355eed2fba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> int</type>
        <definition>SWIGINTERN int SWIG_Lua_class_do_get_item</definition>
        <argsstring>(lua_State *L, swig_type_info *type, int SWIGUNUSED first_arg, int *ret)</argsstring>
        <name>SWIG_Lua_class_do_get_item</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int <ref refid="swig__runtime_8h_1a6ee41cd160d397aa76668bf4db65e2d1" kindref="member">SWIGUNUSED</ref></type>
          <declname>first_arg</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ret</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1769" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1769" bodyend="1803"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a194016b571a78a06fd25c82e95325a02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> int</type>
        <definition>SWIGINTERN int SWIG_Lua_class_do_get</definition>
        <argsstring>(lua_State *L, swig_type_info *type, int SWIGUNUSED first_arg, int *ret)</argsstring>
        <name>SWIG_Lua_class_do_get</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int <ref refid="swig__runtime_8h_1a6ee41cd160d397aa76668bf4db65e2d1" kindref="member">SWIGUNUSED</ref></type>
          <declname>first_arg</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ret</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1811" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1811" bodyend="1861"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a85b5ba6bf2bdbe0d21a3611f3b5f8df3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> int</type>
        <definition>SWIGINTERN int SWIG_Lua_class_get</definition>
        <argsstring>(lua_State *L)</argsstring>
        <name>SWIG_Lua_class_get</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1865" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1865" bodyend="1887"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1ab2fdf092684471f1833cdac0ee86c9e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> int</type>
        <definition>SWIGINTERN int SWIG_Lua_class_do_set</definition>
        <argsstring>(lua_State *L, swig_type_info *type, int first_arg, int *ret)</argsstring>
        <name>SWIG_Lua_class_do_set</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first_arg</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ret</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1893" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1893" bodyend="1954"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1ab75aeed852fd5b630a45dd2312ced041" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> int</type>
        <definition>SWIGINTERN int SWIG_Lua_class_set</definition>
        <argsstring>(lua_State *L)</argsstring>
        <name>SWIG_Lua_class_set</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1960" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1960" bodyend="1987"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1aba87e0d4ef2c7e61e81b4f685eef7b7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> int</type>
        <definition>SWIGINTERN int SWIG_Lua_class_destruct</definition>
        <argsstring>(lua_State *L)</argsstring>
        <name>SWIG_Lua_class_destruct</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="1990" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="1990" bodyend="2008"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1aeabb40f074f78d6ff46831b93e4750e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> int</type>
        <definition>SWIGINTERN int SWIG_Lua_class_tostring</definition>
        <argsstring>(lua_State *L)</argsstring>
        <name>SWIG_Lua_class_tostring</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2011" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2011" bodyend="2027"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1aa6dab0ada88ba05ba8067207c79efbd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> int</type>
        <definition>SWIGINTERN int SWIG_Lua_class_disown</definition>
        <argsstring>(lua_State *L)</argsstring>
        <name>SWIG_Lua_class_disown</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2030" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2030" bodyend="2040"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a0063e5175fc7c3ee38480307c0d857f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> int</type>
        <definition>SWIGRUNTIME int SWIG_Lua_class_equal</definition>
        <argsstring>(lua_State *L)</argsstring>
        <name>SWIG_Lua_class_equal</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2045" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2045" bodyend="2058"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a5a21c7c1eaf4626aa084fd8a3110498e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>SWIGINTERN void SWIG_Lua_populate_inheritable_metamethods</definition>
        <argsstring>(lua_State *L)</argsstring>
        <name>SWIG_Lua_populate_inheritable_metamethods</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2062" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2062" bodyend="2079"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1ace2a621c1ad2f0c94f5bbf96cff871a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>SWIGINTERN void SWIG_Lua_create_class_registry</definition>
        <argsstring>(lua_State *L)</argsstring>
        <name>SWIG_Lua_create_class_registry</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2082" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2082" bodyend="2103"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a882b457b337f778c6925c77b59cbae79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>SWIGINTERN void SWIG_Lua_get_class_registry</definition>
        <argsstring>(lua_State *L)</argsstring>
        <name>SWIG_Lua_get_class_registry</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2106" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2106" bodyend="2119"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a787cb072f40cbd1801240c0c84226cb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>SWIGINTERN void SWIG_Lua_get_inheritable_metamethods</definition>
        <argsstring>(lua_State *L)</argsstring>
        <name>SWIG_Lua_get_inheritable_metamethods</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2121" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2121" bodyend="2133"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1ac765a0526209ac87f7e209669ce959d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>SWIGINTERN void SWIG_Lua_init_base_class</definition>
        <argsstring>(lua_State *L, swig_lua_class *clss)</argsstring>
        <name>SWIG_Lua_init_base_class</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref> *</type>
          <declname>clss</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2151" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2151" bodyend="2166"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a893afdb43641c6f2a334bc28b2bc5d90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>SWIGINTERN void SWIG_Lua_add_class_static_details</definition>
        <argsstring>(lua_State *L, swig_lua_class *clss)</argsstring>
        <name>SWIG_Lua_add_class_static_details</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref> *</type>
          <declname>clss</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2262" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2262" bodyend="2275"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a21c9d5d2b378d7fdd5aada2924df05ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>SWIGINTERN void SWIG_Lua_add_class_user_metamethods</definition>
        <argsstring>(lua_State *L, swig_lua_class *clss)</argsstring>
        <name>SWIG_Lua_add_class_user_metamethods</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref> *</type>
          <declname>clss</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2277" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2511" bodyend="2575"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1afbf47dea1fc0e472f8599c32b6b1ea29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>SWIGINTERN void SWIG_Lua_add_class_instance_details</definition>
        <argsstring>(lua_State *L, swig_lua_class *clss)</argsstring>
        <name>SWIG_Lua_add_class_instance_details</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref> *</type>
          <declname>clss</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2281" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2281" bodyend="2333"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a19b76c2a9ea81187953f48fbfbf5d4ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> int</type>
        <definition>SWIGRUNTIME int SWIG_Lua_resolve_metamethod</definition>
        <argsstring>(lua_State *L)</argsstring>
        <name>SWIG_Lua_resolve_metamethod</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2353" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2415" bodyend="2449"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a147dffa5775be5d916031e37e068d187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> int</type>
        <definition>SWIGINTERN int SWIG_Lua_do_resolve_metamethod</definition>
        <argsstring>(lua_State *L, const swig_lua_class *clss, int metamethod_name_idx, int skip_check)</argsstring>
        <name>SWIG_Lua_do_resolve_metamethod</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>const <ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref> *</type>
          <declname>clss</declname>
        </param>
        <param>
          <type>int</type>
          <declname>metamethod_name_idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>skip_check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2372" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2372" bodyend="2410"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a57ec001b1cd68ba7e26ded840d06363d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> int</type>
        <definition>SWIGINTERN int SWIG_Lua_add_class_user_metamethod</definition>
        <argsstring>(lua_State *L, swig_lua_class *clss, const int metatable_index)</argsstring>
        <name>SWIG_Lua_add_class_user_metamethod</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref> *</type>
          <declname>clss</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>metatable_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2457" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2457" bodyend="2509"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a2451693ac83d6d677ab826b113491760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>SWIGINTERN void SWIG_Lua_class_register_static</definition>
        <argsstring>(lua_State *L, swig_lua_class *clss)</argsstring>
        <name>SWIG_Lua_class_register_static</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref> *</type>
          <declname>clss</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2578" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2578" bodyend="2609"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1aa8ec77fb7e1350b87d183a7708f5bdae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>SWIGINTERN void SWIG_Lua_class_register_instance</definition>
        <argsstring>(lua_State *L, swig_lua_class *clss)</argsstring>
        <name>SWIG_Lua_class_register_instance</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref> *</type>
          <declname>clss</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2615" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2615" bodyend="2699"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a8f7e025e07d705726404f14e59195797" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>SWIGINTERN void SWIG_Lua_AddMetatable</definition>
        <argsstring>(lua_State *L, swig_type_info *type)</argsstring>
        <name>SWIG_Lua_AddMetatable</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2785" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2785" bodyend="2800"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a96c4cba9e0940983c98de6a9d6f339c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>SWIGRUNTIME void SWIG_Lua_NewPointerObj</definition>
        <argsstring>(lua_State *L, void *ptr, swig_type_info *type, int own)</argsstring>
        <name>SWIG_Lua_NewPointerObj</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>own</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2803" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2803" bodyend="2820"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a0d0394796468d0001b1d3d358a19891f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> int</type>
        <definition>SWIGRUNTIME int SWIG_Lua_ConvertPtr</definition>
        <argsstring>(lua_State *L, int index, void **ptr, swig_type_info *type, int flags)</argsstring>
        <name>SWIG_Lua_ConvertPtr</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref> **</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2825" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2825" bodyend="2858"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a8ed84d67fe041f17069ed2e28e23d1e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref> *</type>
        <definition>SWIGRUNTIME void* SWIG_Lua_MustGetPtr</definition>
        <argsstring>(lua_State *L, int index, swig_type_info *type, int flags, int argnum, const char *func_name)</argsstring>
        <name>SWIG_Lua_MustGetPtr</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>int</type>
          <declname>argnum</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>func_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2860" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2860" bodyend="2871"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1ab98924e8e52ff8f34ace1515120ccda6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> <ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>SWIGRUNTIME void SWIG_Lua_NewPackedObj</definition>
        <argsstring>(lua_State *L, void *ptr, size_t size, swig_type_info *type)</argsstring>
        <name>SWIG_Lua_NewPackedObj</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2874" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2874" bodyend="2885"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a34313b58896afa8f8a27f1d0bfd2b7c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> int</type>
        <definition>SWIGRUNTIME int SWIG_Lua_ConvertPacked</definition>
        <argsstring>(lua_State *L, int index, void *ptr, size_t size, swig_type_info *type)</argsstring>
        <name>SWIG_Lua_ConvertPacked</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2888" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2888" bodyend="2901"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a3ebd284134ee5f4877fe86f646aebde6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> const char *</type>
        <definition>SWIGRUNTIME const char* SWIG_Lua_typename</definition>
        <argsstring>(lua_State *L, int tp)</argsstring>
        <name>SWIG_Lua_typename</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2904" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2904" bodyend="2915"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a85bb429fb2e29e3681bbda49ce8c34c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref> int</type>
        <definition>SWIGRUNTIME int SWIG_Lua_type</definition>
        <argsstring>(lua_State *L)</argsstring>
        <name>SWIG_Lua_type</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2918" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2918" bodyend="2922"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a3af0c40da7cc32dc9af81d722828ad63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref> int</type>
        <definition>SWIGINTERN int SWIG_Lua_dostring</definition>
        <argsstring>(lua_State *L, const char *str)</argsstring>
        <name>SWIG_Lua_dostring</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="2994" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="2994" bodyend="3011"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a7dd78b07dde208ce1a05f97f1b6d2501" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1affa7aa2bcce5bea24a20e5b184ae0533" kindref="member">SWIGRUNTIMEINLINE</ref> <ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *</type>
        <definition>SWIGRUNTIMEINLINE swig_type_info* SWIG_TypeQuery</definition>
        <argsstring>(SWIG_MODULE_CLIENTDATA_TYPE clientdata, const char *name)</argsstring>
        <name>SWIG_TypeQuery</name>
        <param>
          <type><ref refid="swig__runtime_8h_1a50d0a80dccc1d34749f07c82d6a04169" kindref="member">SWIG_MODULE_CLIENTDATA_TYPE</ref></type>
          <declname>clientdata</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="3032" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="3032" bodyend="3036"/>
      </memberdef>
      <memberdef kind="function" id="swig__runtime_8h_1a810714d8aa076f5821d7af57872b38cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="swig__runtime_8h_1affa7aa2bcce5bea24a20e5b184ae0533" kindref="member">SWIGRUNTIMEINLINE</ref> <ref refid="structswig__type__info" kindref="compound">swig_type_info</ref> *</type>
        <definition>SWIGRUNTIMEINLINE swig_type_info* SWIG_MangledTypeQuery</definition>
        <argsstring>(SWIG_MODULE_CLIENTDATA_TYPE clientdata, const char *name)</argsstring>
        <name>SWIG_MangledTypeQuery</name>
        <param>
          <type><ref refid="swig__runtime_8h_1a50d0a80dccc1d34749f07c82d6a04169" kindref="member">SWIG_MODULE_CLIENTDATA_TYPE</ref></type>
          <declname>clientdata</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" line="3039" column="1" bodyfile="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h" bodystart="3039" bodyend="3043"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Version<sp/>3.0.11</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>not<sp/>intended<sp/>to<sp/>be<sp/>easily<sp/>readable<sp/>and<sp/>contains<sp/>a<sp/>number<sp/>of</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>coding<sp/>conventions<sp/>designed<sp/>to<sp/>improve<sp/>portability<sp/>and<sp/>efficiency.<sp/>Do<sp/>not</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>make</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify<sp/>the<sp/>SWIG</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>interface<sp/>file<sp/>instead.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>section<sp/>contains<sp/>generic<sp/>SWIG<sp/>labels<sp/>for<sp/>method/variable</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>declarations/attributes,<sp/>and<sp/>other<sp/>compiler<sp/>dependent<sp/>labels.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>template<sp/>workaround<sp/>for<sp/>compilers<sp/>that<sp/>cannot<sp/>correctly<sp/>implement<sp/>the<sp/>C++</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>standard<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIGTEMPLATEDISAMBIGUATOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__SUNPRO_CC)<sp/>&amp;&amp;<sp/>(__SUNPRO_CC<sp/>&lt;=<sp/>0x560)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIGTEMPLATEDISAMBIGUATOR<sp/>template</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__HP_aCC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Needed<sp/>even<sp/>with<sp/>`aCC<sp/>-AA&apos;<sp/>when<sp/>`aCC<sp/>-V&apos;<sp/>reports<sp/>HP<sp/>ANSI<sp/>C++<sp/>B3910B<sp/>A.03.55</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>find<sp/>a<sp/>maximum<sp/>version<sp/>that<sp/>requires<sp/>this,<sp/>the<sp/>test<sp/>would<sp/>be<sp/>__HP_aCC</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>&lt;=<sp/>35500<sp/>for<sp/>A.03.55<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIGTEMPLATEDISAMBIGUATOR<sp/>template</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="swig__runtime_8h_1a7e84031693895e512662f5b390c6d0e4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIGTEMPLATEDISAMBIGUATOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inline<sp/>attribute<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIGINLINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)<sp/>||<sp/>(defined(__GNUC__)<sp/>&amp;&amp;<sp/>!defined(__STRICT_ANSI__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIGINLINE<sp/>inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="swig__runtime_8h_1a6d0a7c65b3712775e92c8bdb7acdd0ee" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIGINLINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>attribute<sp/>recognised<sp/>by<sp/>some<sp/>compilers<sp/>to<sp/>avoid<sp/>&apos;unused&apos;<sp/>warnings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIGUNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!(defined(__cplusplus))<sp/>||<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(__GNUC__<sp/>&gt;<sp/>3<sp/>||<sp/>(__GNUC__<sp/>==<sp/>3<sp/>&amp;&amp;<sp/>__GNUC_MINOR__<sp/>&gt;=<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIGUNUSED<sp/>__attribute__((__unused__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIGUNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__ICC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIGUNUSED<sp/>__attribute__((__unused__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="swig__runtime_8h_1a6ee41cd160d397aa76668bf4db65e2d1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIGUNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIG_MSC_UNSUPPRESS_4505</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>disable<sp/>:<sp/>4505)<sp/></highlight><highlight class="comment">/*<sp/>unreferenced<sp/>local<sp/>function<sp/>has<sp/>been<sp/>removed<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIGUNUSEDPARM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIGUNUSEDPARM(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="swig__runtime_8h_1a6a54164d0685c632e7540c5ad32a453a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIGUNUSEDPARM(p)<sp/>p<sp/>SWIGUNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>internal<sp/>SWIG<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIGINTERN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIGINTERN<sp/>static<sp/>SWIGUNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>internal<sp/>inline<sp/>SWIG<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIGINTERNINLINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="swig__runtime_8h_1afc5b08bb3c3cd2e3fb2e34b775346153" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIGINTERNINLINE<sp/>SWIGINTERN<sp/>SWIGINLINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>exporting<sp/>methods<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>&gt;=<sp/>4)<sp/>||<sp/>(__GNUC__<sp/>==<sp/>3<sp/>&amp;&amp;<sp/>__GNUC_MINOR__<sp/>&gt;=<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GCC_HASCLASSVISIBILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GCC_HASCLASSVISIBILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIGEXPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_WIN32)<sp/>||<sp/>defined(__WIN32__)<sp/>||<sp/>defined(__CYGWIN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STATIC_LINKED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIGEXPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIGEXPORT<sp/>__declspec(dllexport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>defined(GCC_HASCLASSVISIBILITY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIGEXPORT<sp/>__attribute__((visibility(&quot;default&quot;)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="swig__runtime_8h_1aea3c8b056dcc8c1ab93f6b825cd1371b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIGEXPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>calling<sp/>conventions<sp/>for<sp/>Windows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIGSTDCALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_WIN32)<sp/>||<sp/>defined(__WIN32__)<sp/>||<sp/>defined(__CYGWIN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIGSTDCALL<sp/>__stdcall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="swig__runtime_8h_1adcd6410456ea7a76147d3ad95b9bcb36" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIGSTDCALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Deal<sp/>with<sp/>Microsoft&apos;s<sp/>attempt<sp/>at<sp/>deprecating<sp/>C<sp/>standard<sp/>runtime<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE)<sp/>&amp;&amp;<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>!defined(_CRT_SECURE_NO_DEPRECATE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_CRT_SECURE_NO_DEPRECATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Deal<sp/>with<sp/>Microsoft&apos;s<sp/>attempt<sp/>at<sp/>deprecating<sp/>methods<sp/>in<sp/>the<sp/>standard<sp/>C++</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/>library<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE)<sp/>&amp;&amp;<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>!defined(_SCL_SECURE_NO_DEPRECATE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SCL_SECURE_NO_DEPRECATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Deal<sp/>with<sp/>Apple&apos;s<sp/>deprecated<sp/>&apos;AssertMacros.h&apos;<sp/>from<sp/>Carbon-framework<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__APPLE__)<sp/>&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="134"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>!defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Intel&apos;s<sp/>compiler<sp/>complains<sp/>if<sp/>a<sp/>variable<sp/>which<sp/>was<sp/>never<sp/>initialised<sp/>is</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/>cast<sp/>to<sp/>void,<sp/>which<sp/>is<sp/>a<sp/>common<sp/>idiom<sp/>which<sp/>we<sp/>use<sp/>to<sp/>indicate<sp/>that<sp/>we</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*<sp/>are<sp/>aware<sp/>a<sp/>variable<sp/>isn&apos;t<sp/>used.<sp/><sp/>So<sp/>we<sp/>just<sp/>silence<sp/>that<sp/>warning.</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*<sp/>See:<sp/>https://github.com/swig/swig/issues/192<sp/>for<sp/>more<sp/>discussion.</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__INTEL_COMPILER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>disable<sp/>592</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Errors<sp/>in<sp/>SWIG<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="swig__runtime_8h_1a45817cd389e6f40d0ffb004ff0678031" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_UnknownError<sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="swig__runtime_8h_1a9fcdfcd79ad6f30120990223ea16879a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_IOError<sp/>-2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="swig__runtime_8h_1a34d3d1c1310427d00140bf1cc8de3ef6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_RuntimeError<sp/>-3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="swig__runtime_8h_1af1ed73e454bdee28cc19369784f56eed" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_IndexError<sp/>-4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="swig__runtime_8h_1a2685345a18f9d5fe8a390ec8500cb916" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_TypeError<sp/>-5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="swig__runtime_8h_1ae4cc0f5599402526dd5c2fdb80d87517" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_DivisionByZero<sp/>-6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="swig__runtime_8h_1ae9c11d011d8390489595f718d7565a8a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_OverflowError<sp/>-7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="swig__runtime_8h_1a1c4e29c043d3220cedca539360e07148" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_SyntaxError<sp/>-8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="swig__runtime_8h_1a4c1b15a2401d60351d98df9327886280" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_ValueError<sp/>-9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="swig__runtime_8h_1ae4a7b4ce78e031cbf5227bea38d81221" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_SystemError<sp/>-10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="swig__runtime_8h_1a5c83bd4d8f39d6eed1df7d3444caa2e1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_AttributeError<sp/>-11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="swig__runtime_8h_1ae1cd9de0a75c6d814815a9de66a4a46d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_MemoryError<sp/>-12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="swig__runtime_8h_1aa11fe417abd4c5a02d31cc1a51dee007" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_NullReferenceError<sp/>-13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/>swigrun.swg</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>generic<sp/>C<sp/>API<sp/>SWIG<sp/>runtime<sp/>support<sp/>for<sp/>pointer</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*<sp/>type<sp/>checking.</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>should<sp/>only<sp/>be<sp/>incremented<sp/>when<sp/>either<sp/>the<sp/>layout<sp/>of<sp/>swig_type_info</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/>changes,</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/>or<sp/>for<sp/>whatever<sp/>reason,<sp/>the<sp/>runtime<sp/>changes<sp/>incompatibly<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="swig__runtime_8h_1a4895907de5539551925ab5c03ea05d28" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_RUNTIME_VERSION<sp/>&quot;4&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>define<sp/>SWIG_TYPE_TABLE_NAME<sp/>as<sp/>&quot;SWIG_TYPE_TABLE&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SWIG_TYPE_TABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_QUOTE_STRING(x)<sp/>#x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_EXPAND_AND_QUOTE_STRING(x)<sp/>SWIG_QUOTE_STRING(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_TYPE_TABLE_NAME<sp/>SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="swig__runtime_8h_1ac619a84edecccb5e00c1b4a3180b8c3a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_TYPE_TABLE_NAME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/>You<sp/>can<sp/>use<sp/>the<sp/>SWIGRUNTIME<sp/>and<sp/>SWIGRUNTIMEINLINE<sp/>macros<sp/>for</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/>creating<sp/>a<sp/>static<sp/>or<sp/>dynamic<sp/>library<sp/>from<sp/>the<sp/>SWIG<sp/>runtime<sp/>code.</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/>In<sp/>99.9%<sp/>of<sp/>the<sp/>cases,<sp/>SWIG<sp/>just<sp/>needs<sp/>to<sp/>declare<sp/>them<sp/>as<sp/>&apos;static&apos;.</highlight></codeline>
<codeline lineno="187"><highlight class="comment"></highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/>But<sp/>only<sp/>do<sp/>this<sp/>if<sp/>strictly<sp/>necessary,<sp/>ie,<sp/>if<sp/>you<sp/>have<sp/>problems</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/>with<sp/>your<sp/>compiler<sp/>or<sp/>suchlike.</highlight></codeline>
<codeline lineno="190"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIGRUNTIME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIGRUNTIME<sp/>SWIGINTERN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIGRUNTIMEINLINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="swig__runtime_8h_1affa7aa2bcce5bea24a20e5b184ae0533" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIGRUNTIMEINLINE<sp/>SWIGRUNTIME<sp/>SWIGINLINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Generic<sp/>buffer<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIG_BUFFER_SIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="swig__runtime_8h_1a26324fcd1baceab72680dfec078da440" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_BUFFER_SIZE<sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Flags<sp/>for<sp/>pointer<sp/>conversions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="swig__runtime_8h_1aa56139a289829795ed651d533826b65e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_POINTER_DISOWN<sp/>0x1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="swig__runtime_8h_1ac8216459bfd45cbd2be36175ef6f1ccc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_CAST_NEW_MEMORY<sp/>0x2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Flags<sp/>for<sp/>new<sp/>pointer<sp/>objects<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="swig__runtime_8h_1a1a125b0e9c551bb9cdeb21b8e5be5b57" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_POINTER_OWN<sp/>0x1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/>Flags/methods<sp/>for<sp/>returning<sp/>states.</highlight></codeline>
<codeline lineno="214"><highlight class="comment"></highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/>The<sp/>SWIG<sp/>conversion<sp/>methods,<sp/>as<sp/>ConvertPtr,<sp/>return<sp/>an<sp/>integer</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/>that<sp/>tells<sp/>if<sp/>the<sp/>conversion<sp/>was<sp/>successful<sp/>or<sp/>not.<sp/>And<sp/>if<sp/>not,</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/>an<sp/>error<sp/>code<sp/>can<sp/>be<sp/>returned<sp/>(see<sp/>swigerrors.swg<sp/>for<sp/>the<sp/>codes).</highlight></codeline>
<codeline lineno="218"><highlight class="comment"></highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/>Use<sp/>the<sp/>following<sp/>macros/flags<sp/>to<sp/>set<sp/>or<sp/>process<sp/>the<sp/>returning</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/>states.</highlight></codeline>
<codeline lineno="221"><highlight class="comment"></highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/>In<sp/>old<sp/>versions<sp/>of<sp/>SWIG,<sp/>code<sp/>such<sp/>as<sp/>the<sp/>following<sp/>was<sp/>usually<sp/>written:</highlight></codeline>
<codeline lineno="223"><highlight class="comment"></highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>if<sp/>(SWIG_ConvertPtr(obj,vptr,ty.flags)<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>success<sp/>code</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//fail<sp/>code</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="comment"></highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/>Now<sp/>you<sp/>can<sp/>be<sp/>more<sp/>explicit:</highlight></codeline>
<codeline lineno="231"><highlight class="comment"></highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>res<sp/>=<sp/>SWIG_ConvertPtr(obj,vptr,ty.flags);</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(SWIG_IsOK(res))<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>success<sp/>code</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>fail<sp/>code</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="comment"></highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/>which<sp/>is<sp/>the<sp/>same<sp/>really,<sp/>but<sp/>now<sp/>you<sp/>can<sp/>also<sp/>do</highlight></codeline>
<codeline lineno="240"><highlight class="comment"></highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/><sp/>Type<sp/>*ptr;</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>res<sp/>=<sp/>SWIG_ConvertPtr(obj,(void<sp/>**)(&amp;ptr),ty.flags);</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(SWIG_IsOK(res))<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>success<sp/>code</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(SWIG_IsNewObj(res)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete<sp/>*ptr;</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>fail<sp/>code</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="comment"></highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/>I.e.,<sp/>now<sp/>SWIG_ConvertPtr<sp/>can<sp/>return<sp/>new<sp/>objects<sp/>and<sp/>you<sp/>can</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/>identify<sp/>the<sp/>case<sp/>and<sp/>take<sp/>care<sp/>of<sp/>the<sp/>deallocation.<sp/>Of<sp/>course<sp/>that</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/>also<sp/>requires<sp/>SWIG_ConvertPtr<sp/>to<sp/>return<sp/>new<sp/>result<sp/>values,<sp/>such<sp/>as</highlight></codeline>
<codeline lineno="258"><highlight class="comment"></highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>SWIG_ConvertPtr(obj,<sp/>ptr,...)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(&lt;obj<sp/>is<sp/>ok&gt;)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(&lt;need<sp/>new<sp/>object&gt;)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr<sp/>=<sp/>&lt;ptr<sp/>to<sp/>new<sp/>allocated<sp/>object&gt;;</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>SWIG_NEWOBJ;</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr<sp/>=<sp/>&lt;ptr<sp/>to<sp/>old<sp/>object&gt;;</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>SWIG_OLDOBJ;</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>SWIG_BADOBJ;</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="comment"></highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/>Of<sp/>course,<sp/>returning<sp/>the<sp/>plain<sp/>&apos;0(success)/-1(fail)&apos;<sp/>still<sp/>works,<sp/>but<sp/>you<sp/>can</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/>be</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/>more<sp/>explicit<sp/>by<sp/>returning<sp/>SWIG_BADOBJ,<sp/>SWIG_ERROR<sp/>or<sp/>any<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/>SWIG<sp/>errors<sp/>code.</highlight></codeline>
<codeline lineno="277"><highlight class="comment"></highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/>Finally,<sp/>if<sp/>the<sp/>SWIG_CASTRANK_MODE<sp/>is<sp/>enabled,<sp/>the<sp/>result<sp/>code</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/>allows<sp/>to<sp/>return<sp/>the<sp/>&apos;cast<sp/>rank&apos;,<sp/>for<sp/>example,<sp/>if<sp/>you<sp/>have<sp/>this</highlight></codeline>
<codeline lineno="280"><highlight class="comment"></highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>food(double)</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>fooi(int);</highlight></codeline>
<codeline lineno="283"><highlight class="comment"></highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/>and<sp/>you<sp/>call</highlight></codeline>
<codeline lineno="285"><highlight class="comment"></highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>food(1)<sp/><sp/><sp/>//<sp/>cast<sp/>rank<sp/>&apos;1&apos;<sp/><sp/>(1<sp/>-&gt;<sp/>1.0)</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>fooi(1)<sp/><sp/><sp/>//<sp/>cast<sp/>rank<sp/>&apos;0&apos;</highlight></codeline>
<codeline lineno="288"><highlight class="comment"></highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/>just<sp/>use<sp/>the<sp/>SWIG_AddCast()/SWIG_CheckState()</highlight></codeline>
<codeline lineno="290"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="swig__runtime_8h_1af9ecbac56d4c5cd6104ae8f6bb82e9f7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_OK<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="swig__runtime_8h_1acfa11a770d66f9ca6ba170b173c56c94" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_ERROR<sp/>(-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="swig__runtime_8h_1aea8ef410fde907633cb76d9d18131fa1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_IsOK(r)<sp/>(r<sp/>&gt;=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="swig__runtime_8h_1a95bab7504841595502bac5ed195becc1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_ArgError(r)<sp/>((r<sp/>!=<sp/>SWIG_ERROR)<sp/>?<sp/>r<sp/>:<sp/>SWIG_TypeError)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>CastRankLimit<sp/>says<sp/>how<sp/>many<sp/>bits<sp/>are<sp/>used<sp/>for<sp/>the<sp/>cast<sp/>rank<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="swig__runtime_8h_1a2f15c36f8b66185937b8232640be62e4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_CASTRANKLIMIT<sp/>(1<sp/>&lt;&lt;<sp/>8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>NewMask<sp/>denotes<sp/>the<sp/>object<sp/>was<sp/>created<sp/>(using<sp/>new/malloc)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="swig__runtime_8h_1a0021b435c31c3ab285b5a6f4547719e3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_NEWOBJMASK<sp/>(SWIG_CASTRANKLIMIT<sp/>&lt;&lt;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>TmpMask<sp/>is<sp/>for<sp/>in/out<sp/>typemaps<sp/>that<sp/>use<sp/>temporal<sp/>objects<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="swig__runtime_8h_1a399dafc6302bd9b309041d5570ae94c9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_TMPOBJMASK<sp/>(SWIG_NEWOBJMASK<sp/>&lt;&lt;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Simple<sp/>returning<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="swig__runtime_8h_1a8268a243a8a840396db70f745c23c37c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_BADOBJ<sp/>(SWIG_ERROR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="swig__runtime_8h_1a4afcf490ff5b4abbca27ca23d9af288e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_OLDOBJ<sp/>(SWIG_OK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="swig__runtime_8h_1ab00ef4fde02a6d8d9653ea9edb28d3c9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_NEWOBJ<sp/>(SWIG_OK<sp/>|<sp/>SWIG_NEWOBJMASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="swig__runtime_8h_1ab1fe70ae34b39b709eb4cfb084862236" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_TMPOBJ<sp/>(SWIG_OK<sp/>|<sp/>SWIG_TMPOBJMASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Check,<sp/>add<sp/>and<sp/>del<sp/>mask<sp/>methods<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="swig__runtime_8h_1af7ac7e424b623712f70e9b6640a54853" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_AddNewMask(r)<sp/>(SWIG_IsOK(r)<sp/>?<sp/>(r<sp/>|<sp/>SWIG_NEWOBJMASK)<sp/>:<sp/>r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="swig__runtime_8h_1ab3ead1d5cb36e1d79daf0bb4732957be" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_DelNewMask(r)<sp/>(SWIG_IsOK(r)<sp/>?<sp/>(r<sp/>&amp;<sp/>~SWIG_NEWOBJMASK)<sp/>:<sp/>r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="swig__runtime_8h_1a5246ae38052e6fa0e3cca2026cdda153" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_IsNewObj(r)<sp/>(SWIG_IsOK(r)<sp/>&amp;&amp;<sp/>(r<sp/>&amp;<sp/>SWIG_NEWOBJMASK))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="swig__runtime_8h_1af8527f0123949ec90e05d0fb156c11e3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_AddTmpMask(r)<sp/>(SWIG_IsOK(r)<sp/>?<sp/>(r<sp/>|<sp/>SWIG_TMPOBJMASK)<sp/>:<sp/>r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="swig__runtime_8h_1ac08b44ea4ae9f73b19d915969f301a5d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_DelTmpMask(r)<sp/>(SWIG_IsOK(r)<sp/>?<sp/>(r<sp/>&amp;<sp/>~SWIG_TMPOBJMASK)<sp/>:<sp/>r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="swig__runtime_8h_1aa8f2563a536468b40dc33843d4bb7efe" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_IsTmpObj(r)<sp/>(SWIG_IsOK(r)<sp/>&amp;&amp;<sp/>(r<sp/>&amp;<sp/>SWIG_TMPOBJMASK))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Cast-Rank<sp/>Mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SWIG_CASTRANK_MODE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIG_TypeRank</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_TypeRank<sp/>unsigned<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIG_MAXCASTRANK<sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>cast<sp/>allowed<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_MAXCASTRANK<sp/>(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_CASTRANKMASK<sp/>((SWIG_CASTRANKLIMIT)-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_CastRank(r)<sp/>(r<sp/>&amp;<sp/>SWIG_CASTRANKMASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><ref refid="swig__runtime_8h_1afc5b08bb3c3cd2e3fb2e34b775346153" kindref="member">SWIGINTERNINLINE</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a4f6f5e0444e44e48aef51f6620438a5f" kindref="member">SWIG_AddCast</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r)</highlight></codeline>
<codeline lineno="327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1aea8ef410fde907633cb76d9d18131fa1" kindref="member">SWIG_IsOK</ref>(r)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>((SWIG_CastRank(r)<sp/>&lt;<sp/>SWIG_MAXCASTRANK)<sp/>?<sp/>(r<sp/>+<sp/>1)<sp/>:<sp/><ref refid="swig__runtime_8h_1acfa11a770d66f9ca6ba170b173c56c94" kindref="member">SWIG_ERROR</ref>)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>r;</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><ref refid="swig__runtime_8h_1afc5b08bb3c3cd2e3fb2e34b775346153" kindref="member">SWIGINTERNINLINE</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a1faed8ca17e98c961611bc35fde708a9" kindref="member">SWIG_CheckState</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r)</highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1aea8ef410fde907633cb76d9d18131fa1" kindref="member">SWIG_IsOK</ref>(r)<sp/>?<sp/>SWIG_CastRank(r)<sp/>+<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>cast-rank<sp/>mode<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="swig__runtime_8h_1a4f6f5e0444e44e48aef51f6620438a5f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_AddCast(r)<sp/>(r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="swig__runtime_8h_1a1faed8ca17e98c961611bc35fde708a9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_CheckState(r)<sp/>(SWIG_IsOK(r)<sp/>?<sp/>1<sp/>:<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="swig__runtime_8h_1a9a51597c7c2041da303a65468011f59b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*swig_converter_func)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="348" refid="swig__runtime_8h_1aee981c41d733723d60337a77630106af" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*(*swig_dycast_func)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Structure<sp/>to<sp/>store<sp/>information<sp/>on<sp/>one<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="structswig__type__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref></highlight></codeline>
<codeline lineno="352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="353" refid="structswig__type__info_1a90a9c6a25aa3e923978005ecbe23ad60" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structswig__type__info_1a90a9c6a25aa3e923978005ecbe23ad60" kindref="member">name</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>mangled<sp/>name<sp/>of<sp/>this<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="structswig__type__info_1abbe7cc58a083feb4329b748643324064" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structswig__type__info_1abbe7cc58a083feb4329b748643324064" kindref="member">str</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>human<sp/>readable<sp/>name<sp/>of<sp/>this<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="structswig__type__info_1a07df4bedf85be77b23756b531b60e0dd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1aee981c41d733723d60337a77630106af" kindref="member">swig_dycast_func</ref><sp/><ref refid="structswig__type__info_1a07df4bedf85be77b23756b531b60e0dd" kindref="member">dcast</ref>;<sp/></highlight><highlight class="comment">/*<sp/>dynamic<sp/>cast<sp/>function<sp/>down<sp/>a<sp/>hierarchy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="structswig__type__info_1a3ee3f7ef20e965b6c798d79723a96f9b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structswig__cast__info" kindref="compound">swig_cast_info</ref></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structswig__type__info_1a3ee3f7ef20e965b6c798d79723a96f9b" kindref="member">cast</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>linked<sp/>list<sp/>of<sp/>types<sp/>that<sp/>can<sp/>cast<sp/>into<sp/>this<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="structswig__type__info_1a19bdd65dceb89cd54befd3ded06558b7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structswig__type__info_1a19bdd65dceb89cd54befd3ded06558b7" kindref="member">clientdata</ref>;<sp/></highlight><highlight class="comment">/*<sp/>language<sp/>specific<sp/>type<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="structswig__type__info_1a93c25d5903cbfcb82208eea7227c32bd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structswig__type__info_1a93c25d5903cbfcb82208eea7227c32bd" kindref="member">owndata</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>flag<sp/>if<sp/>the<sp/>structure<sp/>owns<sp/>the<sp/>clientdata<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal">}<sp/><ref refid="swig__runtime_8h_1a838fee418372997705a565cd6ecd3b22" kindref="member">swig_type_info</ref>;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Structure<sp/>to<sp/>store<sp/>a<sp/>type<sp/>and<sp/>conversion<sp/>function<sp/>used<sp/>for<sp/>casting<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="structswig__cast__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structswig__cast__info" kindref="compound">swig_cast_info</ref></highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365" refid="structswig__cast__info_1a1c9023a301c8d6806209f4e10df6e9e0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*<ref refid="structswig__cast__info_1a1c9023a301c8d6806209f4e10df6e9e0" kindref="member">type</ref>;<sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>type<sp/>that<sp/>is<sp/>equivalent<sp/>to<sp/>this<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="structswig__cast__info_1aa630fddfbb1bf9c97a03f9479ba32f76" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a9a51597c7c2041da303a65468011f59b" kindref="member">swig_converter_func</ref><sp/><ref refid="structswig__cast__info_1aa630fddfbb1bf9c97a03f9479ba32f76" kindref="member">converter</ref>;<sp/></highlight><highlight class="comment">/*<sp/>function<sp/>to<sp/>cast<sp/>the<sp/>void<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="structswig__cast__info_1ae79c6fa058a9d908bbdac14db0c9db5e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structswig__cast__info" kindref="compound">swig_cast_info</ref><sp/>*<ref refid="structswig__cast__info_1ae79c6fa058a9d908bbdac14db0c9db5e" kindref="member">next</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>next<sp/>cast<sp/>in<sp/>linked<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="structswig__cast__info_1afc685bcf38a5a06c6601775138c5999c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structswig__cast__info" kindref="compound">swig_cast_info</ref><sp/>*<ref refid="structswig__cast__info_1afc685bcf38a5a06c6601775138c5999c" kindref="member">prev</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>the<sp/>previous<sp/>cast<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal">}<sp/><ref refid="swig__runtime_8h_1a9a04e6e78de723759e5450cd29429d1f" kindref="member">swig_cast_info</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Structure<sp/>used<sp/>to<sp/>store<sp/>module<sp/>information</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*<sp/>Each<sp/>module<sp/>generates<sp/>one<sp/>structure<sp/>like<sp/>this,<sp/>and<sp/>the<sp/>runtime<sp/>collects</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*<sp/>all<sp/>of<sp/>these<sp/>structures<sp/>and<sp/>stores<sp/>them<sp/>in<sp/>a<sp/>circularly<sp/>linked<sp/>list.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="structswig__module__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structswig__module__info" kindref="compound">swig_module_info</ref></highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*</highlight></codeline>
<codeline lineno="377" refid="structswig__module__info_1abda310ff2462f8a1ebfc8dc7552206f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structswig__module__info_1abda310ff2462f8a1ebfc8dc7552206f2" kindref="member">types</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Array<sp/>of<sp/>pointers<sp/>to<sp/>swig_type_info<sp/>structures<sp/>that<sp/>are<sp/>in</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>module<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="structswig__module__info_1aaf8907cf8509ee0464af8c9dfd909042" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structswig__module__info_1aaf8907cf8509ee0464af8c9dfd909042" kindref="member">size</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>types<sp/>in<sp/>this<sp/>module<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="structswig__module__info_1ac177d150b85ab77122089acf1f06d9c6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structswig__module__info" kindref="compound">swig_module_info</ref></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structswig__module__info_1ac177d150b85ab77122089acf1f06d9c6" kindref="member">next</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Pointer<sp/>to<sp/>next<sp/>element<sp/>in<sp/>circularly<sp/>linked<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*</highlight></codeline>
<codeline lineno="383" refid="structswig__module__info_1af5e826d0f0c1698f7404543a7d5b258a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structswig__module__info_1af5e826d0f0c1698f7404543a7d5b258a" kindref="member">type_initial</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Array<sp/>of<sp/>initially<sp/>generated<sp/>type<sp/>structures<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><ref refid="structswig__cast__info" kindref="compound">swig_cast_info</ref><sp/>*</highlight></codeline>
<codeline lineno="385" refid="structswig__module__info_1a281dac542d1af6af141b8366ecc4de92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structswig__module__info_1a281dac542d1af6af141b8366ecc4de92" kindref="member">cast_initial</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Array<sp/>of<sp/>initially<sp/>generated<sp/>casting<sp/>structures<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="structswig__module__info_1a9fb6e461fcaf14c209049adfae4e9754" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structswig__module__info_1a9fb6e461fcaf14c209049adfae4e9754" kindref="member">clientdata</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Language<sp/>specific<sp/>module<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal">}<sp/><ref refid="swig__runtime_8h_1acf7d83901372902dd5cf59a611dfb320" kindref="member">swig_module_info</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/><sp/>Compare<sp/>two<sp/>type<sp/>names<sp/>skipping<sp/>the<sp/>space<sp/>characters,<sp/>therefore</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/><sp/>&quot;char*&quot;<sp/>==<sp/>&quot;char<sp/>*&quot;<sp/>and<sp/>&quot;Class&lt;int&gt;&quot;<sp/>==<sp/>&quot;Class&lt;int<sp/>&gt;&quot;,<sp/>etc.</highlight></codeline>
<codeline lineno="392"><highlight class="comment"></highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/><sp/>Return<sp/>0<sp/>when<sp/>the<sp/>two<sp/>name<sp/>types<sp/>are<sp/>equivalent,<sp/>as<sp/>in</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/><sp/>strncmp,<sp/>but<sp/>skipping<sp/>&apos;<sp/>&apos;.</highlight></codeline>
<codeline lineno="395"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="swig__runtime_8h_1a2f69ad4207037cb391a2b2d5915fcba2" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a2f69ad4207037cb391a2b2d5915fcba2" kindref="member">SWIG_TypeNameComp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*f1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*l1,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*f2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*l2)</highlight></codeline>
<codeline lineno="398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>(f1<sp/>!=<sp/>l1)<sp/>&amp;&amp;<sp/>(f2<sp/>!=<sp/>l2);<sp/>++f1,<sp/>++f2)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((*f1<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(f1<sp/>!=<sp/>l1))</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++f1;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((*f2<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(f2<sp/>!=<sp/>l2))</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++f2;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*f1<sp/>!=<sp/>*f2)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*f1<sp/>&gt;<sp/>*f2)<sp/>?<sp/>1<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)((l1<sp/>-<sp/>f1)<sp/>-<sp/>(l2<sp/>-<sp/>f2));</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/><sp/>Check<sp/>type<sp/>equivalence<sp/>in<sp/>a<sp/>name<sp/>list<sp/>like<sp/>&lt;name1&gt;|&lt;name2&gt;|...</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/><sp/>Return<sp/>0<sp/>if<sp/>equal,<sp/>-1<sp/>if<sp/>nb<sp/>&lt;<sp/>tb,<sp/>1<sp/>if<sp/>nb<sp/>&gt;<sp/>tb</highlight></codeline>
<codeline lineno="414"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="swig__runtime_8h_1a73131c439c907ed987c34da85b95a597" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a73131c439c907ed987c34da85b95a597" kindref="member">SWIG_TypeCmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nb,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tb)</highlight></codeline>
<codeline lineno="416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>equiv<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*te<sp/>=<sp/>tb<sp/>+<sp/>strlen(tb);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ne<sp/>=<sp/>nb;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(equiv<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>*ne)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(nb<sp/>=<sp/>ne;<sp/>*ne;<sp/>++ne)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ne<sp/>==<sp/></highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>equiv<sp/>=<sp/><ref refid="swig__runtime_8h_1a2f69ad4207037cb391a2b2d5915fcba2" kindref="member">SWIG_TypeNameComp</ref>(nb,<sp/>ne,<sp/>tb,<sp/>te);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ne)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ne;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>equiv;</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/><sp/>Check<sp/>type<sp/>equivalence<sp/>in<sp/>a<sp/>name<sp/>list<sp/>like<sp/>&lt;name1&gt;|&lt;name2&gt;|...</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/><sp/>Return<sp/>0<sp/>if<sp/>not<sp/>equal,<sp/>1<sp/>if<sp/>equal</highlight></codeline>
<codeline lineno="437"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="swig__runtime_8h_1a23ecf039d651082ffc7582c4f50af780" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a23ecf039d651082ffc7582c4f50af780" kindref="member">SWIG_TypeEquiv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nb,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tb)</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a73131c439c907ed987c34da85b95a597" kindref="member">SWIG_TypeCmp</ref>(nb,<sp/>tb)<sp/>==<sp/>0<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/><sp/>Check<sp/>the<sp/>typename</highlight></codeline>
<codeline lineno="445"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446" refid="swig__runtime_8h_1abd0cb78a9663e41312c8f14ab6715f04" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/><ref refid="structswig__cast__info" kindref="compound">swig_cast_info</ref><sp/>*<ref refid="swig__runtime_8h_1abd0cb78a9663e41312c8f14ab6715f04" kindref="member">SWIG_TypeCheck</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*c,<sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*ty)</highlight></codeline>
<codeline lineno="447"><highlight class="normal">{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ty)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__cast__info" kindref="compound">swig_cast_info</ref><sp/>*iter<sp/>=<sp/>ty-&gt;<ref refid="structswig__type__info_1a3ee3f7ef20e965b6c798d79723a96f9b" kindref="member">cast</ref>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(iter-&gt;<ref refid="structswig__cast__info_1a1c9023a301c8d6806209f4e10df6e9e0" kindref="member">type</ref>-&gt;<ref refid="structswig__type__info_1a90a9c6a25aa3e923978005ecbe23ad60" kindref="member">name</ref>,<sp/>c)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>==<sp/>ty-&gt;<ref refid="structswig__type__info_1a3ee3f7ef20e965b6c798d79723a96f9b" kindref="member">cast</ref>)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iter;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Move<sp/>iter<sp/>to<sp/>the<sp/>top<sp/>of<sp/>the<sp/>linked<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="structswig__cast__info_1afc685bcf38a5a06c6601775138c5999c" kindref="member">prev</ref>-&gt;<ref refid="structswig__cast__info_1ae79c6fa058a9d908bbdac14db0c9db5e" kindref="member">next</ref><sp/>=<sp/>iter-&gt;<ref refid="structswig__cast__info_1ae79c6fa058a9d908bbdac14db0c9db5e" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter-&gt;<ref refid="structswig__cast__info_1ae79c6fa058a9d908bbdac14db0c9db5e" kindref="member">next</ref>)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="structswig__cast__info_1ae79c6fa058a9d908bbdac14db0c9db5e" kindref="member">next</ref>-&gt;<ref refid="structswig__cast__info_1afc685bcf38a5a06c6601775138c5999c" kindref="member">prev</ref><sp/>=<sp/>iter-&gt;<ref refid="structswig__cast__info_1afc685bcf38a5a06c6601775138c5999c" kindref="member">prev</ref>;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="structswig__cast__info_1ae79c6fa058a9d908bbdac14db0c9db5e" kindref="member">next</ref><sp/>=<sp/>ty-&gt;<ref refid="structswig__type__info_1a3ee3f7ef20e965b6c798d79723a96f9b" kindref="member">cast</ref>;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="structswig__cast__info_1afc685bcf38a5a06c6601775138c5999c" kindref="member">prev</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ty-&gt;<ref refid="structswig__type__info_1a3ee3f7ef20e965b6c798d79723a96f9b" kindref="member">cast</ref>)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ty-&gt;<ref refid="structswig__type__info_1a3ee3f7ef20e965b6c798d79723a96f9b" kindref="member">cast</ref>-&gt;<ref refid="structswig__cast__info_1afc685bcf38a5a06c6601775138c5999c" kindref="member">prev</ref><sp/>=<sp/>iter;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ty-&gt;<ref refid="structswig__type__info_1a3ee3f7ef20e965b6c798d79723a96f9b" kindref="member">cast</ref><sp/>=<sp/>iter;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iter;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>=<sp/>iter-&gt;<ref refid="structswig__cast__info_1ae79c6fa058a9d908bbdac14db0c9db5e" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/><sp/>Identical<sp/>to<sp/>SWIG_TypeCheck,<sp/>except<sp/>strcmp<sp/>is<sp/>replaced<sp/>with<sp/>a<sp/>pointer</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/><sp/>comparison</highlight></codeline>
<codeline lineno="477"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478" refid="swig__runtime_8h_1a898a1dfcdf96d53a2c7fd90e8500b36e" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/><ref refid="structswig__cast__info" kindref="compound">swig_cast_info</ref><sp/>*<ref refid="swig__runtime_8h_1a898a1dfcdf96d53a2c7fd90e8500b36e" kindref="member">SWIG_TypeCheckStruct</ref>(<ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*from,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*ty)</highlight></codeline>
<codeline lineno="480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ty)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__cast__info" kindref="compound">swig_cast_info</ref><sp/>*iter<sp/>=<sp/>ty-&gt;<ref refid="structswig__type__info_1a3ee3f7ef20e965b6c798d79723a96f9b" kindref="member">cast</ref>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter)</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter-&gt;<ref refid="structswig__cast__info_1a1c9023a301c8d6806209f4e10df6e9e0" kindref="member">type</ref><sp/>==<sp/>from)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>==<sp/>ty-&gt;<ref refid="structswig__type__info_1a3ee3f7ef20e965b6c798d79723a96f9b" kindref="member">cast</ref>)</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iter;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Move<sp/>iter<sp/>to<sp/>the<sp/>top<sp/>of<sp/>the<sp/>linked<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="structswig__cast__info_1afc685bcf38a5a06c6601775138c5999c" kindref="member">prev</ref>-&gt;<ref refid="structswig__cast__info_1ae79c6fa058a9d908bbdac14db0c9db5e" kindref="member">next</ref><sp/>=<sp/>iter-&gt;<ref refid="structswig__cast__info_1ae79c6fa058a9d908bbdac14db0c9db5e" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter-&gt;<ref refid="structswig__cast__info_1ae79c6fa058a9d908bbdac14db0c9db5e" kindref="member">next</ref>)</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="structswig__cast__info_1ae79c6fa058a9d908bbdac14db0c9db5e" kindref="member">next</ref>-&gt;<ref refid="structswig__cast__info_1afc685bcf38a5a06c6601775138c5999c" kindref="member">prev</ref><sp/>=<sp/>iter-&gt;<ref refid="structswig__cast__info_1afc685bcf38a5a06c6601775138c5999c" kindref="member">prev</ref>;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="structswig__cast__info_1ae79c6fa058a9d908bbdac14db0c9db5e" kindref="member">next</ref><sp/>=<sp/>ty-&gt;<ref refid="structswig__type__info_1a3ee3f7ef20e965b6c798d79723a96f9b" kindref="member">cast</ref>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="structswig__cast__info_1afc685bcf38a5a06c6601775138c5999c" kindref="member">prev</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ty-&gt;<ref refid="structswig__type__info_1a3ee3f7ef20e965b6c798d79723a96f9b" kindref="member">cast</ref>)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ty-&gt;<ref refid="structswig__type__info_1a3ee3f7ef20e965b6c798d79723a96f9b" kindref="member">cast</ref>-&gt;<ref refid="structswig__cast__info_1afc685bcf38a5a06c6601775138c5999c" kindref="member">prev</ref><sp/>=<sp/>iter;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ty-&gt;<ref refid="structswig__type__info_1a3ee3f7ef20e965b6c798d79723a96f9b" kindref="member">cast</ref><sp/>=<sp/>iter;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iter;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>=<sp/>iter-&gt;<ref refid="structswig__cast__info_1ae79c6fa058a9d908bbdac14db0c9db5e" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/><sp/>Cast<sp/>a<sp/>pointer<sp/>up<sp/>an<sp/>inheritance<sp/>hierarchy</highlight></codeline>
<codeline lineno="509"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510" refid="swig__runtime_8h_1a334486cb1e8f569c949a0384cbdb2a16" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1affa7aa2bcce5bea24a20e5b184ae0533" kindref="member">SWIGRUNTIMEINLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="swig__runtime_8h_1a334486cb1e8f569c949a0384cbdb2a16" kindref="member">SWIG_TypeCast</ref>(<ref refid="structswig__cast__info" kindref="compound">swig_cast_info</ref><sp/>*ty,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*newmemory)</highlight></codeline>
<codeline lineno="512"><highlight class="normal">{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((!ty)<sp/>||<sp/>(!ty-&gt;<ref refid="structswig__cast__info_1aa630fddfbb1bf9c97a03f9479ba32f76" kindref="member">converter</ref>))<sp/>?<sp/>ptr<sp/>:<sp/>(*ty-&gt;<ref refid="structswig__cast__info_1aa630fddfbb1bf9c97a03f9479ba32f76" kindref="member">converter</ref>)(ptr,<sp/>newmemory);</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/><sp/><sp/>Dynamic<sp/>pointer<sp/>casting.<sp/>Down<sp/>an<sp/>inheritance<sp/>hierarchy</highlight></codeline>
<codeline lineno="518"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519" refid="swig__runtime_8h_1add8cb1a47628b36915ffa37d61452b1e" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*<ref refid="swig__runtime_8h_1add8cb1a47628b36915ffa37d61452b1e" kindref="member">SWIG_TypeDynamicCast</ref>(<ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*ty,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**ptr)</highlight></codeline>
<codeline lineno="520"><highlight class="normal">{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*lastty<sp/>=<sp/>ty;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ty<sp/>||<sp/>!ty-&gt;<ref refid="structswig__type__info_1a07df4bedf85be77b23756b531b60e0dd" kindref="member">dcast</ref>)</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ty;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ty<sp/>&amp;&amp;<sp/>(ty-&gt;<ref refid="structswig__type__info_1a07df4bedf85be77b23756b531b60e0dd" kindref="member">dcast</ref>))</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ty<sp/>=<sp/>(*ty-&gt;<ref refid="structswig__type__info_1a07df4bedf85be77b23756b531b60e0dd" kindref="member">dcast</ref>)(ptr);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ty)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastty<sp/>=<sp/>ty;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lastty;</highlight></codeline>
<codeline lineno="531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/><sp/>Return<sp/>the<sp/>name<sp/>associated<sp/>with<sp/>this<sp/>type</highlight></codeline>
<codeline lineno="535"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536" refid="swig__runtime_8h_1a68560e0bf641c9691704d6d05bac4358" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1affa7aa2bcce5bea24a20e5b184ae0533" kindref="member">SWIGRUNTIMEINLINE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="swig__runtime_8h_1a68560e0bf641c9691704d6d05bac4358" kindref="member">SWIG_TypeName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*ty)</highlight></codeline>
<codeline lineno="537"><highlight class="normal">{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ty-&gt;<ref refid="structswig__type__info_1a90a9c6a25aa3e923978005ecbe23ad60" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/><sp/>Return<sp/>the<sp/>pretty<sp/>name<sp/>associated<sp/>with<sp/>this<sp/>type,</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/><sp/>that<sp/>is<sp/>an<sp/>unmangled<sp/>type<sp/>name<sp/>in<sp/>a<sp/>form<sp/>presentable<sp/>to<sp/>the<sp/>user.</highlight></codeline>
<codeline lineno="544"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="swig__runtime_8h_1a3f38ea686cb3f85bf6a15b08416f2684" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="swig__runtime_8h_1a3f38ea686cb3f85bf6a15b08416f2684" kindref="member">SWIG_TypePrettyName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*type)</highlight></codeline>
<codeline lineno="546"><highlight class="normal">{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>&quot;str&quot;<sp/>field<sp/>contains<sp/>the<sp/>equivalent<sp/>pretty<sp/>names<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>type,<sp/>separated<sp/>by<sp/>vertical-bar<sp/>characters.<sp/><sp/>We<sp/>choose</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>to<sp/>print<sp/>the<sp/>last<sp/>name,<sp/>as<sp/>it<sp/>is<sp/>often<sp/>(?)<sp/>the<sp/>most</highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>specific.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!type)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type-&gt;<ref refid="structswig__type__info_1abbe7cc58a083feb4329b748643324064" kindref="member">str</ref><sp/>!=<sp/><ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*last_name<sp/>=<sp/>type-&gt;<ref refid="structswig__type__info_1abbe7cc58a083feb4329b748643324064" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(s<sp/>=<sp/>type-&gt;<ref refid="structswig__type__info_1abbe7cc58a083feb4329b748643324064" kindref="member">str</ref>;<sp/>*s;<sp/>s++)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*s<sp/>==<sp/></highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_name<sp/>=<sp/>s<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>last_name;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type-&gt;<ref refid="structswig__type__info_1a90a9c6a25aa3e923978005ecbe23ad60" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/><sp/><sp/>Set<sp/>the<sp/>clientdata<sp/>field<sp/>for<sp/>a<sp/>type</highlight></codeline>
<codeline lineno="568"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569" refid="swig__runtime_8h_1a4b0a40223812f7d43bc2f0c2342fe2f7" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a4b0a40223812f7d43bc2f0c2342fe2f7" kindref="member">SWIG_TypeClientData</ref>(<ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*ti,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structswig__module__info_1a9fb6e461fcaf14c209049adfae4e9754" kindref="member">clientdata</ref>)</highlight></codeline>
<codeline lineno="570"><highlight class="normal">{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><ref refid="structswig__cast__info" kindref="compound">swig_cast_info</ref><sp/>*cast<sp/>=<sp/>ti-&gt;<ref refid="structswig__type__info_1a3ee3f7ef20e965b6c798d79723a96f9b" kindref="member">cast</ref>;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>(ti-&gt;clientdata<sp/>==<sp/>clientdata)<sp/>return;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>ti-&gt;<ref refid="structswig__type__info_1a19bdd65dceb89cd54befd3ded06558b7" kindref="member">clientdata</ref><sp/>=<sp/><ref refid="structswig__module__info_1a9fb6e461fcaf14c209049adfae4e9754" kindref="member">clientdata</ref>;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cast)</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cast-&gt;<ref refid="structswig__cast__info_1aa630fddfbb1bf9c97a03f9479ba32f76" kindref="member">converter</ref>)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*tc<sp/>=<sp/>cast-&gt;<ref refid="structswig__cast__info_1a1c9023a301c8d6806209f4e10df6e9e0" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tc-&gt;<ref refid="structswig__type__info_1a19bdd65dceb89cd54befd3ded06558b7" kindref="member">clientdata</ref>)</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a4b0a40223812f7d43bc2f0c2342fe2f7" kindref="member">SWIG_TypeClientData</ref>(tc,<sp/><ref refid="structswig__module__info_1a9fb6e461fcaf14c209049adfae4e9754" kindref="member">clientdata</ref>);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cast<sp/>=<sp/>cast-&gt;<ref refid="structswig__cast__info_1ae79c6fa058a9d908bbdac14db0c9db5e" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588" refid="swig__runtime_8h_1a710082a7ea6978d654bad712dbebc0ee" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a710082a7ea6978d654bad712dbebc0ee" kindref="member">SWIG_TypeNewClientData</ref>(<ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*ti,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structswig__module__info_1a9fb6e461fcaf14c209049adfae4e9754" kindref="member">clientdata</ref>)</highlight></codeline>
<codeline lineno="589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a4b0a40223812f7d43bc2f0c2342fe2f7" kindref="member">SWIG_TypeClientData</ref>(ti,<sp/><ref refid="structswig__module__info_1a9fb6e461fcaf14c209049adfae4e9754" kindref="member">clientdata</ref>);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>ti-&gt;<ref refid="structswig__type__info_1a93c25d5903cbfcb82208eea7227c32bd" kindref="member">owndata</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/><sp/>Search<sp/>for<sp/>a<sp/>swig_type_info<sp/>structure<sp/>only<sp/>by<sp/>mangled<sp/>name</highlight></codeline>
<codeline lineno="596"><highlight class="comment"><sp/><sp/>Search<sp/>is<sp/>a<sp/>O(log<sp/>#types)</highlight></codeline>
<codeline lineno="597"><highlight class="comment"></highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/><sp/>We<sp/>start<sp/>searching<sp/>at<sp/>module<sp/>start,<sp/>and<sp/>finish<sp/>searching<sp/>when<sp/>start<sp/>==<sp/>end.</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/><sp/>Note:<sp/>if<sp/>start<sp/>==<sp/>end<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>function,<sp/>we<sp/>go<sp/>all<sp/>the<sp/>way</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/><sp/>around</highlight></codeline>
<codeline lineno="601"><highlight class="comment"><sp/><sp/>the<sp/>circular<sp/>list.</highlight></codeline>
<codeline lineno="602"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603" refid="swig__runtime_8h_1ac63ad9b58a96793188f944c92ff40ec6" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*<ref refid="swig__runtime_8h_1ac63ad9b58a96793188f944c92ff40ec6" kindref="member">SWIG_MangledTypeQueryModule</ref>(<ref refid="structswig__module__info" kindref="compound">swig_module_info</ref><sp/>*start,</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__module__info" kindref="compound">swig_module_info</ref><sp/>*end,</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="606"><highlight class="normal">{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><ref refid="structswig__module__info" kindref="compound">swig_module_info</ref><sp/>*iter<sp/>=<sp/>start;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter-&gt;<ref refid="structswig__module__info_1aaf8907cf8509ee0464af8c9dfd909042" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>iter-&gt;<ref refid="structswig__module__info_1aaf8907cf8509ee0464af8c9dfd909042" kindref="member">size</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>since<sp/>l+r<sp/>&gt;=<sp/>0,<sp/>we<sp/>can<sp/>(&gt;&gt;<sp/>1)<sp/>instead<sp/>(/<sp/>2)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>(l<sp/>+<sp/>r)<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*iname<sp/>=<sp/>iter-&gt;<ref refid="structswig__module__info_1abda310ff2462f8a1ebfc8dc7552206f2" kindref="member">types</ref>[i]-&gt;<ref refid="structswig__type__info_1a90a9c6a25aa3e923978005ecbe23ad60" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iname)</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compare<sp/>=<sp/>strcmp(name,<sp/>iname);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compare<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iter-&gt;<ref refid="structswig__module__info_1abda310ff2462f8a1ebfc8dc7552206f2" kindref="member">types</ref>[i];</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compare<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i)</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>i<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compare<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>should<sp/>never<sp/>happen<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(l<sp/>&lt;=<sp/>r);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>=<sp/>iter-&gt;<ref refid="structswig__module__info_1ac177d150b85ab77122089acf1f06d9c6" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>end);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="656"><highlight class="comment"><sp/><sp/>Search<sp/>for<sp/>a<sp/>swig_type_info<sp/>structure<sp/>for<sp/>either<sp/>a<sp/>mangled<sp/>name<sp/>or<sp/>a<sp/>human</highlight></codeline>
<codeline lineno="657"><highlight class="comment"><sp/><sp/>readable<sp/>name.</highlight></codeline>
<codeline lineno="658"><highlight class="comment"><sp/><sp/>It<sp/>first<sp/>searches<sp/>the<sp/>mangled<sp/>names<sp/>of<sp/>the<sp/>types,<sp/>which<sp/>is<sp/>a<sp/>O(log<sp/>#types)</highlight></codeline>
<codeline lineno="659"><highlight class="comment"><sp/><sp/>If<sp/>a<sp/>type<sp/>is<sp/>not<sp/>found<sp/>it<sp/>then<sp/>searches<sp/>the<sp/>human<sp/>readable<sp/>names,<sp/>which<sp/>is</highlight></codeline>
<codeline lineno="660"><highlight class="comment"><sp/><sp/>O(#types).</highlight></codeline>
<codeline lineno="661"><highlight class="comment"></highlight></codeline>
<codeline lineno="662"><highlight class="comment"><sp/><sp/>We<sp/>start<sp/>searching<sp/>at<sp/>module<sp/>start,<sp/>and<sp/>finish<sp/>searching<sp/>when<sp/>start<sp/>==<sp/>end.</highlight></codeline>
<codeline lineno="663"><highlight class="comment"><sp/><sp/>Note:<sp/>if<sp/>start<sp/>==<sp/>end<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>function,<sp/>we<sp/>go<sp/>all<sp/>the<sp/>way</highlight></codeline>
<codeline lineno="664"><highlight class="comment"><sp/><sp/>around</highlight></codeline>
<codeline lineno="665"><highlight class="comment"><sp/><sp/>the<sp/>circular<sp/>list.</highlight></codeline>
<codeline lineno="666"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667" refid="swig__runtime_8h_1a5b6a2719f95288678fa55ade4493b175" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*<ref refid="swig__runtime_8h_1a5b6a2719f95288678fa55ade4493b175" kindref="member">SWIG_TypeQueryModule</ref>(<ref refid="structswig__module__info" kindref="compound">swig_module_info</ref><sp/>*start,</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__module__info" kindref="compound">swig_module_info</ref><sp/>*end,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="670"><highlight class="normal">{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>STEP<sp/>1:<sp/>Search<sp/>the<sp/>name<sp/>field<sp/>using<sp/>binary<sp/>search<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*ret<sp/>=<sp/><ref refid="swig__runtime_8h_1ac63ad9b58a96793188f944c92ff40ec6" kindref="member">SWIG_MangledTypeQueryModule</ref>(start,<sp/>end,<sp/>name);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>STEP<sp/>2:<sp/>If<sp/>the<sp/>type<sp/>hasn&apos;t<sp/>been<sp/>found,<sp/>do<sp/>a<sp/>complete<sp/>search</highlight></codeline>
<codeline lineno="680"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>str<sp/>field<sp/>(the<sp/>human<sp/>readable<sp/>name)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__module__info" kindref="compound">swig_module_info</ref><sp/>*iter<sp/>=<sp/>start;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;<sp/>iter-&gt;<ref refid="structswig__module__info_1aaf8907cf8509ee0464af8c9dfd909042" kindref="member">size</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter-&gt;<ref refid="structswig__module__info_1abda310ff2462f8a1ebfc8dc7552206f2" kindref="member">types</ref>[i]-&gt;<ref refid="structswig__type__info_1abbe7cc58a083feb4329b748643324064" kindref="member">str</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="swig__runtime_8h_1a23ecf039d651082ffc7582c4f50af780" kindref="member">SWIG_TypeEquiv</ref>(iter-&gt;<ref refid="structswig__module__info_1abda310ff2462f8a1ebfc8dc7552206f2" kindref="member">types</ref>[i]-&gt;<ref refid="structswig__type__info_1abbe7cc58a083feb4329b748643324064" kindref="member">str</ref>,<sp/>name)))</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iter-&gt;<ref refid="structswig__module__info_1abda310ff2462f8a1ebfc8dc7552206f2" kindref="member">types</ref>[i];</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>=<sp/>iter-&gt;<ref refid="structswig__module__info_1ac177d150b85ab77122089acf1f06d9c6" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>end);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>neither<sp/>found<sp/>a<sp/>match<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="701"><highlight class="comment"><sp/><sp/><sp/>Pack<sp/>binary<sp/>data<sp/>into<sp/>a<sp/>string</highlight></codeline>
<codeline lineno="702"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703" refid="swig__runtime_8h_1a02c2ac3db8ce87dd62813334e66c9a3a" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="swig__runtime_8h_1a02c2ac3db8ce87dd62813334e66c9a3a" kindref="member">SWIG_PackData</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*c,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz)</highlight></codeline>
<codeline lineno="704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>hex[17]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0123456789abcdef&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*u<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)ptr;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*eu<sp/>=<sp/>u<sp/>+<sp/>sz;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>u<sp/>!=<sp/>eu;<sp/>++u)</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>uu<sp/>=<sp/>*u;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(c++)<sp/>=<sp/>hex[(uu<sp/>&amp;<sp/>0xf0)<sp/>&gt;&gt;<sp/>4];</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(c++)<sp/>=<sp/>hex[uu<sp/>&amp;<sp/>0xf];</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="715"><highlight class="normal">}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="718"><highlight class="comment"><sp/><sp/><sp/>Unpack<sp/>binary<sp/>data<sp/>from<sp/>a<sp/>string</highlight></codeline>
<codeline lineno="719"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720" refid="swig__runtime_8h_1a80e9e66f66413297452de92c69cdf9d7" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="swig__runtime_8h_1a80e9e66f66413297452de92c69cdf9d7" kindref="member">SWIG_UnpackData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*c,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz)</highlight></codeline>
<codeline lineno="721"><highlight class="normal">{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*u<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)ptr;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*eu<sp/>=<sp/>u<sp/>+<sp/>sz;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>u<sp/>!=<sp/>eu;<sp/>++u)</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>*(c++);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>uu;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((d<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(d<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uu<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)((d<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>4);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((d<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(d<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uu<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)((d<sp/>-<sp/>(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>-<sp/>10))<sp/>&lt;&lt;<sp/>4);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)0;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>*(c++);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((d<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(d<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uu<sp/>|=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)(d<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((d<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(d<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uu<sp/>|=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)(d<sp/>-<sp/>(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>-<sp/>10));</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)0;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*u<sp/>=<sp/>uu;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="747"><highlight class="comment"><sp/><sp/><sp/>Pack<sp/>&apos;void<sp/>*&apos;<sp/>into<sp/>a<sp/>string<sp/>buffer.</highlight></codeline>
<codeline lineno="748"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749" refid="swig__runtime_8h_1a10c5572eb6206df7c95c8a2fcde90911" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="swig__runtime_8h_1a10c5572eb6206df7c95c8a2fcde90911" kindref="member">SWIG_PackVoidPtr</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buff,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bsz)</highlight></codeline>
<codeline lineno="751"><highlight class="normal">{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*r<sp/>=<sp/>buff;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((2<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>+<sp/>2)<sp/>&gt;<sp/>bsz)</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/>*(r++)<sp/>=<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>r<sp/>=<sp/><ref refid="swig__runtime_8h_1a02c2ac3db8ce87dd62813334e66c9a3a" kindref="member">SWIG_PackData</ref>(r,<sp/>&amp;ptr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(name)<sp/>+<sp/>1<sp/>&gt;<sp/>(bsz<sp/>-<sp/>(r<sp/>-<sp/>buff)))</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>strcpy(r,<sp/>name);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buff;</highlight></codeline>
<codeline lineno="761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763" refid="swig__runtime_8h_1ae3e13f3464cb74f7e5d9f7a50a6855c0" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="swig__runtime_8h_1ae3e13f3464cb74f7e5d9f7a50a6855c0" kindref="member">SWIG_UnpackVoidPtr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*c,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**ptr,</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="765"><highlight class="normal">{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(c,<sp/></highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)0;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a80e9e66f66413297452de92c69cdf9d7" kindref="member">SWIG_UnpackData</ref>(++c,<sp/>ptr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781" refid="swig__runtime_8h_1af903e6809a1fb2ba06deff49795c6e65" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="swig__runtime_8h_1af903e6809a1fb2ba06deff49795c6e65" kindref="member">SWIG_PackDataName</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buff,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz,</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bsz)</highlight></codeline>
<codeline lineno="783"><highlight class="normal">{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*r<sp/>=<sp/>buff;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>lname<sp/>=<sp/>(name<sp/>?<sp/>strlen(name)<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((2<sp/>*<sp/>sz<sp/>+<sp/>2<sp/>+<sp/>lname)<sp/>&gt;<sp/>bsz)</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/>*(r++)<sp/>=<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/>r<sp/>=<sp/><ref refid="swig__runtime_8h_1a02c2ac3db8ce87dd62813334e66c9a3a" kindref="member">SWIG_PackData</ref>(r,<sp/>ptr,<sp/>sz);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lname)</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(r,<sp/>name,<sp/>lname<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buff;</highlight></codeline>
<codeline lineno="799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801" refid="swig__runtime_8h_1a99540d89d9ffca957892cf22af3e49dd" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="swig__runtime_8h_1a99540d89d9ffca957892cf22af3e49dd" kindref="member">SWIG_UnpackDataName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*c,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz,</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="803"><highlight class="normal">{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(c,<sp/></highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(ptr,<sp/>0,<sp/>sz);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a80e9e66f66413297452de92c69cdf9d7" kindref="member">SWIG_UnpackData</ref>(++c,<sp/>ptr,<sp/>sz);</highlight></codeline>
<codeline lineno="817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822" refid="swig__runtime_8h_1a84d911ffa9c41b3a66cc7e7d3645671f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_TARGET<sp/>SWIG_LUA_FLAVOR_LUA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="824"><highlight class="comment"><sp/>*<sp/>luarun.swg</highlight></codeline>
<codeline lineno="825"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="826"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>the<sp/>runtime<sp/>support<sp/>for<sp/>Lua<sp/>modules</highlight></codeline>
<codeline lineno="827"><highlight class="comment"><sp/>*<sp/>and<sp/>includes<sp/>code<sp/>for<sp/>managing<sp/>global<sp/>variables<sp/>and<sp/>pointer</highlight></codeline>
<codeline lineno="828"><highlight class="comment"><sp/>*<sp/>type<sp/>checking.</highlight></codeline>
<codeline lineno="829"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="830"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lauxlib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lua.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>a<sp/>few<sp/>sanity<sp/>tests<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>malloc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="842"><highlight class="comment"><sp/>*<sp/>Lua<sp/>flavors</highlight></codeline>
<codeline lineno="843"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="844"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846" refid="swig__runtime_8h_1a6e2b880437634cb73e882be20de53d32" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_FLAVOR_LUA<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847" refid="swig__runtime_8h_1a00a6f75261552001dd1ac741f712d82f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_FLAVOR_ELUA<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848" refid="swig__runtime_8h_1a351d33087485b24840afe357df576385" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_FLAVOR_ELUAC<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(SWIG_LUA_TARGET)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>SWIG_LUA_TARGET<sp/>not<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SWIG_LUA_ELUA_EMULATE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">swig_elua_entry;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">swig_elua_key</highlight></codeline>
<codeline lineno="859"><highlight class="normal">{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*strkey;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>lua_Number<sp/>numkey;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/>}<sp/>key;</highlight></codeline>
<codeline lineno="866"><highlight class="normal">}<sp/>swig_elua_key;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">swig_elua_val</highlight></codeline>
<codeline lineno="869"><highlight class="normal">{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>lua_Number<sp/>number;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">swig_elua_entry<sp/>*table;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*string;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>lua_CFunction<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>member;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lvalue;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvalue;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>**ptype;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>userdata;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/>}<sp/>value;</highlight></codeline>
<codeline lineno="885"><highlight class="normal">}<sp/>swig_elua_val;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">swig_elua_entry</highlight></codeline>
<codeline lineno="888"><highlight class="normal">{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/>swig_elua_key<sp/>key;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/>swig_elua_val<sp/>value;</highlight></codeline>
<codeline lineno="891"><highlight class="normal">}<sp/>swig_elua_entry;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LSTRKEY(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="894"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="895"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>LUA_TSTRING,<sp/>{<sp/>.strkey<sp/>=<sp/>x<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="896"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LNUMKEY(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="898"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="899"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>LUA_TNUMBER,<sp/>{<sp/>.numkey<sp/>=<sp/>x<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="900"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LNILKEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="902"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="903"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>LUA_TNIL,<sp/>{<sp/>.strkey<sp/>=<sp/>0<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="904"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LNUMVAL(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="907"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="908"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>LUA_TNUMBER,<sp/>{<sp/>.number<sp/>=<sp/>x<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="909"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LFUNCVAL(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="911"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="912"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>LUA_TFUNCTION,<sp/>{<sp/>.function<sp/>=<sp/>x<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="913"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LROVAL(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="915"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="916"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>LUA_TTABLE,<sp/>{<sp/>.table<sp/>=<sp/>x<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="917"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LNILVAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="919"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="920"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>LUA_TNIL,<sp/>{<sp/>.string<sp/>=<sp/>0<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="921"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LSTRVAL(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="923"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="924"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>LUA_TSTRING,<sp/>{<sp/>.string<sp/>=<sp/>x<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="925"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUA_REG_TYPE<sp/>swig_elua_entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_ELUA_EMUL_METATABLE_KEY<sp/>&quot;__metatable&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>lua_pushrotable(L,<sp/>p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="932"><highlight class="preprocessor"><sp/><sp/>lua_newtable(L);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="933"><highlight class="preprocessor"><sp/><sp/>assert(p);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="934"><highlight class="preprocessor"><sp/><sp/>SWIG_Lua_elua_emulate_register(L,<sp/>(swig_elua_entry<sp/>*)(p));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_CONSTTAB_POINTER(B,<sp/>C,<sp/>D)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="937"><highlight class="preprocessor"><sp/><sp/>LSTRKEY(B),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="938"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="939"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>LUA_TUSERDATA,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="940"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="941"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>.userdata<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>(void<sp/>*)(C),<sp/>&amp;D<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="942"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="943"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_CONSTTAB_BINARY(B,<sp/>S,<sp/>C,<sp/>D)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="946"><highlight class="preprocessor"><sp/><sp/>LSTRKEY(B),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="947"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="948"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>LUA_TUSERDATA,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="949"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="950"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>.userdata<sp/>=<sp/>{<sp/>1,<sp/>S,<sp/>(void<sp/>*)(C),<sp/>&amp;D<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="951"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="952"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(SWIG_LUA_TARGET<sp/>==<sp/>SWIG_LUA_FLAVOR_ELUA)<sp/>||<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="956"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(SWIG_LUA_TARGET<sp/>==<sp/>SWIG_LUA_FLAVOR_ELUAC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_CONSTTAB_INT(B,<sp/>C)<sp/>LSTRKEY(B),<sp/>LNUMVAL(C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_CONSTTAB_FLOAT(B,<sp/>C)<sp/>LSTRKEY(B),<sp/>LNUMVAL(C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_CONSTTAB_STRING(B,<sp/>C)<sp/>LSTRKEY(B),<sp/>LSTRVAL(C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_CONSTTAB_CHAR(B,<sp/>C)<sp/>LSTRKEY(B),<sp/>LNUMVAL(C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Those<sp/>two<sp/>types<sp/>of<sp/>constants<sp/>are<sp/>not<sp/>supported<sp/>in<sp/>elua<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIG_LUA_CONSTTAB_POINTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight><highlight class="preprocessor">#warning<sp/>eLua<sp/>does<sp/>not<sp/>support<sp/>pointers<sp/>as<sp/>constants.<sp/>By<sp/>default,<sp/>nil<sp/>will<sp/>be<sp/>used<sp/>as<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_CONSTTAB_POINTER(B,<sp/>C,<sp/>D)<sp/>LSTRKEY(B),<sp/>LNILVAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIG_LUA_CONSTTAB_BINARY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight><highlight class="preprocessor">#warning<sp/>eLua<sp/>does<sp/>not<sp/>support<sp/>pointers<sp/>to<sp/>member<sp/>as<sp/>constants.<sp/>By<sp/>default,<sp/>nil<sp/>will<sp/>be<sp/>used<sp/>as<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_CONSTTAB_BINARY(B,<sp/>S,<sp/>C,<sp/>D)<sp/>LSTRKEY(B),<sp/>LNILVAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>SWIG_LUA_FLAVOR_LUA<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973" refid="swig__runtime_8h_1a81533fe9e3e23fc8a0caad2a15ddc953" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_CONSTTAB_INT(B,<sp/>C)<sp/>SWIG_LUA_INT,<sp/>(char<sp/>*)B,<sp/>(long)C,<sp/>0,<sp/>0,<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974" refid="swig__runtime_8h_1a86474eb3525b32c80966dde2330e9596" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_CONSTTAB_FLOAT(B,<sp/>C)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="975"><highlight class="preprocessor"><sp/><sp/>SWIG_LUA_FLOAT,<sp/>(char<sp/>*)B,<sp/>0,<sp/>(double)C,<sp/>0,<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976" refid="swig__runtime_8h_1a9bcdad1f49921f12301ceb55b31f7f48" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_CONSTTAB_STRING(B,<sp/>C)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="977"><highlight class="preprocessor"><sp/><sp/>SWIG_LUA_STRING,<sp/>(char<sp/>*)B,<sp/>0,<sp/>0,<sp/>(void<sp/>*)C,<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978" refid="swig__runtime_8h_1af21b898b6e053c8bb73855969e0888b0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_CONSTTAB_CHAR(B,<sp/>C)<sp/>SWIG_LUA_CHAR,<sp/>(char<sp/>*)B,<sp/>(long)C,<sp/>0,<sp/>0,<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979" refid="swig__runtime_8h_1ab5c3df1096e1d0596e6401e9aaf91f4b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_CONSTTAB_POINTER(B,<sp/>C,<sp/>D)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="980"><highlight class="preprocessor"><sp/><sp/>SWIG_LUA_POINTER,<sp/>(char<sp/>*)B,<sp/>0,<sp/>0,<sp/>(void<sp/>*)C,<sp/>&amp;D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981" refid="swig__runtime_8h_1a38564dfb0235d7ba0f543836919b6dac" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_CONSTTAB_BINARY(B,<sp/>S,<sp/>C,<sp/>D)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="982"><highlight class="preprocessor"><sp/><sp/>SWIG_LUA_BINARY,<sp/>(char<sp/>*)B,<sp/>S,<sp/>0,<sp/>(void<sp/>*)C,<sp/>&amp;D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIG_LUA_ELUA_EMULATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(SWIG_LUA_TARGET<sp/>==<sp/>SWIG_LUA_FLAVOR_ELUA)<sp/>||<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="987"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(SWIG_LUA_TARGET<sp/>==<sp/>SWIG_LUA_FLAVOR_ELUAC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LRO_STRVAL(v)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="989"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="990"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{.p<sp/>=<sp/>(char<sp/>*)v},<sp/>LUA_TSTRING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="991"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LSTRVAL<sp/>LRO_STRVAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SWIG_LUA_ELUA_EMULATE*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIG_LUA_ELUA_EMULATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(SWIG_LUA_TARGET<sp/>==<sp/>SWIG_LUA_FLAVOR_ELUA)<sp/>||<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="998"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(SWIG_LUA_TARGET<sp/>==<sp/>SWIG_LUA_FLAVOR_ELUAC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MIN_OPT_LEVEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN_OPT_LEVEL<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lrodefs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lrotable.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SWIG_LUA_ELUA_EMULATE*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1009"><highlight class="comment"><sp/>*<sp/>compatibility<sp/>defines</highlight></codeline>
<codeline lineno="1010"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1011"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>History<sp/>of<sp/>Lua<sp/>C<sp/>API<sp/>length<sp/>functions:<sp/><sp/>In<sp/>Lua<sp/>5.0<sp/>(and<sp/>before?)</highlight></codeline>
<codeline lineno="1014"><highlight class="comment"><sp/><sp/><sp/>there<sp/>was<sp/>&quot;lua_strlen&quot;.<sp/><sp/>In<sp/>Lua<sp/>5.1,<sp/>this<sp/>was<sp/>renamed<sp/>&quot;lua_objlen&quot;,</highlight></codeline>
<codeline lineno="1015"><highlight class="comment"><sp/><sp/><sp/>but<sp/>a<sp/>compatibility<sp/>define<sp/>of<sp/>&quot;lua_strlen&quot;<sp/>was<sp/>added.<sp/><sp/>In<sp/>Lua<sp/>5.2,</highlight></codeline>
<codeline lineno="1016"><highlight class="comment"><sp/><sp/><sp/>this<sp/>function<sp/>was<sp/>again<sp/>renamed,<sp/>to<sp/>&quot;lua_rawlen&quot;<sp/>(to<sp/>emphasize<sp/>that</highlight></codeline>
<codeline lineno="1017"><highlight class="comment"><sp/><sp/><sp/>it<sp/>doesn&apos;t<sp/>call<sp/>the<sp/>&quot;__len&quot;<sp/>metamethod),<sp/>and<sp/>the<sp/>compatibility</highlight></codeline>
<codeline lineno="1018"><highlight class="comment"><sp/><sp/><sp/>define<sp/>of<sp/>lua_strlen<sp/>was<sp/>removed.<sp/><sp/>All<sp/>SWIG<sp/>uses<sp/>have<sp/>been<sp/>updated</highlight></codeline>
<codeline lineno="1019"><highlight class="comment"><sp/><sp/><sp/>to<sp/>&quot;lua_rawlen&quot;,<sp/>and<sp/>we<sp/>add<sp/>our<sp/>own<sp/>defines<sp/>of<sp/>that<sp/>here<sp/>for<sp/>older</highlight></codeline>
<codeline lineno="1020"><highlight class="comment"><sp/><sp/><sp/>versions<sp/>of<sp/>Lua.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(LUA_VERSION_NUM)<sp/>||<sp/>LUA_VERSION_NUM<sp/>&lt;<sp/>501</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022" refid="swig__runtime_8h_1a0a129d773aae7e71b7c30370cd3c3dd9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>lua_rawlen<sp/>lua_strlen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>LUA_VERSION_NUM<sp/>==<sp/>501</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>lua_rawlen<sp/>lua_objlen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>lua_pushglobaltable<sp/>is<sp/>the<sp/>recommended<sp/>&quot;future-proof&quot;<sp/>way<sp/>to<sp/>get</highlight></codeline>
<codeline lineno="1028"><highlight class="comment"><sp/><sp/><sp/>the<sp/>global<sp/>table<sp/>for<sp/>Lua<sp/>5.2<sp/>and<sp/>later.<sp/><sp/>Here<sp/>we<sp/>define</highlight></codeline>
<codeline lineno="1029"><highlight class="comment"><sp/><sp/><sp/>lua_pushglobaltable<sp/>ourselves<sp/>for<sp/>Lua<sp/>versions<sp/>before<sp/>5.2.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(LUA_VERSION_NUM)<sp/>||<sp/>LUA_VERSION_NUM<sp/>&lt;<sp/>502</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031" refid="swig__runtime_8h_1abf88c897458bd9848010301cb46ade18" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>lua_pushglobaltable(L)<sp/>lua_pushvalue(L,<sp/>LUA_GLOBALSINDEX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>lua_absindex<sp/>was<sp/>introduced<sp/>in<sp/>Lua<sp/>5.2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(LUA_VERSION_NUM)<sp/>||<sp/>LUA_VERSION_NUM<sp/>&lt;<sp/>502</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036" refid="swig__runtime_8h_1a9c4332806d14eef7167aac79d101b5ff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>lua_absindex(L,<sp/>i)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1037"><highlight class="preprocessor"><sp/><sp/>((i)<sp/>&gt;<sp/>0<sp/>||<sp/>(i)<sp/>&lt;=<sp/>LUA_REGISTRYINDEX<sp/>?<sp/>(i)<sp/>:<sp/>lua_gettop(L)<sp/>+<sp/>(i)<sp/>+<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>lua_rawsetp<sp/>was<sp/>introduced<sp/>in<sp/>Lua<sp/>5.2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(LUA_VERSION_NUM)<sp/>||<sp/>LUA_VERSION_NUM<sp/>&lt;<sp/>502</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042" refid="swig__runtime_8h_1a703a7b5ef04cbe6e627f04bcdcebc153" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>lua_rawsetp(L,<sp/>index,<sp/>ptr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1043"><highlight class="preprocessor"><sp/><sp/>lua_pushlightuserdata(L,<sp/>(void<sp/>*)(ptr));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1044"><highlight class="preprocessor"><sp/><sp/>lua_insert(L,<sp/>-2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1045"><highlight class="preprocessor"><sp/><sp/>lua_rawset(L,<sp/>index);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047" refid="swig__runtime_8h_1afda1448f711f5b5351c3fa779e487724" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>lua_rawgetp(L,<sp/>index,<sp/>ptr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1048"><highlight class="preprocessor"><sp/><sp/>lua_pushlightuserdata(L,<sp/>(void<sp/>*)(ptr));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1049"><highlight class="preprocessor"><sp/><sp/>lua_rawget(L,<sp/>index);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1054"><highlight class="comment"><sp/>*<sp/>Helper<sp/>functions<sp/>for<sp/>error<sp/>handling</highlight></codeline>
<codeline lineno="1055"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Push<sp/>the<sp/>string<sp/>STR<sp/>on<sp/>the<sp/>Lua<sp/>stack,<sp/>like<sp/>lua_pushstring,<sp/>but</highlight></codeline>
<codeline lineno="1058"><highlight class="comment"><sp/><sp/><sp/>prefixed<sp/>with<sp/>the<sp/>the<sp/>location<sp/>of<sp/>the<sp/>innermost<sp/>Lua<sp/>call-point</highlight></codeline>
<codeline lineno="1059"><highlight class="comment"><sp/><sp/><sp/>(as<sp/>formated<sp/>by<sp/>luaL_where).<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060" refid="swig__runtime_8h_1a17d5e7cfbab0914882ec82e36d22381e" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a17d5e7cfbab0914882ec82e36d22381e" kindref="member">SWIG_Lua_pusherrstring</ref>(lua_State<sp/>*L,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="1061"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/>luaL_where(L,<sp/>1);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/>str);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/>lua_concat(L,<sp/>2);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Push<sp/>a<sp/>formatted<sp/>string<sp/>generated<sp/>from<sp/>FMT<sp/>and<sp/>following<sp/>args<sp/>on</highlight></codeline>
<codeline lineno="1068"><highlight class="comment"><sp/><sp/><sp/>the<sp/>Lua<sp/>stack,<sp/>like<sp/>lua_pushfstring,<sp/>but<sp/>prefixed<sp/>with<sp/>the<sp/>the</highlight></codeline>
<codeline lineno="1069"><highlight class="comment"><sp/><sp/><sp/>location<sp/>of<sp/>the<sp/>innermost<sp/>Lua<sp/>call-point<sp/>(as<sp/>formated<sp/>by<sp/>luaL_where).<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070" refid="swig__runtime_8h_1ad4708a823127d389179291ebcace732d" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1ad4708a823127d389179291ebcace732d" kindref="member">SWIG_Lua_pushferrstring</ref>(lua_State<sp/>*L,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)</highlight></codeline>
<codeline lineno="1071"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/>va_list<sp/>argp;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/>va_start(argp,<sp/>fmt);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/>luaL_where(L,<sp/>1);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/>lua_pushvfstring(L,<sp/>fmt,<sp/>argp);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/>va_end(argp);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/>lua_concat(L,<sp/>2);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1081"><highlight class="comment"><sp/>*<sp/>global<sp/>swig<sp/>types</highlight></codeline>
<codeline lineno="1082"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1083"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Constant<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085" refid="swig__runtime_8h_1ae486ba0f8ccf6c87507633344d3f6a96" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_INT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086" refid="swig__runtime_8h_1a9c4ea7e25de05f5a501e7163fd480b67" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_FLOAT<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087" refid="swig__runtime_8h_1af6a25edb9ad2ab838e1b1fa3e4450121" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_STRING<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088" refid="swig__runtime_8h_1a2f4d58f9ce413585253063575c033082" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_POINTER<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089" refid="swig__runtime_8h_1af2062cfc3a6907d38c2587cdab77ae38" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_BINARY<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090" refid="swig__runtime_8h_1a50c58df5c9bd1cea902021a7f7fc9896" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_LUA_CHAR<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Structure<sp/>for<sp/>variable<sp/>linking<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093" refid="structswig__lua__var__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1095" refid="structswig__lua__var__info_1a59daefcace30c1ffb1f58bd7829f8449" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structswig__lua__var__info_1a59daefcace30c1ffb1f58bd7829f8449" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="1096" refid="structswig__lua__var__info_1a56fb0b689f37015e340b35c6d7ee0b99" refkind="member"><highlight class="normal"><sp/><sp/>lua_CFunction<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1097" refid="structswig__lua__var__info_1aea961df3cc15877e8354cb535bef2c1e" refkind="member"><highlight class="normal"><sp/><sp/>lua_CFunction<sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal">}<sp/><ref refid="structswig__lua__var__info" kindref="compound">swig_lua_var_info</ref>;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(SWIG_LUA_TARGET<sp/>==<sp/>SWIG_LUA_FLAVOR_ELUA)<sp/>||<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(SWIG_LUA_TARGET<sp/>==<sp/>SWIG_LUA_FLAVOR_ELUAC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LUA_REG_TYPE<sp/><ref refid="swig__runtime_8h_1a89958881f4c9d723a197b20ac42f6946" kindref="member">swig_lua_method</ref>;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LUA_REG_TYPE<sp/><ref refid="structswig__lua__const__info" kindref="compound">swig_lua_const_info</ref>;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>Normal<sp/>lua<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105" refid="swig__runtime_8h_1a89958881f4c9d723a197b20ac42f6946" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>luaL_Reg<sp/><ref refid="swig__runtime_8h_1a89958881f4c9d723a197b20ac42f6946" kindref="member">swig_lua_method</ref>;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Constant<sp/>information<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108" refid="structswig__lua__const__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1110" refid="structswig__lua__const__info_1a1c9ffb014aea4d37c1b73e0a446c9be1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structswig__lua__const__info_1a1c9ffb014aea4d37c1b73e0a446c9be1" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="1111" refid="structswig__lua__const__info_1aeab9027ebc600cf479ee0f977fd748b6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structswig__lua__const__info_1aeab9027ebc600cf479ee0f977fd748b6" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="1112" refid="structswig__lua__const__info_1a0f4d6393367808867778882594520a44" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structswig__lua__const__info_1a0f4d6393367808867778882594520a44" kindref="member">lvalue</ref>;</highlight></codeline>
<codeline lineno="1113" refid="structswig__lua__const__info_1ac50e848b2a6a628fa1eeb4924f608cee" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structswig__lua__const__info_1ac50e848b2a6a628fa1eeb4924f608cee" kindref="member">dvalue</ref>;</highlight></codeline>
<codeline lineno="1114" refid="structswig__lua__const__info_1a54637f2603b1179d4996c06e82e3f23a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structswig__lua__const__info_1a54637f2603b1179d4996c06e82e3f23a" kindref="member">pvalue</ref>;</highlight></codeline>
<codeline lineno="1115" refid="structswig__lua__const__info_1a0557056988d98840029075f204d2bf59" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>**<ref refid="structswig__lua__const__info_1a0557056988d98840029075f204d2bf59" kindref="member">ptype</ref>;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal">}<sp/><ref refid="structswig__lua__const__info" kindref="compound">swig_lua_const_info</ref>;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120" refid="structswig__lua__attribute" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1122" refid="structswig__lua__attribute_1a693d9481784dfd89e0d9ed3aadf51b04" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structswig__lua__attribute_1a693d9481784dfd89e0d9ed3aadf51b04" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="1123" refid="structswig__lua__attribute_1ab18a92c81433b7b3de23856cda4b89b5" refkind="member"><highlight class="normal"><sp/><sp/>lua_CFunction<sp/><ref refid="structswig__lua__attribute_1ab18a92c81433b7b3de23856cda4b89b5" kindref="member">getmethod</ref>;</highlight></codeline>
<codeline lineno="1124" refid="structswig__lua__attribute_1a0b88e38d5417453e7718f7090b797b06" refkind="member"><highlight class="normal"><sp/><sp/>lua_CFunction<sp/><ref refid="structswig__lua__attribute_1a0b88e38d5417453e7718f7090b797b06" kindref="member">setmethod</ref>;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal">}<sp/><ref refid="structswig__lua__attribute" kindref="compound">swig_lua_attribute</ref>;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref>;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Can<sp/>be<sp/>used<sp/>to<sp/>create<sp/>namespaces.<sp/>Currently<sp/>used<sp/>to<sp/>wrap<sp/>class<sp/>static</highlight></codeline>
<codeline lineno="1129"><highlight class="comment"><sp/>*<sp/>methods/variables/constants<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130" refid="structswig__lua__namespace" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structswig__lua__namespace" kindref="compound">swig_lua_namespace</ref></highlight></codeline>
<codeline lineno="1131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1132" refid="structswig__lua__namespace_1a5ac77da56177f2221e7b4383d08289ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structswig__lua__namespace_1a5ac77da56177f2221e7b4383d08289ae" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="1133" refid="structswig__lua__namespace_1a37c8e142ef569ca010f1a5ced9d32446" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a89958881f4c9d723a197b20ac42f6946" kindref="member">swig_lua_method</ref><sp/>*<ref refid="structswig__lua__namespace_1a37c8e142ef569ca010f1a5ced9d32446" kindref="member">ns_methods</ref>;</highlight></codeline>
<codeline lineno="1134" refid="structswig__lua__namespace_1a3f3aabc0b901e923d739c5b5bce0770d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structswig__lua__attribute" kindref="compound">swig_lua_attribute</ref><sp/>*<ref refid="structswig__lua__namespace_1a3f3aabc0b901e923d739c5b5bce0770d" kindref="member">ns_attributes</ref>;</highlight></codeline>
<codeline lineno="1135" refid="structswig__lua__namespace_1aa6dee03944121832fcbd7a939d096d08" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structswig__lua__const__info" kindref="compound">swig_lua_const_info</ref><sp/>*<ref refid="structswig__lua__namespace_1aa6dee03944121832fcbd7a939d096d08" kindref="member">ns_constants</ref>;</highlight></codeline>
<codeline lineno="1136" refid="structswig__lua__namespace_1a6497c3aceb8de15113fb214a74a3e019" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>**<ref refid="structswig__lua__namespace_1a6497c3aceb8de15113fb214a74a3e019" kindref="member">ns_classes</ref>;</highlight></codeline>
<codeline lineno="1137" refid="structswig__lua__namespace_1ae8c454726d38da0b31becead391fef5b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structswig__lua__namespace" kindref="compound">swig_lua_namespace</ref><sp/>**<ref refid="structswig__lua__namespace_1ae8c454726d38da0b31becead391fef5b" kindref="member">ns_namespaces</ref>;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal">}<sp/><ref refid="swig__runtime_8h_1aa881a157e50736ba2ad83a4f6faad472" kindref="member">swig_lua_namespace</ref>;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140" refid="structswig__lua__class" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref></highlight></codeline>
<codeline lineno="1141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1142" refid="structswig__lua__class_1abefc5d1a37e06e1c9305d3456a59f2d0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structswig__lua__class_1abefc5d1a37e06e1c9305d3456a59f2d0" kindref="member">name</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Name<sp/>that<sp/>this<sp/>class<sp/>has<sp/>in<sp/>Lua<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143" refid="structswig__lua__class_1a3c6469ebd6d312208ff380f8e8eff165" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structswig__lua__class_1a3c6469ebd6d312208ff380f8e8eff165" kindref="member">fqname</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Fully<sp/>qualified<sp/>name<sp/>-<sp/>Scope<sp/>+<sp/>class<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144" refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>**<ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="1145" refid="structswig__lua__class_1aac6eb9dc9a5e0b5f2c9d31a97ce0282e" refkind="member"><highlight class="normal"><sp/><sp/>lua_CFunction<sp/><ref refid="structswig__lua__class_1aac6eb9dc9a5e0b5f2c9d31a97ce0282e" kindref="member">constructor</ref>;</highlight></codeline>
<codeline lineno="1146" refid="structswig__lua__class_1a19ebe1411a51b4d1ef82432e76353854" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref><sp/>(*<ref refid="structswig__lua__class_1a19ebe1411a51b4d1ef82432e76353854" kindref="member">destructor</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="1147" refid="structswig__lua__class_1ae0d9f30a8114623b1185b5907fc60719" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a89958881f4c9d723a197b20ac42f6946" kindref="member">swig_lua_method</ref><sp/>*<ref refid="structswig__lua__class_1ae0d9f30a8114623b1185b5907fc60719" kindref="member">methods</ref>;</highlight></codeline>
<codeline lineno="1148" refid="structswig__lua__class_1a3061adc91d7cb1a16967927e8d4a7261" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structswig__lua__attribute" kindref="compound">swig_lua_attribute</ref><sp/>*<ref refid="structswig__lua__class_1a3061adc91d7cb1a16967927e8d4a7261" kindref="member">attributes</ref>;</highlight></codeline>
<codeline lineno="1149" refid="structswig__lua__class_1a41b17587e0b26e2112200adfffb22730" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structswig__lua__namespace" kindref="compound">swig_lua_namespace</ref><sp/>*<ref refid="structswig__lua__class_1a41b17587e0b26e2112200adfffb22730" kindref="member">cls_static</ref>;</highlight></codeline>
<codeline lineno="1150" refid="structswig__lua__class_1a7c56e45895444992b6a42c60ba6a17e5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a89958881f4c9d723a197b20ac42f6946" kindref="member">swig_lua_method</ref><sp/>*<ref refid="structswig__lua__class_1a7c56e45895444992b6a42c60ba6a17e5" kindref="member">metatable</ref>;<sp/></highlight><highlight class="comment">/*<sp/>0<sp/>for<sp/>-eluac<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151" refid="structswig__lua__class_1a468e2d019d6cff6bbe8fefc8f572420b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>**<ref refid="structswig__lua__class_1a468e2d019d6cff6bbe8fefc8f572420b" kindref="member">bases</ref>;</highlight></codeline>
<codeline lineno="1152" refid="structswig__lua__class_1a25f24829385c30c59cec92c91fceca23" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="structswig__lua__class_1a25f24829385c30c59cec92c91fceca23" kindref="member">base_names</ref>;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal">}<sp/><ref refid="swig__runtime_8h_1a6923d1145cdb4f743ce8082c79172b39" kindref="member">swig_lua_class</ref>;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>the<sp/>struct<sp/>for<sp/>wrapping<sp/>all<sp/>pointers<sp/>in<sp/>SwigLua</highlight></codeline>
<codeline lineno="1156"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1157" refid="structswig__lua__userdata" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1159" refid="structswig__lua__userdata_1aed83344d96f9da7bf57f9bb604cb1d53" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*<ref refid="structswig__lua__userdata_1aed83344d96f9da7bf57f9bb604cb1d53" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="1160" refid="structswig__lua__userdata_1a12970d19b437f84b1e7fba18ede882cb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structswig__lua__userdata_1a12970d19b437f84b1e7fba18ede882cb" kindref="member">own</ref>;<sp/></highlight><highlight class="comment">/*<sp/>1<sp/>if<sp/>owned<sp/>&amp;<sp/>must<sp/>be<sp/>destroyed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161" refid="structswig__lua__userdata_1a2d3be052ee0b81986ab31ef5dc08fd25" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structswig__lua__userdata_1a2d3be052ee0b81986ab31ef5dc08fd25" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal">}<sp/><ref refid="structswig__lua__userdata" kindref="compound">swig_lua_userdata</ref>;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>the<sp/>struct<sp/>for<sp/>wrapping<sp/>arbitrary<sp/>packed<sp/>binary<sp/>data</highlight></codeline>
<codeline lineno="1165"><highlight class="comment">(currently<sp/>it<sp/>is<sp/>only<sp/>used<sp/>for<sp/>member<sp/>function<sp/>pointers)</highlight></codeline>
<codeline lineno="1166"><highlight class="comment">the<sp/>data<sp/>ordering<sp/>is<sp/>similar<sp/>to<sp/>swig_lua_userdata,<sp/>but<sp/>it<sp/>is<sp/>currently<sp/>not</highlight></codeline>
<codeline lineno="1167"><highlight class="comment">possible</highlight></codeline>
<codeline lineno="1168"><highlight class="comment">to<sp/>tell<sp/>the<sp/>two<sp/>structures<sp/>apart<sp/>within<sp/>SWIG,<sp/>other<sp/>than<sp/>by<sp/>looking<sp/>at<sp/>the<sp/>type</highlight></codeline>
<codeline lineno="1169"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170" refid="structswig__lua__rawdata" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1172" refid="structswig__lua__rawdata_1a935edef9803f54e65acaa0ecf8c81ed2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*<ref refid="structswig__lua__rawdata_1a935edef9803f54e65acaa0ecf8c81ed2" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="1173" refid="structswig__lua__rawdata_1ac52566bcb4a7b4d8421c17d182048924" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structswig__lua__rawdata_1ac52566bcb4a7b4d8421c17d182048924" kindref="member">own</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1<sp/>if<sp/>owned<sp/>&amp;<sp/>must<sp/>be<sp/>destroyed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174" refid="structswig__lua__rawdata_1acbba29d10dcd1b96ba3b8d255b777749" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data[1];<sp/></highlight><highlight class="comment">/*<sp/>arbitary<sp/>amount<sp/>of<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal">}<sp/><ref refid="structswig__lua__rawdata" kindref="compound">swig_lua_rawdata</ref>;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Common<sp/>SWIG<sp/>API<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178" refid="swig__runtime_8h_1a8eb06167550295873af166db6a49cf36" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_NewPointerObj(L,<sp/>ptr,<sp/>type,<sp/>owner)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1179"><highlight class="preprocessor"><sp/><sp/>SWIG_Lua_NewPointerObj(L,<sp/>(void<sp/>*)ptr,<sp/>type,<sp/>owner)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180" refid="swig__runtime_8h_1a3a4e5f587d3994722b0628b2cc96ed42" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_ConvertPtr(L,<sp/>idx,<sp/>ptr,<sp/>type,<sp/>flags)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1181"><highlight class="preprocessor"><sp/><sp/>SWIG_Lua_ConvertPtr(L,<sp/>idx,<sp/>ptr,<sp/>type,<sp/>flags)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182" refid="swig__runtime_8h_1a59f926cc14b21f2e478ac27541df0162" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_MustGetPtr(L,<sp/>idx,<sp/>type,<sp/>flags,<sp/>argnum,<sp/>fnname)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1183"><highlight class="preprocessor"><sp/><sp/>SWIG_Lua_MustGetPtr(L,<sp/>idx,<sp/>type,<sp/>flags,<sp/>argnum,<sp/>fnname)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>for<sp/>C++<sp/>member<sp/>pointers,<sp/>ie,<sp/>member<sp/>methods<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185" refid="swig__runtime_8h_1a019c90e4471fdd37ef65653afe55fb5c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_ConvertMember(L,<sp/>idx,<sp/>ptr,<sp/>sz,<sp/>ty)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1186"><highlight class="preprocessor"><sp/><sp/>SWIG_Lua_ConvertPacked(L,<sp/>idx,<sp/>ptr,<sp/>sz,<sp/>ty)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187" refid="swig__runtime_8h_1a20c6437f49ae257857683ba0e7b2100f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_NewMemberObj(L,<sp/>ptr,<sp/>sz,<sp/>type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1188"><highlight class="preprocessor"><sp/><sp/>SWIG_Lua_NewPackedObj(L,<sp/>ptr,<sp/>sz,<sp/>type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Runtime<sp/>API<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191" refid="swig__runtime_8h_1ab97db3bbfc9e3a73de01e1ee95fa0bb5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_GetModule(clientdata)<sp/>SWIG_Lua_GetModule((lua_State<sp/>*)(clientdata))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192" refid="swig__runtime_8h_1a673a7dcc5c15f5cffa7072785a6c7972" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_SetModule(clientdata,<sp/>pointer)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1193"><highlight class="preprocessor"><sp/><sp/>SWIG_Lua_SetModule((lua_State<sp/>*)(clientdata),<sp/>pointer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194" refid="swig__runtime_8h_1a50d0a80dccc1d34749f07c82d6a04169" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_MODULE_CLIENTDATA_TYPE<sp/>lua_State<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Contract<sp/>support<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197" refid="swig__runtime_8h_1aca11636b220cff70dac286c268c95ee6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_contract_assert(expr,<sp/>msg)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1198"><highlight class="preprocessor"><sp/><sp/>if<sp/>(!(expr))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1199"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1200"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>SWIG_Lua_pusherrstring(L,<sp/>(char<sp/>*)msg);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1201"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>goto<sp/>fail;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1202"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1203"><highlight class="preprocessor"><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>helper<sp/>#defines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206" refid="swig__runtime_8h_1ababf56889b69e7a569556eb38cd4f157" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_fail<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1207"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1208"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>goto<sp/>fail;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1209"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210" refid="swig__runtime_8h_1a41cf11e6c8c4513cbca00772e8aef9fd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_fail_arg(func_name,<sp/>argnum,<sp/>type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1211"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1212"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SWIG_Lua_pushferrstring(L,<sp/>&quot;Error<sp/>in<sp/>%s<sp/>(arg<sp/>%d),<sp/>expected<sp/>&apos;%s&apos;<sp/>got<sp/>&apos;%s&apos;&quot;,<sp/>\</highlight></codeline>
<codeline lineno="1213"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func_name,<sp/>argnum,<sp/>type,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1214"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWIG_Lua_typename(L,<sp/>argnum));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1215"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>goto<sp/>fail;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1216"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217" refid="swig__runtime_8h_1a2075b3c34e15bf3feb67887a633ccddf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_fail_ptr(func_name,<sp/>argnum,<sp/>type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1218"><highlight class="preprocessor"><sp/><sp/>SWIG_fail_arg(func_name,<sp/>argnum,<sp/>(type<sp/>&amp;&amp;<sp/>type-&gt;str)<sp/>?<sp/>type-&gt;str<sp/>:<sp/>&quot;void*&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219" refid="swig__runtime_8h_1a7e3daad25f96879be557754a9e2ed6b4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_check_num_args(func_name,<sp/>a,<sp/>b)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1220"><highlight class="preprocessor"><sp/><sp/>if<sp/>(lua_gettop(L)<sp/>&lt;<sp/>a<sp/>||<sp/>lua_gettop(L)<sp/>&gt;<sp/>b)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1221"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1222"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>SWIG_Lua_pushferrstring(L,<sp/>&quot;Error<sp/>in<sp/>%s<sp/>expected<sp/>%d..%d<sp/>args,<sp/>got<sp/>%d&quot;,<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1223"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func_name,<sp/>a,<sp/>b,<sp/>lua_gettop(L));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1224"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>goto<sp/>fail;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1225"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227" refid="swig__runtime_8h_1a45e06ea798b759df9853467b13abcdfc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_Lua_get_table(L,<sp/>n)<sp/>(lua_pushstring(L,<sp/>n),<sp/>lua_rawget(L,<sp/>-2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229" refid="swig__runtime_8h_1a4e0088e1d53848f80738e5a49f1c0cf3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_Lua_add_function(L,<sp/>n,<sp/>f)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1230"><highlight class="preprocessor"><sp/><sp/>(lua_pushstring(L,<sp/>n),<sp/>lua_pushcfunction(L,<sp/>f),<sp/>lua_rawset(L,<sp/>-3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232" refid="swig__runtime_8h_1afd5580acc2cb0c0eeaf0644bac06f99e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_Lua_add_boolean(L,<sp/>n,<sp/>b)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1233"><highlight class="preprocessor"><sp/><sp/>(lua_pushstring(L,<sp/>n),<sp/>lua_pushboolean(L,<sp/>b),<sp/>lua_rawset(L,<sp/>-3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>special<sp/>helper<sp/>for<sp/>allowing<sp/>&apos;nil&apos;<sp/>for<sp/>usertypes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236" refid="swig__runtime_8h_1ac24315f20782462ad057bf1c8309a616" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_isptrtype(L,<sp/>I)<sp/>(lua_isuserdata(L,<sp/>I)<sp/>||<sp/>lua_isnil(L,<sp/>I))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Special<sp/>helper<sp/>for<sp/>member<sp/>function<sp/>pointers</highlight></codeline>
<codeline lineno="1240"><highlight class="comment">it<sp/>gets<sp/>the<sp/>address,<sp/>casts<sp/>it,<sp/>then<sp/>dereferences<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight><highlight class="comment">/*#define<sp/>SWIG_mem_fn_as_voidptr(a)<sp/><sp/>(*((char**)&amp;(a)))<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>storing/access<sp/>of<sp/>swig_module_info<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245" refid="swig__runtime_8h_1aa7e1ff7a89ff12ee84b36802220fae51" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/><ref refid="structswig__module__info" kindref="compound">swig_module_info</ref><sp/>*<ref refid="swig__runtime_8h_1aa7e1ff7a89ff12ee84b36802220fae51" kindref="member">SWIG_Lua_GetModule</ref>(lua_State<sp/>*L)</highlight></codeline>
<codeline lineno="1246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><ref refid="structswig__module__info" kindref="compound">swig_module_info</ref><sp/>*ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/></highlight><highlight class="stringliteral">&quot;swig_runtime_data_type_pointer&quot;</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a4895907de5539551925ab5c03ea05d28" kindref="member">SWIG_RUNTIME_VERSION</ref></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1ac619a84edecccb5e00c1b4a3180b8c3a" kindref="member">SWIG_TYPE_TABLE_NAME</ref>);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/>lua_rawget(L,<sp/>LUA_REGISTRYINDEX);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lua_islightuserdata(L,<sp/>-1))</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>(<ref refid="structswig__module__info" kindref="compound">swig_module_info</ref><sp/>*)lua_touserdata(L,<sp/>-1);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>tidy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257" refid="swig__runtime_8h_1a127abd2d6d37e5b1e86d2421c751492e" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a127abd2d6d37e5b1e86d2421c751492e" kindref="member">SWIG_Lua_SetModule</ref>(lua_State<sp/>*L,<sp/><ref refid="structswig__module__info" kindref="compound">swig_module_info</ref><sp/>*module)</highlight></codeline>
<codeline lineno="1258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>this<sp/>all<sp/>into<sp/>the<sp/>Lua<sp/>registry:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/></highlight><highlight class="stringliteral">&quot;swig_runtime_data_type_pointer&quot;</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a4895907de5539551925ab5c03ea05d28" kindref="member">SWIG_RUNTIME_VERSION</ref></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1ac619a84edecccb5e00c1b4a3180b8c3a" kindref="member">SWIG_TYPE_TABLE_NAME</ref>);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/>lua_pushlightuserdata(L,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)module);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/>lua_rawset(L,<sp/>LUA_REGISTRYINDEX);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1267"><highlight class="comment"><sp/>*<sp/>global<sp/>variable<sp/>support<sp/>code:<sp/>modules</highlight></codeline>
<codeline lineno="1268"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1269"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>function<sp/>is<sp/>called<sp/>when<sp/>trying<sp/>to<sp/>set<sp/>an<sp/>immutable.</highlight></codeline>
<codeline lineno="1272"><highlight class="comment">default<sp/>action<sp/>is<sp/>to<sp/>print<sp/>an<sp/>error.</highlight></codeline>
<codeline lineno="1273"><highlight class="comment">This<sp/>can<sp/>removed<sp/>with<sp/>a<sp/>compile<sp/>flag<sp/>SWIGLUA_IGNORE_SET_IMMUTABLE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274" refid="swig__runtime_8h_1a98115a70232aa660ee341e0ea4353485" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a98115a70232aa660ee341e0ea4353485" kindref="member">SWIG_Lua_set_immutable</ref>(lua_State<sp/>*L)</highlight></codeline>
<codeline lineno="1275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>there<sp/>should<sp/>be<sp/>1<sp/>param<sp/>passed<sp/>in:<sp/>the<sp/>new<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIGLUA_IGNORE_SET_IMMUTABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/>luaL_error(L,<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>variable<sp/>is<sp/>immutable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>should<sp/>not<sp/>return<sp/>anything<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SWIG_LUA_ELUA_EMULATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a96c4cba9e0940983c98de6a9d6f339c8" kindref="member">SWIG_Lua_NewPointerObj</ref>(lua_State<sp/>*L,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*<ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>own);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1ab98924e8e52ff8f34ace1515120ccda6" kindref="member">SWIG_Lua_NewPackedObj</ref>(lua_State<sp/>*L,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*<ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>swig_lua_elua_emulate_unique_key;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>emulates<sp/>eLua<sp/>rotables<sp/>behaviour.<sp/>It<sp/>loads<sp/>a<sp/>rotable<sp/>definition</highlight></codeline>
<codeline lineno="1293"><highlight class="comment"><sp/>*<sp/>into<sp/>the<sp/>usual<sp/>lua<sp/>table.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SWIG_Lua_elua_emulate_register(lua_State<sp/>*L,</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>swig_elua_entry<sp/>*table)</highlight></codeline>
<codeline lineno="1296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>table_parsed,<sp/>parsed_tables_array,<sp/>target_table;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/>target_table<sp/>=<sp/>lua_gettop(L);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>registry<sp/>where<sp/>we<sp/>put<sp/>all<sp/>parsed<sp/>tables<sp/>to<sp/>avoid<sp/>loops<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1afda1448f711f5b5351c3fa779e487724" kindref="member">lua_rawgetp</ref>(L,<sp/>LUA_REGISTRYINDEX,<sp/>&amp;swig_lua_elua_emulate_unique_key);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lua_isnil(L,<sp/>-1))</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>1);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_newtable(L);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>-1);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a703a7b5ef04cbe6e627f04bcdcebc153" kindref="member">lua_rawsetp</ref>(L,<sp/>LUA_REGISTRYINDEX,</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(&amp;swig_lua_elua_emulate_unique_key));</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/>parsed_tables_array<sp/>=<sp/>lua_gettop(L);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/>lua_pushvalue(L,<sp/>target_table);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a703a7b5ef04cbe6e627f04bcdcebc153" kindref="member">lua_rawsetp</ref>(L,<sp/>parsed_tables_array,<sp/>table);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/>table_parsed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a6ee41cd160d397aa76668bf4db65e2d1" kindref="member">SWIGUNUSED</ref><sp/>pairs_start<sp/>=<sp/>lua_gettop(L);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>table[i].key.type<sp/>!=<sp/>LUA_TNIL<sp/>||<sp/>table[i].value.type<sp/>!=<sp/>LUA_TNIL;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++)</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>swig_elua_entry<sp/>*entry<sp/>=<sp/>table<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_metatable<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(entry-&gt;key.type)</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LUA_TSTRING:</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushstring(L,<sp/>entry-&gt;key.key.strkey);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(entry-&gt;key.key.strkey,<sp/>SWIG_LUA_ELUA_EMUL_METATABLE_KEY)<sp/>==</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0)</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_metatable<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LUA_TNUMBER:</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushnumber(L,<sp/>entry-&gt;key.key.numkey);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LUA_TNIL:</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushnil(L);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(entry-&gt;value.type)</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LUA_TSTRING:</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushstring(L,<sp/>entry-&gt;value.value.string);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LUA_TNUMBER:</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushnumber(L,<sp/>entry-&gt;value.value.number);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LUA_TFUNCTION:</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushcfunction(L,<sp/>entry-&gt;value.value.function);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LUA_TTABLE:</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1afda1448f711f5b5351c3fa779e487724" kindref="member">lua_rawgetp</ref>(L,<sp/>parsed_tables_array,<sp/>entry-&gt;value.value.table);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_parsed<sp/>=<sp/>!lua_isnil(L,<sp/>-1);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!table_parsed)</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*remove<sp/>nil<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_newtable(L);</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWIG_Lua_elua_emulate_register(L,<sp/>entry-&gt;value.value.table);</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_metatable)</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(lua_istable(L,<sp/>-1));</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>-1);</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_setmetatable(L,<sp/>target_table);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LUA_TUSERDATA:</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entry-&gt;value.value.userdata.member)</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a20c6437f49ae257857683ba0e7b2100f" kindref="member">SWIG_NewMemberObj</ref>(L,<sp/>entry-&gt;value.value.userdata.pvalue,</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry-&gt;value.value.userdata.lvalue,</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(entry-&gt;value.value.userdata.ptype));</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a8eb06167550295873af166db6a49cf36" kindref="member">SWIG_NewPointerObj</ref>(L,<sp/>entry-&gt;value.value.userdata.pvalue,</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(entry-&gt;value.value.userdata.ptype),<sp/>0);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LUA_TNIL:</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushnil(L);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(lua_gettop(L)<sp/>==<sp/>pairs_start<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_rawset(L,<sp/>target_table);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>Removing<sp/>parsed<sp/>tables<sp/>storage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/>assert(lua_gettop(L)<sp/>==<sp/>target_table);</highlight></codeline>
<codeline lineno="1385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SWIG_Lua_elua_emulate_register_clear(lua_State<sp/>*L)</highlight></codeline>
<codeline lineno="1388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/>lua_pushnil(L);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a703a7b5ef04cbe6e627f04bcdcebc153" kindref="member">lua_rawsetp</ref>(L,<sp/>LUA_REGISTRYINDEX,<sp/>&amp;swig_lua_elua_emulate_unique_key);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a882b457b337f778c6925c77b59cbae79" kindref="member">SWIG_Lua_get_class_registry</ref>(lua_State<sp/>*L);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SWIG_Lua_emulate_elua_getmetatable(lua_State<sp/>*L)</highlight></codeline>
<codeline lineno="1396"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a7e3daad25f96879be557754a9e2ed6b4" kindref="member">SWIG_check_num_args</ref>(</highlight><highlight class="stringliteral">&quot;getmetatable(SWIG<sp/>eLua<sp/>emulation)&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a882b457b337f778c6925c77b59cbae79" kindref="member">SWIG_Lua_get_class_registry</ref>(L);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/>lua_getfield(L,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;lua_getmetatable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/>lua_remove(L,<sp/>-2);<sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>the<sp/>registry*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/>assert(!lua_isnil(L,<sp/>-1));</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/>lua_pushvalue(L,<sp/>1);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/>assert(lua_gettop(L)<sp/>==<sp/>3);<sp/></highlight><highlight class="comment">/*<sp/>object<sp/>|<sp/>function<sp/>|<sp/>object<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/>lua_call(L,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lua_isnil(L,<sp/>-1))<sp/></highlight><highlight class="comment">/*There<sp/>is<sp/>an<sp/>ordinary<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*if<sp/>it<sp/>is<sp/>a<sp/>table,<sp/>then<sp/>emulate<sp/>elua<sp/>behaviour<sp/>-<sp/>check<sp/>for<sp/>__metatable</highlight></codeline>
<codeline lineno="1408"><highlight class="comment"><sp/><sp/><sp/>*<sp/>attribute<sp/>of<sp/>a<sp/>table*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/>assert(lua_gettop(L)<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lua_istable(L,<sp/>-2))</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*remove<sp/>the<sp/>nil*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_getfield(L,<sp/>-1,<sp/>SWIG_LUA_ELUA_EMUL_METATABLE_KEY);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/>assert(lua_gettop(L)<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal">fail:</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/>lua_error(L);</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SWIG_Lua_emulate_elua_swap_getmetatable(lua_State<sp/>*L)</highlight></codeline>
<codeline lineno="1424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a882b457b337f778c6925c77b59cbae79" kindref="member">SWIG_Lua_get_class_registry</ref>(L);</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1abf88c897458bd9848010301cb46ade18" kindref="member">lua_pushglobaltable</ref>(L);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/></highlight><highlight class="stringliteral">&quot;lua_getmetatable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/>lua_getfield(L,<sp/>-2,<sp/></highlight><highlight class="stringliteral">&quot;getmetatable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/>assert(!lua_isnil(L,<sp/>-1));</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/>lua_rawset(L,<sp/>-4);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/></highlight><highlight class="stringliteral">&quot;getmetatable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/>lua_pushcfunction(L,<sp/>SWIG_Lua_emulate_elua_getmetatable);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/>lua_rawset(L,<sp/>-3);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>2);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>END<sp/>OF<sp/>REMOVE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1440"><highlight class="comment"><sp/>*<sp/>global<sp/>variable<sp/>support<sp/>code:<sp/>namespaces<sp/>and<sp/>modules<sp/>(which<sp/>are<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="1441"><highlight class="comment"><sp/>*<sp/>thing)</highlight></codeline>
<codeline lineno="1442"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1443"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445" refid="swig__runtime_8h_1a82a3c5d46b7bdaa57cc1106ff5a89663" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a82a3c5d46b7bdaa57cc1106ff5a89663" kindref="member">SWIG_Lua_namespace_get</ref>(lua_State<sp/>*L)</highlight></codeline>
<codeline lineno="1446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>there<sp/>should<sp/>be<sp/>2<sp/>params<sp/>passed<sp/>in</highlight></codeline>
<codeline lineno="1448"><highlight class="comment"><sp/><sp/><sp/><sp/>(1)<sp/>table<sp/>(not<sp/>the<sp/>meta<sp/>table)</highlight></codeline>
<codeline lineno="1449"><highlight class="comment"><sp/><sp/><sp/><sp/>(2)<sp/>string<sp/>name<sp/>of<sp/>the<sp/>attribute</highlight></codeline>
<codeline lineno="1450"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-2));<sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/>lua_getmetatable(L,<sp/>-2);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a45e06ea798b759df9853467b13abcdfc" kindref="member">SWIG_Lua_get_table</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;.get&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>find<sp/>the<sp/>.get<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>look<sp/>for<sp/>the<sp/>key<sp/>in<sp/>the<sp/>.get<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/>lua_pushvalue(L,<sp/>2);<sp/></highlight><highlight class="comment">/*<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/>lua_rawget(L,<sp/>-2);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/>lua_remove(L,<sp/>-2);<sp/></highlight><highlight class="comment">/*<sp/>stack<sp/>tidy,<sp/>remove<sp/>.get<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lua_iscfunction(L,<sp/>-1))</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>found<sp/>it<sp/>so<sp/>call<sp/>the<sp/>fn<sp/>&amp;<sp/>return<sp/>its<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_call(L,<sp/>0,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>1<sp/>value<sp/>in<sp/>(userdata),1<sp/>out<sp/>(result)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_remove(L,<sp/>-2);<sp/></highlight><highlight class="comment">/*<sp/>stack<sp/>tidy,<sp/>remove<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>whatever<sp/>was<sp/>there<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>ok,<sp/>so<sp/>try<sp/>the<sp/>.fn<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a45e06ea798b759df9853467b13abcdfc" kindref="member">SWIG_Lua_get_table</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;.fn&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>find<sp/>the<sp/>.get<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/>lua_pushvalue(L,<sp/>2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/>lua_rawget(L,<sp/>-2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>look<sp/>for<sp/>the<sp/>fn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/>lua_remove(L,<sp/>-2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>stack<sp/>tidy,<sp/>remove<sp/>.fn<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lua_isfunction(L,</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1))<sp/></highlight><highlight class="comment">/*<sp/>note:<sp/>whether<sp/>it&apos;s<sp/>a<sp/>C<sp/>function<sp/>or<sp/>lua<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>found<sp/>it<sp/>so<sp/>return<sp/>the<sp/>fn<sp/>&amp;<sp/>let<sp/>lua<sp/>call<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_remove(L,<sp/>-2);<sp/><sp/></highlight><highlight class="comment">/*<sp/>stack<sp/>tidy,<sp/>remove<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>whatever<sp/>was<sp/>there<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483" refid="swig__runtime_8h_1aa56ce48dad661ece0586e2b0477d04d6" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1aa56ce48dad661ece0586e2b0477d04d6" kindref="member">SWIG_Lua_namespace_set</ref>(lua_State<sp/>*L)</highlight></codeline>
<codeline lineno="1484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>there<sp/>should<sp/>be<sp/>3<sp/>params<sp/>passed<sp/>in</highlight></codeline>
<codeline lineno="1486"><highlight class="comment"><sp/><sp/><sp/><sp/>(1)<sp/>table<sp/>(not<sp/>the<sp/>meta<sp/>table)</highlight></codeline>
<codeline lineno="1487"><highlight class="comment"><sp/><sp/><sp/><sp/>(2)<sp/>string<sp/>name<sp/>of<sp/>the<sp/>attribute</highlight></codeline>
<codeline lineno="1488"><highlight class="comment"><sp/><sp/><sp/><sp/>(3)<sp/>any<sp/>for<sp/>the<sp/>new<sp/>value</highlight></codeline>
<codeline lineno="1489"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>1));</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/>lua_getmetatable(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>meta<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a45e06ea798b759df9853467b13abcdfc" kindref="member">SWIG_Lua_get_table</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;.set&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>find<sp/>the<sp/>.set<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lua_istable(L,<sp/>-1))</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>look<sp/>for<sp/>the<sp/>key<sp/>in<sp/>the<sp/>.set<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>2);<sp/></highlight><highlight class="comment">/*<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_rawget(L,<sp/>-2);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lua_iscfunction(L,<sp/>-1))</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>found<sp/>it<sp/>so<sp/>call<sp/>the<sp/>fn<sp/>&amp;<sp/>return<sp/>its<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>3);<sp/></highlight><highlight class="comment">/*<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_call(L,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>the<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>the<sp/>value<sp/>.set<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>remote<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/>lua_rawset(L,<sp/>-3);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(SWIG_LUA_TARGET<sp/>==<sp/>SWIG_LUA_FLAVOR_LUA)<sp/></highlight><highlight class="comment">/*<sp/>In<sp/>elua<sp/>this<sp/>is<sp/>useless<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1af6d78a7441d3788ad73c978698a0cc1e" kindref="member">SWIG_Lua_InstallConstants</ref>(</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/>lua_State<sp/>*L,<sp/><ref refid="structswig__lua__const__info" kindref="compound">swig_lua_const_info</ref><sp/>constants[]);<sp/></highlight><highlight class="comment">/*<sp/>forward<sp/>declaration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><ref refid="swig__runtime_8h_1a7d4fb4ca1944b99a7ac54467d8a11866" kindref="member">SWIG_Lua_add_variable</ref>(lua_State<sp/>*L,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structswig__lua__class_1abefc5d1a37e06e1c9305d3456a59f2d0" kindref="member">name</ref>,<sp/>lua_CFunction<sp/>getFn,</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_CFunction<sp/>setFn);<sp/></highlight><highlight class="comment">/*<sp/>forward<sp/>declaration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a96a75364a5f20fd525bb603440f698d3" kindref="member">SWIG_Lua_class_register</ref>(lua_State<sp/>*L,<sp/><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>*clss);</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>helper<sp/>function<sp/>-<sp/>register<sp/>namespace<sp/>methods<sp/>and<sp/>attributes<sp/>into<sp/>namespace<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1524" refid="swig__runtime_8h_1a9ee5ba0a0bf072010a447d4b2f98d545" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a9ee5ba0a0bf072010a447d4b2f98d545" kindref="member">SWIG_Lua_add_namespace_details</ref>(lua_State<sp/>*L,</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__lua__namespace" kindref="compound">swig_lua_namespace</ref><sp/>*ns)</highlight></codeline>
<codeline lineno="1526"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>There<sp/>must<sp/>be<sp/>namespace<sp/>table<sp/>(not<sp/>metatable)<sp/>at<sp/>the<sp/>top<sp/>of<sp/>the<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1af6d78a7441d3788ad73c978698a0cc1e" kindref="member">SWIG_Lua_InstallConstants</ref>(L,<sp/>ns-&gt;<ref refid="structswig__lua__namespace_1aa6dee03944121832fcbd7a939d096d08" kindref="member">ns_constants</ref>);</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>methods<sp/>to<sp/>the<sp/>namespace/module<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>ns-&gt;<ref refid="structswig__lua__namespace_1a37c8e142ef569ca010f1a5ced9d32446" kindref="member">ns_methods</ref>[i].name;<sp/>i++)</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a4e0088e1d53848f80738e5a49f1c0cf3" kindref="member">SWIG_Lua_add_function</ref>(L,<sp/>ns-&gt;<ref refid="structswig__lua__namespace_1a37c8e142ef569ca010f1a5ced9d32446" kindref="member">ns_methods</ref>[i].name,<sp/>ns-&gt;<ref refid="structswig__lua__namespace_1a37c8e142ef569ca010f1a5ced9d32446" kindref="member">ns_methods</ref>[i].func);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/>lua_getmetatable(L,<sp/>-1);</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>fns<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>ns-&gt;<ref refid="structswig__lua__namespace_1a3f3aabc0b901e923d739c5b5bce0770d" kindref="member">ns_attributes</ref>[i].<ref refid="structswig__lua__attribute_1a693d9481784dfd89e0d9ed3aadf51b04" kindref="member">name</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a7d4fb4ca1944b99a7ac54467d8a11866" kindref="member">SWIG_Lua_add_variable</ref>(L,<sp/>ns-&gt;<ref refid="structswig__lua__namespace_1a3f3aabc0b901e923d739c5b5bce0770d" kindref="member">ns_attributes</ref>[i].<ref refid="structswig__lua__attribute_1a693d9481784dfd89e0d9ed3aadf51b04" kindref="member">name</ref>,</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ns-&gt;<ref refid="structswig__lua__namespace_1a3f3aabc0b901e923d739c5b5bce0770d" kindref="member">ns_attributes</ref>[i].<ref refid="structswig__lua__attribute_1ab18a92c81433b7b3de23856cda4b89b5" kindref="member">getmethod</ref>,</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ns-&gt;<ref refid="structswig__lua__namespace_1a3f3aabc0b901e923d739c5b5bce0770d" kindref="member">ns_attributes</ref>[i].<ref refid="structswig__lua__attribute_1a0b88e38d5417453e7718f7090b797b06" kindref="member">setmethod</ref>);</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>stack<sp/>-<sp/>remove<sp/>metatble<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Register<sp/>all<sp/>classes<sp/>in<sp/>the<sp/>namespace<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1553" refid="swig__runtime_8h_1a1eaf1788c7d2da312e1ebd9f251017f1" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a1eaf1788c7d2da312e1ebd9f251017f1" kindref="member">SWIG_Lua_add_namespace_classes</ref>(lua_State<sp/>*L,</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__lua__namespace" kindref="compound">swig_lua_namespace</ref><sp/>*ns)</highlight></codeline>
<codeline lineno="1555"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>**classes;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>There<sp/>must<sp/>be<sp/>a<sp/>module/namespace<sp/>table<sp/>at<sp/>the<sp/>top<sp/>of<sp/>the<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/>classes<sp/>=<sp/>ns-&gt;<ref refid="structswig__lua__namespace_1a6497c3aceb8de15113fb214a74a3e019" kindref="member">ns_classes</ref>;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classes<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*classes<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a96a75364a5f20fd525bb603440f698d3" kindref="member">SWIG_Lua_class_register</ref>(L,<sp/>*classes);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classes++;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Helper<sp/>function.<sp/>Creates<sp/>namespace<sp/>table<sp/>and<sp/>adds<sp/>it<sp/>to<sp/>module<sp/>table</highlight></codeline>
<codeline lineno="1574"><highlight class="comment"><sp/><sp/><sp/>if<sp/>&apos;reg&apos;<sp/>is<sp/>true,<sp/>then<sp/>will<sp/>register<sp/>namespace<sp/>table<sp/>to<sp/>parent<sp/>one<sp/>(must<sp/>be</highlight></codeline>
<codeline lineno="1575"><highlight class="comment"><sp/><sp/><sp/>on<sp/>top<sp/>of<sp/>the<sp/>stack</highlight></codeline>
<codeline lineno="1576"><highlight class="comment"><sp/><sp/><sp/>when<sp/>function<sp/>is<sp/>called).</highlight></codeline>
<codeline lineno="1577"><highlight class="comment"><sp/><sp/><sp/>Function<sp/>always<sp/>returns<sp/>newly<sp/>registered<sp/>table<sp/>on<sp/>top<sp/>of<sp/>the<sp/>stack.</highlight></codeline>
<codeline lineno="1578"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1579" refid="swig__runtime_8h_1a85ebfe3fdce248c83e2e3620dc6f330e" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a85ebfe3fdce248c83e2e3620dc6f330e" kindref="member">SWIG_Lua_namespace_register</ref>(lua_State<sp/>*L,</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__lua__namespace" kindref="compound">swig_lua_namespace</ref><sp/>*ns,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reg)</highlight></codeline>
<codeline lineno="1581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><ref refid="structswig__lua__namespace" kindref="compound">swig_lua_namespace</ref><sp/>**sub_namespace;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>1<sp/>argument<sp/>-<sp/>table<sp/>on<sp/>the<sp/>top<sp/>of<sp/>the<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a6ee41cd160d397aa76668bf4db65e2d1" kindref="member">SWIGUNUSED</ref><sp/>begin<sp/>=<sp/>lua_gettop(L);</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));<sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case.<sp/>This<sp/>is<sp/>supposed<sp/>to<sp/>be<sp/>module</highlight></codeline>
<codeline lineno="1586"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table<sp/>or<sp/>parent<sp/>namespace<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/>lua_checkstack(L,<sp/>5);</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/>lua_newtable(L);<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>itself<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/>lua_newtable(L);<sp/></highlight><highlight class="comment">/*<sp/>metatable<sp/>for<sp/>namespace<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>a<sp/>table<sp/>called<sp/>&quot;.get&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/></highlight><highlight class="stringliteral">&quot;.get&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/>lua_newtable(L);</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/>lua_rawset(L,<sp/>-3);</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>a<sp/>table<sp/>called<sp/>&quot;.set&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/></highlight><highlight class="stringliteral">&quot;.set&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/>lua_newtable(L);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/>lua_rawset(L,<sp/>-3);</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>a<sp/>table<sp/>called<sp/>&quot;.fn&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/></highlight><highlight class="stringliteral">&quot;.fn&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/>lua_newtable(L);</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/>lua_rawset(L,<sp/>-3);</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>accessor<sp/>fns<sp/>for<sp/>using<sp/>the<sp/>.get,.set&amp;.fn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a4e0088e1d53848f80738e5a49f1c0cf3" kindref="member">SWIG_Lua_add_function</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;__index&quot;</highlight><highlight class="normal">,<sp/><ref refid="swig__runtime_8h_1a82a3c5d46b7bdaa57cc1106ff5a89663" kindref="member">SWIG_Lua_namespace_get</ref>);</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a4e0088e1d53848f80738e5a49f1c0cf3" kindref="member">SWIG_Lua_add_function</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;__newindex&quot;</highlight><highlight class="normal">,<sp/><ref refid="swig__runtime_8h_1aa56ce48dad661ece0586e2b0477d04d6" kindref="member">SWIG_Lua_namespace_set</ref>);</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/>lua_setmetatable(L,<sp/>-2);<sp/></highlight><highlight class="comment">/*<sp/>set<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Register<sp/>all<sp/>functions,<sp/>variables<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a9ee5ba0a0bf072010a447d4b2f98d545" kindref="member">SWIG_Lua_add_namespace_details</ref>(L,<sp/>ns);</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Register<sp/>classes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a1eaf1788c7d2da312e1ebd9f251017f1" kindref="member">SWIG_Lua_add_namespace_classes</ref>(L,<sp/>ns);</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/>sub_namespace<sp/>=<sp/>ns-&gt;<ref refid="structswig__lua__namespace_1ae8c454726d38da0b31becead391fef5b" kindref="member">ns_namespaces</ref>;</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub_namespace<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*sub_namespace<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a85ebfe3fdce248c83e2e3620dc6f330e" kindref="member">SWIG_Lua_namespace_register</ref>(L,<sp/>*sub_namespace,<sp/>1);</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>removing<sp/>sub-namespace<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub_namespace++;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reg)</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushstring(L,<sp/>ns-&gt;<ref refid="structswig__lua__namespace_1a5ac77da56177f2221e7b4383d08289ae" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>-2);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_rawset(L,<sp/>-4);<sp/></highlight><highlight class="comment">/*<sp/>add<sp/>namespace<sp/>to<sp/>module<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/>assert(lua_gettop(L)<sp/>==<sp/>begin<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SWIG_LUA_TARGET<sp/>==<sp/>SWIG_LUA_FLAVOR_LUA<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1637"><highlight class="comment"><sp/>*<sp/>global<sp/>variable<sp/>support<sp/>code:<sp/>classes</highlight></codeline>
<codeline lineno="1638"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1639"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1af93e8f0a3beec1aefa768abb89fe7485" kindref="member">SWIG_Lua_get_class_metatable</ref>(lua_State<sp/>*L,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cname);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight></codeline>
<codeline lineno="1643" refid="swig__runtime_8h_1acb5ead7109df678f22b2ec7d2203ce62" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="swig__runtime_8h_1acb5ead7109df678f22b2ec7d2203ce62" kindref="member">swig_lua_base_iterator_func</ref>)(lua_State<sp/>*,<sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*,<sp/>int,</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ret);</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight></codeline>
<codeline lineno="1646" refid="swig__runtime_8h_1a355fae01cf3c5ae6e3ce7e947a3116ae" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a355fae01cf3c5ae6e3ce7e947a3116ae" kindref="member">SWIG_Lua_iterate_bases</ref>(lua_State<sp/>*L,</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*<ref refid="swig__runtime_8h_1a6ee41cd160d397aa76668bf4db65e2d1" kindref="member">SWIGUNUSED</ref><sp/>swig_type,</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first_arg,</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1acb5ead7109df678f22b2ec7d2203ce62" kindref="member">swig_lua_base_iterator_func</ref><sp/>func,</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ret)</highlight></codeline>
<codeline lineno="1651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>first_arg<sp/>-<sp/>position<sp/>of<sp/>the<sp/>object<sp/>in<sp/>stack.<sp/>Everything<sp/>that<sp/>is<sp/>above<sp/>are</highlight></codeline>
<codeline lineno="1653"><highlight class="comment"><sp/><sp/><sp/>*<sp/>arguments</highlight></codeline>
<codeline lineno="1654"><highlight class="comment"><sp/><sp/><sp/>*<sp/>and<sp/>is<sp/>passed<sp/>to<sp/>every<sp/>evocation<sp/>of<sp/>the<sp/>func<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_arg<sp/>=<sp/>lua_gettop(L);<sp/></highlight><highlight class="comment">/*<sp/>position<sp/>of<sp/>last<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>original_metatable<sp/>=<sp/>last_arg<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bases_count;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="swig__runtime_8h_1acfa11a770d66f9ca6ba170b173c56c94" kindref="member">SWIG_ERROR</ref>;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bases_table;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/>(<ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref>)swig_type;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/>lua_getmetatable(L,<sp/>first_arg);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>initialise<sp/>base<sp/>search<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(SWIG_LUA_TARGET<sp/>==<sp/>SWIG_LUA_FLAVOR_LUA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a45e06ea798b759df9853467b13abcdfc" kindref="member">SWIG_Lua_get_table</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;.bases&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/>bases_count<sp/>=<sp/><ref refid="swig__runtime_8h_1a0a129d773aae7e71b7c30370cd3c3dd9" kindref="member">lua_rawlen</ref>(L,<sp/>-1);</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/>bases_table<sp/>=<sp/>lua_gettop(L);</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>elua<sp/>.bases<sp/>table<sp/>doesn&apos;t<sp/>exist.<sp/>Use<sp/>table<sp/>from<sp/>swig_lua_class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/>(<ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref>)bases_table;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/>assert(swig_type<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><ref refid="structswig__module__info" kindref="compound">swig_module_info</ref><sp/>*module<sp/>=<sp/><ref refid="swig__runtime_8h_1ab97db3bbfc9e3a73de01e1ee95fa0bb5" kindref="member">SWIG_GetModule</ref>(L);</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>**<ref refid="structswig__lua__class_1a468e2d019d6cff6bbe8fefc8f572420b" kindref="member">bases</ref><sp/>=<sp/>((<ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>*)(swig_type-&gt;clientdata))-&gt;<ref refid="structswig__lua__class_1a468e2d019d6cff6bbe8fefc8f572420b" kindref="member">bases</ref>;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="structswig__lua__class_1a25f24829385c30c59cec92c91fceca23" kindref="member">base_names</ref><sp/>=</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>*)(swig_type-&gt;clientdata))-&gt;<ref refid="structswig__lua__class_1a25f24829385c30c59cec92c91fceca23" kindref="member">base_names</ref>;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/>bases_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/><ref refid="structswig__lua__class_1a25f24829385c30c59cec92c91fceca23" kindref="member">base_names</ref>[bases_count];<sp/>bases_count++)</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>length<sp/>of<sp/>bases<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/>*ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bases_count<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>to_remove;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subcall_last_arg;</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subcall_first_arg<sp/>=</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_gettop(L)<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>Here<sp/>a<sp/>copy<sp/>of<sp/>first_arg<sp/>and<sp/>arguments<sp/>begin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valid<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*base_swig_type<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>first_arg;<sp/>j<sp/>&lt;=<sp/>last_arg;<sp/>j++)</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>j);</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subcall_last_arg<sp/>=<sp/>lua_gettop(L);</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Trick:<sp/>temporarily<sp/>replacing<sp/>original<sp/>metatable<sp/>with<sp/>metatable<sp/>for<sp/>base</highlight></codeline>
<codeline lineno="1699"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>class<sp/>and<sp/>call<sp/>getter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>bases_count;<sp/>i++)</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Iteration<sp/>through<sp/>class<sp/>bases<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(SWIG_LUA_TARGET<sp/>==<sp/>SWIG_LUA_FLAVOR_LUA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_rawgeti(L,<sp/>bases_table,<sp/>i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_swig_type<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lua_isnil(L,<sp/>-1))</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>1);</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>In<sp/>elua<sp/>.bases<sp/>table<sp/>doesn&apos;t<sp/>exist.<sp/>Use<sp/>table<sp/>from<sp/>swig_lua_class<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>*base_class<sp/>=<sp/><ref refid="structswig__lua__class_1a468e2d019d6cff6bbe8fefc8f572420b" kindref="member">bases</ref>[i];</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!base_class)</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1af93e8f0a3beec1aefa768abb89fe7485" kindref="member">SWIG_Lua_get_class_metatable</ref>(L,<sp/>base_class-&gt;<ref refid="structswig__lua__class_1a3c6469ebd6d312208ff380f8e8eff165" kindref="member">fqname</ref>);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_swig_type<sp/>=</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a5b6a2719f95288678fa55ade4493b175" kindref="member">SWIG_TypeQueryModule</ref>(module,<sp/>module,<sp/><ref refid="structswig__lua__class_1a25f24829385c30c59cec92c91fceca23" kindref="member">base_names</ref>[i]);</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(base_swig_type<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!valid)</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(lua_isuserdata(L,<sp/>subcall_first_arg));</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(lua_istable(L,<sp/>-1));</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_setmetatable(L,<sp/>subcall_first_arg);<sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>new<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(lua_gettop(L)<sp/>==<sp/>subcall_last_arg);</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>func(L,<sp/>base_swig_type,<sp/>subcall_first_arg,</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret);<sp/></highlight><highlight class="comment">/*<sp/>Forward<sp/>call<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="swig__runtime_8h_1acfa11a770d66f9ca6ba170b173c56c94" kindref="member">SWIG_ERROR</ref>)</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>original<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>original_metatable);</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_setmetatable(L,<sp/>first_arg);</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>-<sp/>remove<sp/>everything<sp/>between<sp/>last_arg<sp/>and<sp/>subcall_last_arg</highlight></codeline>
<codeline lineno="1748"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>including<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>to_remove<sp/>=<sp/>subcall_last_arg<sp/>-<sp/>last_arg;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>to_remove;<sp/>j++)</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_remove(L,<sp/>last_arg<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remove<sp/>everything<sp/>after<sp/>last_arg<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>lua_gettop(L)<sp/>-<sp/>last_arg);</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(lua_gettop(L)<sp/>==<sp/>last_arg<sp/>+<sp/>*ret);</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>class.get<sp/>method<sp/>helper,<sp/>performs<sp/>the<sp/>lookup<sp/>of<sp/>class<sp/>attributes.</highlight></codeline>
<codeline lineno="1764"><highlight class="comment"><sp/>*<sp/>It<sp/>returns<sp/>an<sp/>error<sp/>code.<sp/>Number<sp/>of<sp/>function<sp/>return<sp/>values<sp/>is<sp/>passed<sp/>inside</highlight></codeline>
<codeline lineno="1765"><highlight class="comment"><sp/>*<sp/>&apos;ret&apos;.</highlight></codeline>
<codeline lineno="1766"><highlight class="comment"><sp/>*<sp/>first_arg<sp/>is<sp/>not<sp/>used<sp/>in<sp/>this<sp/>function<sp/>because<sp/>function<sp/>always<sp/>has<sp/>2</highlight></codeline>
<codeline lineno="1767"><highlight class="comment"><sp/>*<sp/>arguments.</highlight></codeline>
<codeline lineno="1768"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1769" refid="swig__runtime_8h_1a4d600ac112b2281f2b7b77355eed2fba" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a4d600ac112b2281f2b7b77355eed2fba" kindref="member">SWIG_Lua_class_do_get_item</ref>(lua_State<sp/>*L,<sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*<ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>,</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a6ee41cd160d397aa76668bf4db65e2d1" kindref="member">SWIGUNUSED</ref><sp/>first_arg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ret)</highlight></codeline>
<codeline lineno="1771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>there<sp/>should<sp/>be<sp/>2<sp/>params<sp/>passed<sp/>in</highlight></codeline>
<codeline lineno="1773"><highlight class="comment"><sp/><sp/><sp/><sp/>(1)<sp/>userdata<sp/>(not<sp/>the<sp/>meta<sp/>table)</highlight></codeline>
<codeline lineno="1774"><highlight class="comment"><sp/><sp/><sp/><sp/>(2)<sp/>string<sp/>name<sp/>of<sp/>the<sp/>attribute</highlight></codeline>
<codeline lineno="1775"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bases_search_result;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>substack_start<sp/>=<sp/>lua_gettop(L)<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/>assert(first_arg<sp/>==<sp/>substack_start<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/>lua_checkstack(L,<sp/>5);</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/>assert(lua_isuserdata(L,<sp/>-2));<sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/>lua_getmetatable(L,<sp/>-2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>meta<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>NEW:<sp/>looks<sp/>for<sp/>the<sp/>__getitem()<sp/>fn</highlight></codeline>
<codeline lineno="1784"><highlight class="comment"><sp/><sp/>this<sp/>is<sp/>a<sp/>user<sp/>provided<sp/>get<sp/>fn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a45e06ea798b759df9853467b13abcdfc" kindref="member">SWIG_Lua_get_table</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;__getitem&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>find<sp/>the<sp/>__getitem<sp/>fn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lua_iscfunction(L,<sp/>-1))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>its<sp/>there<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>found<sp/>it<sp/>so<sp/>call<sp/>the<sp/>fn<sp/>&amp;<sp/>return<sp/>its<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>substack_start<sp/>+<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>userdata<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>substack_start<sp/>+<sp/>2);<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_call(L,<sp/>2,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>2<sp/>value<sp/>in<sp/>(userdata),1<sp/>out<sp/>(result)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_remove(L,<sp/>-2);<sp/></highlight><highlight class="comment">/*<sp/>stack<sp/>tidy,<sp/>remove<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ret<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1af9ecbac56d4c5cd6104ae8f6bb82e9f7" kindref="member">SWIG_OK</ref>;</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remove<sp/>the<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Search<sp/>in<sp/>base<sp/>classes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/>bases_search_result<sp/>=<sp/><ref refid="swig__runtime_8h_1a355fae01cf3c5ae6e3ce7e947a3116ae" kindref="member">SWIG_Lua_iterate_bases</ref>(L,<sp/><ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>,<sp/>substack_start<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a4d600ac112b2281f2b7b77355eed2fba" kindref="member">SWIG_Lua_class_do_get_item</ref>,<sp/>ret);</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bases_search_result;<sp/></highlight><highlight class="comment">/*<sp/>sorry<sp/>not<sp/>known<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>class.get<sp/>method<sp/>helper,<sp/>performs<sp/>the<sp/>lookup<sp/>of<sp/>class<sp/>attributes.</highlight></codeline>
<codeline lineno="1806"><highlight class="comment"><sp/>*<sp/>It<sp/>returns<sp/>an<sp/>error<sp/>code.<sp/>Number<sp/>of<sp/>function<sp/>return<sp/>values<sp/>is<sp/>passed<sp/>inside</highlight></codeline>
<codeline lineno="1807"><highlight class="comment"><sp/>*<sp/>&apos;ret&apos;.</highlight></codeline>
<codeline lineno="1808"><highlight class="comment"><sp/>*<sp/>first_arg<sp/>is<sp/>not<sp/>used<sp/>in<sp/>this<sp/>function<sp/>because<sp/>function<sp/>always<sp/>has<sp/>2</highlight></codeline>
<codeline lineno="1809"><highlight class="comment"><sp/>*<sp/>arguments.</highlight></codeline>
<codeline lineno="1810"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1811" refid="swig__runtime_8h_1a194016b571a78a06fd25c82e95325a02" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a194016b571a78a06fd25c82e95325a02" kindref="member">SWIG_Lua_class_do_get</ref>(lua_State<sp/>*L,<sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*<ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>,</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a6ee41cd160d397aa76668bf4db65e2d1" kindref="member">SWIGUNUSED</ref><sp/>first_arg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ret)</highlight></codeline>
<codeline lineno="1813"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>there<sp/>should<sp/>be<sp/>2<sp/>params<sp/>passed<sp/>in</highlight></codeline>
<codeline lineno="1815"><highlight class="comment"><sp/><sp/><sp/><sp/>(1)<sp/>userdata<sp/>(not<sp/>the<sp/>meta<sp/>table)</highlight></codeline>
<codeline lineno="1816"><highlight class="comment"><sp/><sp/><sp/><sp/>(2)<sp/>string<sp/>name<sp/>of<sp/>the<sp/>attribute</highlight></codeline>
<codeline lineno="1817"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bases_search_result;</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>substack_start<sp/>=<sp/>lua_gettop(L)<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/>assert(first_arg<sp/>==<sp/>substack_start<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/>lua_checkstack(L,<sp/>5);</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/>assert(lua_isuserdata(L,<sp/>-2));<sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/>lua_getmetatable(L,<sp/>-2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>meta<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a45e06ea798b759df9853467b13abcdfc" kindref="member">SWIG_Lua_get_table</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;.get&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>find<sp/>the<sp/>.get<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>look<sp/>for<sp/>the<sp/>key<sp/>in<sp/>the<sp/>.get<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/>lua_pushvalue(L,<sp/>substack_start<sp/>+<sp/>2);<sp/></highlight><highlight class="comment">/*<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/>lua_rawget(L,<sp/>-2);</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/>lua_remove(L,<sp/>-2);<sp/></highlight><highlight class="comment">/*<sp/>stack<sp/>tidy,<sp/>remove<sp/>.get<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lua_iscfunction(L,<sp/>-1))</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>found<sp/>it<sp/>so<sp/>call<sp/>the<sp/>fn<sp/>&amp;<sp/>return<sp/>its<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>substack_start<sp/>+<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>userdata<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_call(L,<sp/>1,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>1<sp/>value<sp/>in<sp/>(userdata),1<sp/>out<sp/>(result)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_remove(L,<sp/>-2);<sp/></highlight><highlight class="comment">/*<sp/>stack<sp/>tidy,<sp/>remove<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ret<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1af9ecbac56d4c5cd6104ae8f6bb82e9f7" kindref="member">SWIG_OK</ref>;</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>whatever<sp/>was<sp/>there<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>ok,<sp/>so<sp/>try<sp/>the<sp/>.fn<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a45e06ea798b759df9853467b13abcdfc" kindref="member">SWIG_Lua_get_table</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;.fn&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>find<sp/>the<sp/>.fn<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/>lua_pushvalue(L,<sp/>substack_start<sp/>+<sp/>2);<sp/></highlight><highlight class="comment">/*<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/>lua_rawget(L,<sp/>-2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>look<sp/>for<sp/>the<sp/>fn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/>lua_remove(L,<sp/>-2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>stack<sp/>tidy,<sp/>remove<sp/>.fn<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lua_isfunction(L,<sp/>-1))<sp/></highlight><highlight class="comment">/*<sp/>note:<sp/>if<sp/>its<sp/>a<sp/>C<sp/>function<sp/>or<sp/>lua<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>found<sp/>it<sp/>so<sp/>return<sp/>the<sp/>fn<sp/>&amp;<sp/>let<sp/>lua<sp/>call<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_remove(L,<sp/>-2);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>stack<sp/>tidy,<sp/>remove<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ret<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1af9ecbac56d4c5cd6104ae8f6bb82e9f7" kindref="member">SWIG_OK</ref>;</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>whatever<sp/>was<sp/>there<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remove<sp/>the<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Search<sp/>in<sp/>base<sp/>classes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/>bases_search_result<sp/>=<sp/><ref refid="swig__runtime_8h_1a355fae01cf3c5ae6e3ce7e947a3116ae" kindref="member">SWIG_Lua_iterate_bases</ref>(L,<sp/><ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>,<sp/>substack_start<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a194016b571a78a06fd25c82e95325a02" kindref="member">SWIG_Lua_class_do_get</ref>,<sp/>ret);</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bases_search_result;<sp/></highlight><highlight class="comment">/*<sp/>sorry<sp/>not<sp/>known<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>the<sp/>class.get<sp/>method,<sp/>performs<sp/>the<sp/>lookup<sp/>of<sp/>class<sp/>attributes</highlight></codeline>
<codeline lineno="1864"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1865" refid="swig__runtime_8h_1a85b5ba6bf2bdbe0d21a3611f3b5f8df3" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a85b5ba6bf2bdbe0d21a3611f3b5f8df3" kindref="member">SWIG_Lua_class_get</ref>(lua_State<sp/>*L)</highlight></codeline>
<codeline lineno="1866"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>there<sp/>should<sp/>be<sp/>2<sp/>params<sp/>passed<sp/>in</highlight></codeline>
<codeline lineno="1868"><highlight class="comment"><sp/><sp/><sp/><sp/>(1)<sp/>userdata<sp/>(not<sp/>the<sp/>meta<sp/>table)</highlight></codeline>
<codeline lineno="1869"><highlight class="comment"><sp/><sp/><sp/><sp/>(2)<sp/>string<sp/>name<sp/>of<sp/>the<sp/>attribute</highlight></codeline>
<codeline lineno="1870"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><ref refid="structswig__lua__userdata" kindref="compound">swig_lua_userdata</ref><sp/>*usr;</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*<ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/>assert(lua_isuserdata(L,<sp/>1));</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/>usr<sp/>=<sp/>(<ref refid="structswig__lua__userdata" kindref="compound">swig_lua_userdata</ref><sp/>*)lua_touserdata(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref><sp/>=<sp/>usr-&gt;<ref refid="structswig__lua__userdata_1aed83344d96f9da7bf57f9bb604cb1d53" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/><ref refid="swig__runtime_8h_1a194016b571a78a06fd25c82e95325a02" kindref="member">SWIG_Lua_class_do_get</ref>(L,<sp/><ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>,<sp/>1,<sp/>&amp;ret);</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/><ref refid="swig__runtime_8h_1af9ecbac56d4c5cd6104ae8f6bb82e9f7" kindref="member">SWIG_OK</ref>)</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/><ref refid="swig__runtime_8h_1a4d600ac112b2281f2b7b77355eed2fba" kindref="member">SWIG_Lua_class_do_get_item</ref>(L,<sp/><ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>,<sp/>1,<sp/>&amp;ret);</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/><ref refid="swig__runtime_8h_1af9ecbac56d4c5cd6104ae8f6bb82e9f7" kindref="member">SWIG_OK</ref>)</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1887"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>helper<sp/>for<sp/>the<sp/>class.set<sp/>method,<sp/>performs<sp/>the<sp/>lookup<sp/>of<sp/>class<sp/>attributes</highlight></codeline>
<codeline lineno="1890"><highlight class="comment"><sp/>*<sp/>It<sp/>returns<sp/>error<sp/>code.<sp/>Number<sp/>of<sp/>function<sp/>return<sp/>values<sp/>is<sp/>passed<sp/>inside</highlight></codeline>
<codeline lineno="1891"><highlight class="comment"><sp/>*<sp/>&apos;ret&apos;</highlight></codeline>
<codeline lineno="1892"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1893" refid="swig__runtime_8h_1ab2fdf092684471f1833cdac0ee86c9e4" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1ab2fdf092684471f1833cdac0ee86c9e4" kindref="member">SWIG_Lua_class_do_set</ref>(lua_State<sp/>*L,<sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*<ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>,</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first_arg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ret)</highlight></codeline>
<codeline lineno="1895"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>there<sp/>should<sp/>be<sp/>3<sp/>params<sp/>passed<sp/>in</highlight></codeline>
<codeline lineno="1897"><highlight class="comment"><sp/><sp/><sp/><sp/>(1)<sp/>table<sp/>(not<sp/>the<sp/>meta<sp/>table)</highlight></codeline>
<codeline lineno="1898"><highlight class="comment"><sp/><sp/><sp/><sp/>(2)<sp/>string<sp/>name<sp/>of<sp/>the<sp/>attribute</highlight></codeline>
<codeline lineno="1899"><highlight class="comment"><sp/><sp/><sp/><sp/>(3)<sp/>any<sp/>for<sp/>the<sp/>new<sp/>value</highlight></codeline>
<codeline lineno="1900"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bases_search_result;</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>substack_start<sp/>=<sp/>lua_gettop(L)<sp/>-<sp/>3;</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/>lua_checkstack(L,<sp/>5);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/>assert(lua_isuserdata(L,<sp/>substack_start<sp/>+<sp/>1));<sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/>lua_getmetatable(L,<sp/>substack_start<sp/>+<sp/>1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>meta<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/>*ret<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>it<sp/>is<sp/>setter<sp/>-<sp/>number<sp/>of<sp/>return<sp/>values<sp/>is<sp/>always<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a45e06ea798b759df9853467b13abcdfc" kindref="member">SWIG_Lua_get_table</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;.set&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>find<sp/>the<sp/>.set<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lua_istable(L,<sp/>-1))</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>look<sp/>for<sp/>the<sp/>key<sp/>in<sp/>the<sp/>.set<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>substack_start<sp/>+<sp/>2);<sp/></highlight><highlight class="comment">/*<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_rawget(L,<sp/>-2);</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_remove(L,<sp/>-2);<sp/></highlight><highlight class="comment">/*<sp/>tidy<sp/>stack,<sp/>remove<sp/>.set<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lua_iscfunction(L,<sp/>-1))</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>found<sp/>it<sp/>so<sp/>call<sp/>the<sp/>fn<sp/>&amp;<sp/>return<sp/>its<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>substack_start<sp/>+<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>userdata<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>substack_start<sp/>+<sp/>3);<sp/></highlight><highlight class="comment">/*<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_call(L,<sp/>2,<sp/>0);</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_remove(L,<sp/>substack_start<sp/>+<sp/>4);<sp/></highlight><highlight class="comment">/*remove<sp/>metatable*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1af9ecbac56d4c5cd6104ae8f6bb82e9f7" kindref="member">SWIG_OK</ref>;</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>the<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>the<sp/>answer<sp/>for<sp/>.set<sp/>table<sp/>request*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>NEW:<sp/>looks<sp/>for<sp/>the<sp/>__setitem()<sp/>fn</highlight></codeline>
<codeline lineno="1933"><highlight class="comment"><sp/><sp/>this<sp/>is<sp/>a<sp/>user<sp/>provided<sp/>set<sp/>fn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a45e06ea798b759df9853467b13abcdfc" kindref="member">SWIG_Lua_get_table</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;__setitem&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>find<sp/>the<sp/>fn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lua_iscfunction(L,<sp/>-1))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>its<sp/>there<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>found<sp/>it<sp/>so<sp/>call<sp/>the<sp/>fn<sp/>&amp;<sp/>return<sp/>its<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>substack_start<sp/>+<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>userdata<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>substack_start<sp/>+<sp/>2);<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>substack_start<sp/>+<sp/>3);<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_call(L,<sp/>3,<sp/>0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>3<sp/>values<sp/>in<sp/>,0<sp/>out<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_remove(L,<sp/>-2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>stack<sp/>tidy,<sp/>remove<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1af9ecbac56d4c5cd6104ae8f6bb82e9f7" kindref="member">SWIG_OK</ref>;</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Search<sp/>among<sp/>bases<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/>bases_search_result<sp/>=</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a355fae01cf3c5ae6e3ce7e947a3116ae" kindref="member">SWIG_Lua_iterate_bases</ref>(L,<sp/><ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>,<sp/>first_arg,<sp/><ref refid="swig__runtime_8h_1ab2fdf092684471f1833cdac0ee86c9e4" kindref="member">SWIG_Lua_class_do_set</ref>,<sp/>ret);</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(*ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/>assert(lua_gettop(L)<sp/>==<sp/>substack_start<sp/>+<sp/>3);</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bases_search_result;</highlight></codeline>
<codeline lineno="1954"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>actual<sp/>method<sp/>exported<sp/>to<sp/>Lua.<sp/>It<sp/>calls<sp/>SWIG_Lua_class_do_set<sp/>and</highlight></codeline>
<codeline lineno="1957"><highlight class="comment"><sp/>*<sp/>correctly</highlight></codeline>
<codeline lineno="1958"><highlight class="comment"><sp/>*<sp/>handles<sp/>return<sp/>values.</highlight></codeline>
<codeline lineno="1959"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1960" refid="swig__runtime_8h_1ab75aeed852fd5b630a45dd2312ced041" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1ab75aeed852fd5b630a45dd2312ced041" kindref="member">SWIG_Lua_class_set</ref>(lua_State<sp/>*L)</highlight></codeline>
<codeline lineno="1961"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>There<sp/>should<sp/>be<sp/>3<sp/>params<sp/>passed<sp/>in</highlight></codeline>
<codeline lineno="1963"><highlight class="comment"><sp/><sp/><sp/><sp/>(1)<sp/>table<sp/>(not<sp/>the<sp/>meta<sp/>table)</highlight></codeline>
<codeline lineno="1964"><highlight class="comment"><sp/><sp/><sp/><sp/>(2)<sp/>string<sp/>name<sp/>of<sp/>the<sp/>attribute</highlight></codeline>
<codeline lineno="1965"><highlight class="comment"><sp/><sp/><sp/><sp/>(3)<sp/>any<sp/>for<sp/>the<sp/>new<sp/>value</highlight></codeline>
<codeline lineno="1966"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><ref refid="structswig__lua__userdata" kindref="compound">swig_lua_userdata</ref><sp/>*usr;</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*<ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/>assert(lua_isuserdata(L,<sp/>1));</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/>usr<sp/>=<sp/>(<ref refid="structswig__lua__userdata" kindref="compound">swig_lua_userdata</ref><sp/>*)lua_touserdata(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref><sp/>=<sp/>usr-&gt;<ref refid="structswig__lua__userdata_1aed83344d96f9da7bf57f9bb604cb1d53" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/><ref refid="swig__runtime_8h_1ab2fdf092684471f1833cdac0ee86c9e4" kindref="member">SWIG_Lua_class_do_set</ref>(L,<sp/><ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>,<sp/>1,<sp/>&amp;ret);</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="swig__runtime_8h_1af9ecbac56d4c5cd6104ae8f6bb82e9f7" kindref="member">SWIG_OK</ref>)</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1ad4708a823127d389179291ebcace732d" kindref="member">SWIG_Lua_pushferrstring</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;Assignment<sp/>not<sp/>possible.<sp/>No<sp/>setter/member<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;with<sp/>this<sp/>name.<sp/>For<sp/>custom<sp/>assignments<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;implement<sp/>__setitem<sp/>method.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_error(L);</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(ret<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1987"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"></highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>the<sp/>class.destruct<sp/>method<sp/>called<sp/>by<sp/>the<sp/>interpreter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1990" refid="swig__runtime_8h_1aba87e0d4ef2c7e61e81b4f685eef7b7b" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1aba87e0d4ef2c7e61e81b4f685eef7b7b" kindref="member">SWIG_Lua_class_destruct</ref>(lua_State<sp/>*L)</highlight></codeline>
<codeline lineno="1991"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>there<sp/>should<sp/>be<sp/>1<sp/>params<sp/>passed<sp/>in</highlight></codeline>
<codeline lineno="1993"><highlight class="comment"><sp/><sp/><sp/><sp/>(1)<sp/>userdata<sp/>(not<sp/>the<sp/>meta<sp/>table)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><ref refid="structswig__lua__userdata" kindref="compound">swig_lua_userdata</ref><sp/>*usr;</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>*clss;</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/>assert(lua_isuserdata(L,<sp/>-1));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/>usr<sp/>=<sp/>(<ref refid="structswig__lua__userdata" kindref="compound">swig_lua_userdata</ref><sp/>*)lua_touserdata(L,<sp/>-1);<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>must<sp/>be<sp/>destroyed<sp/>&amp;<sp/>has<sp/>a<sp/>destructor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(usr-&gt;<ref refid="structswig__lua__userdata_1a12970d19b437f84b1e7fba18ede882cb" kindref="member">own</ref>)<sp/></highlight><highlight class="comment">/*<sp/>if<sp/>must<sp/>be<sp/>destroyed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clss<sp/>=<sp/>(<ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>*)usr-&gt;<ref refid="structswig__lua__userdata_1aed83344d96f9da7bf57f9bb604cb1d53" kindref="member">type</ref>-&gt;<ref refid="structswig__type__info_1a19bdd65dceb89cd54befd3ded06558b7" kindref="member">clientdata</ref>;<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(clss<sp/>&amp;&amp;<sp/>clss-&gt;<ref refid="structswig__lua__class_1a19ebe1411a51b4d1ef82432e76353854" kindref="member">destructor</ref>)<sp/></highlight><highlight class="comment">/*<sp/>there<sp/>is<sp/>a<sp/>destroy<sp/>fn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clss-&gt;<ref refid="structswig__lua__class_1a19ebe1411a51b4d1ef82432e76353854" kindref="member">destructor</ref>(usr-&gt;<ref refid="structswig__lua__userdata_1a2d3be052ee0b81986ab31ef5dc08fd25" kindref="member">ptr</ref>);<sp/></highlight><highlight class="comment">/*<sp/>bye<sp/>bye<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2008"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"></highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>the<sp/>class.__tostring<sp/>method<sp/>called<sp/>by<sp/>the<sp/>interpreter<sp/>and<sp/>print<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2011" refid="swig__runtime_8h_1aeabb40f074f78d6ff46831b93e4750e1" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1aeabb40f074f78d6ff46831b93e4750e1" kindref="member">SWIG_Lua_class_tostring</ref>(lua_State<sp/>*L)</highlight></codeline>
<codeline lineno="2012"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>there<sp/>should<sp/>be<sp/>1<sp/>param<sp/>passed<sp/>in</highlight></codeline>
<codeline lineno="2014"><highlight class="comment"><sp/><sp/><sp/><sp/>(1)<sp/>userdata<sp/>(not<sp/>the<sp/>metatable)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*className;</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userData;</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/>assert(lua_isuserdata(L,<sp/>1));<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/>userData<sp/>=<sp/>lua_touserdata(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>userdata<sp/>address<sp/>for<sp/>later<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/>lua_getmetatable(L,<sp/>1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>meta<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/>lua_getfield(L,<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;.type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/>className<sp/>=<sp/>lua_tostring(L,<sp/>-1);</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/>lua_pushfstring(L,<sp/></highlight><highlight class="stringliteral">&quot;&lt;%s<sp/>userdata:<sp/>%p&gt;&quot;</highlight><highlight class="normal">,<sp/>className,<sp/>userData);</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2027"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>to<sp/>manually<sp/>disown<sp/>some<sp/>userdata<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2030" refid="swig__runtime_8h_1aa6dab0ada88ba05ba8067207c79efbd8" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1aa6dab0ada88ba05ba8067207c79efbd8" kindref="member">SWIG_Lua_class_disown</ref>(lua_State<sp/>*L)</highlight></codeline>
<codeline lineno="2031"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>there<sp/>should<sp/>be<sp/>1<sp/>params<sp/>passed<sp/>in</highlight></codeline>
<codeline lineno="2033"><highlight class="comment"><sp/><sp/><sp/><sp/>(1)<sp/>userdata<sp/>(not<sp/>the<sp/>meta<sp/>table)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><ref refid="structswig__lua__userdata" kindref="compound">swig_lua_userdata</ref><sp/>*usr;</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/>assert(lua_isuserdata(L,<sp/>-1));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/>usr<sp/>=<sp/>(<ref refid="structswig__lua__userdata" kindref="compound">swig_lua_userdata</ref><sp/>*)lua_touserdata(L,<sp/>-1);<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/>usr-&gt;<ref refid="structswig__lua__userdata_1a12970d19b437f84b1e7fba18ede882cb" kindref="member">own</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>our<sp/>ownership<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2040"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>lua<sp/>callable<sp/>function<sp/>to<sp/>compare<sp/>userdata&apos;s<sp/>value</highlight></codeline>
<codeline lineno="2043"><highlight class="comment">the<sp/>issue<sp/>is<sp/>that<sp/>two<sp/>userdata<sp/>may<sp/>point<sp/>to<sp/>the<sp/>same<sp/>thing</highlight></codeline>
<codeline lineno="2044"><highlight class="comment">but<sp/>to<sp/>lua,<sp/>they<sp/>are<sp/>different<sp/>objects<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2045" refid="swig__runtime_8h_1a0063e5175fc7c3ee38480307c0d857f5" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a0063e5175fc7c3ee38480307c0d857f5" kindref="member">SWIG_Lua_class_equal</ref>(lua_State<sp/>*L)</highlight></codeline>
<codeline lineno="2046"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><ref refid="structswig__lua__userdata" kindref="compound">swig_lua_userdata</ref><sp/>*usr1,<sp/>*usr2;</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lua_isuserdata(L,<sp/>1)<sp/>||<sp/>!lua_isuserdata(L,<sp/>2))<sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nil<sp/>reply<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/>usr1<sp/>=<sp/>(<ref refid="structswig__lua__userdata" kindref="compound">swig_lua_userdata</ref><sp/>*)lua_touserdata(L,<sp/>1);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/>usr2<sp/>=<sp/>(<ref refid="structswig__lua__userdata" kindref="compound">swig_lua_userdata</ref><sp/>*)lua_touserdata(L,<sp/>2);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*result=(usr1-&gt;ptr==usr2-&gt;ptr<sp/>&amp;&amp;<sp/>usr1-&gt;type==usr2-&gt;type);<sp/>only<sp/>works<sp/>if<sp/>type</highlight></codeline>
<codeline lineno="2054"><highlight class="comment"><sp/><sp/><sp/>*<sp/>is<sp/>the<sp/>same*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(usr1-&gt;<ref refid="structswig__lua__userdata_1a2d3be052ee0b81986ab31ef5dc08fd25" kindref="member">ptr</ref><sp/>==<sp/>usr2-&gt;<ref refid="structswig__lua__userdata_1a2d3be052ee0b81986ab31ef5dc08fd25" kindref="member">ptr</ref>);</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/>lua_pushboolean(L,<sp/>result);</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2058"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>populate<sp/>table<sp/>at<sp/>the<sp/>top<sp/>of<sp/>the<sp/>stack<sp/>with<sp/>metamethods<sp/>that<sp/>ought<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="2061"><highlight class="comment"><sp/>*<sp/>inherited<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2062" refid="swig__runtime_8h_1a5a21c7c1eaf4626aa084fd8a3110498e" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a5a21c7c1eaf4626aa084fd8a3110498e" kindref="member">SWIG_Lua_populate_inheritable_metamethods</ref>(lua_State<sp/>*L)</highlight></codeline>
<codeline lineno="2063"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1afd5580acc2cb0c0eeaf0644bac06f99e" kindref="member">SWIG_Lua_add_boolean</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;__add&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1afd5580acc2cb0c0eeaf0644bac06f99e" kindref="member">SWIG_Lua_add_boolean</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;__sub&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1afd5580acc2cb0c0eeaf0644bac06f99e" kindref="member">SWIG_Lua_add_boolean</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;__mul&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1afd5580acc2cb0c0eeaf0644bac06f99e" kindref="member">SWIG_Lua_add_boolean</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;__div&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1afd5580acc2cb0c0eeaf0644bac06f99e" kindref="member">SWIG_Lua_add_boolean</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;__mod&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1afd5580acc2cb0c0eeaf0644bac06f99e" kindref="member">SWIG_Lua_add_boolean</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;__pow&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1afd5580acc2cb0c0eeaf0644bac06f99e" kindref="member">SWIG_Lua_add_boolean</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;__unm&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1afd5580acc2cb0c0eeaf0644bac06f99e" kindref="member">SWIG_Lua_add_boolean</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;__len&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1afd5580acc2cb0c0eeaf0644bac06f99e" kindref="member">SWIG_Lua_add_boolean</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;__concat&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1afd5580acc2cb0c0eeaf0644bac06f99e" kindref="member">SWIG_Lua_add_boolean</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;__eq&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1afd5580acc2cb0c0eeaf0644bac06f99e" kindref="member">SWIG_Lua_add_boolean</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;__lt&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1afd5580acc2cb0c0eeaf0644bac06f99e" kindref="member">SWIG_Lua_add_boolean</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;__le&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1afd5580acc2cb0c0eeaf0644bac06f99e" kindref="member">SWIG_Lua_add_boolean</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;__call&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1afd5580acc2cb0c0eeaf0644bac06f99e" kindref="member">SWIG_Lua_add_boolean</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;__tostring&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1afd5580acc2cb0c0eeaf0644bac06f99e" kindref="member">SWIG_Lua_add_boolean</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;__gc&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="2079"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>creates<sp/>the<sp/>swig<sp/>registry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2082" refid="swig__runtime_8h_1ace2a621c1ad2f0c94f5bbf96cff871a2" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1ace2a621c1ad2f0c94f5bbf96cff871a2" kindref="member">SWIG_Lua_create_class_registry</ref>(lua_State<sp/>*L)</highlight></codeline>
<codeline lineno="2083"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>main<sp/>SWIG<sp/>registry<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/></highlight><highlight class="stringliteral">&quot;SWIG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/>lua_newtable(L);</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>populate<sp/>it<sp/>with<sp/>some<sp/>predefined<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2088"><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>.library<sp/>table.<sp/>Placeholder<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/></highlight><highlight class="stringliteral">&quot;.library&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/>lua_newtable(L);</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>list<sp/>of<sp/>metamethods<sp/>that<sp/>class<sp/>inherits<sp/>from<sp/>its<sp/>bases<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/>lua_pushstring(L,<sp/></highlight><highlight class="stringliteral">&quot;inheritable_metamethods&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/>lua_newtable(L);</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>populate<sp/>with<sp/>list<sp/>of<sp/>metamethods<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a5a21c7c1eaf4626aa084fd8a3110498e" kindref="member">SWIG_Lua_populate_inheritable_metamethods</ref>(L);</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/>lua_rawset(L,<sp/>-3);</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/>lua_rawset(L,<sp/>-3);</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/>lua_rawset(L,<sp/>LUA_REGISTRYINDEX);</highlight></codeline>
<codeline lineno="2103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>gets<sp/>the<sp/>swig<sp/>registry<sp/>(or<sp/>creates<sp/>it)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2106" refid="swig__runtime_8h_1a882b457b337f778c6925c77b59cbae79" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a882b457b337f778c6925c77b59cbae79" kindref="member">SWIG_Lua_get_class_registry</ref>(lua_State<sp/>*L)</highlight></codeline>
<codeline lineno="2107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>this<sp/>all<sp/>into<sp/>the<sp/>swig<sp/>registry:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/></highlight><highlight class="stringliteral">&quot;SWIG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/>lua_rawget(L,<sp/>LUA_REGISTRYINDEX);<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>registry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lua_istable(L,<sp/>-1))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>there<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>must<sp/>be<sp/>first<sp/>time,<sp/>so<sp/>add<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>the<sp/>result<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1ace2a621c1ad2f0c94f5bbf96cff871a2" kindref="member">SWIG_Lua_create_class_registry</ref>(L);</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>then<sp/>get<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushstring(L,<sp/></highlight><highlight class="stringliteral">&quot;SWIG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_rawget(L,<sp/>LUA_REGISTRYINDEX);</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"></highlight></codeline>
<codeline lineno="2121" refid="swig__runtime_8h_1a787cb072f40cbd1801240c0c84226cb0" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a787cb072f40cbd1801240c0c84226cb0" kindref="member">SWIG_Lua_get_inheritable_metamethods</ref>(lua_State<sp/>*L)</highlight></codeline>
<codeline lineno="2122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a882b457b337f778c6925c77b59cbae79" kindref="member">SWIG_Lua_get_class_registry</ref>(L);</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/></highlight><highlight class="stringliteral">&quot;.library&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/>lua_rawget(L,<sp/>-2);</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/>assert(!lua_isnil(L,<sp/>-1));</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/></highlight><highlight class="stringliteral">&quot;inheritable_metamethods&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/>lua_rawget(L,<sp/>-2);</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remove<sp/>class<sp/>registry<sp/>and<sp/>library<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/>lua_remove(L,<sp/>-2);</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/>lua_remove(L,<sp/>-2);</highlight></codeline>
<codeline lineno="2133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Helper<sp/>function<sp/>to<sp/>get<sp/>the<sp/>classes<sp/>metatable<sp/>from<sp/>the<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2136" refid="swig__runtime_8h_1af93e8f0a3beec1aefa768abb89fe7485" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1af93e8f0a3beec1aefa768abb89fe7485" kindref="member">SWIG_Lua_get_class_metatable</ref>(lua_State<sp/>*L,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cname)</highlight></codeline>
<codeline lineno="2137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a882b457b337f778c6925c77b59cbae79" kindref="member">SWIG_Lua_get_class_registry</ref>(L);<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>registry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/>cname);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/>lua_rawget(L,<sp/>-2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/>lua_remove(L,<sp/>-2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>tidy<sp/>up<sp/>(remove<sp/>registry)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>the<sp/>base<sp/>classes<sp/>pointers.</highlight></codeline>
<codeline lineno="2145"><highlight class="comment">Each<sp/>class<sp/>structure<sp/>has<sp/>a<sp/>list<sp/>of<sp/>pointers<sp/>to<sp/>the<sp/>base<sp/>class<sp/>structures.</highlight></codeline>
<codeline lineno="2146"><highlight class="comment">This<sp/>function<sp/>fills<sp/>them.</highlight></codeline>
<codeline lineno="2147"><highlight class="comment">It<sp/>cannot<sp/>be<sp/>done<sp/>at<sp/>compile<sp/>time,<sp/>as<sp/>this<sp/>will<sp/>not<sp/>work<sp/>with<sp/>hireachies</highlight></codeline>
<codeline lineno="2148"><highlight class="comment">spread<sp/>over<sp/>more<sp/>than<sp/>one<sp/>swig<sp/>file.</highlight></codeline>
<codeline lineno="2149"><highlight class="comment">Therefore<sp/>it<sp/>must<sp/>be<sp/>done<sp/>at<sp/>runtime,<sp/>querying<sp/>the<sp/>SWIG<sp/>type<sp/>system.</highlight></codeline>
<codeline lineno="2150"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2151" refid="swig__runtime_8h_1ac765a0526209ac87f7e209669ce959d0" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1ac765a0526209ac87f7e209669ce959d0" kindref="member">SWIG_Lua_init_base_class</ref>(lua_State<sp/>*L,<sp/><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>*clss)</highlight></codeline>
<codeline lineno="2152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><ref refid="structswig__module__info" kindref="compound">swig_module_info</ref><sp/>*module<sp/>=<sp/><ref refid="swig__runtime_8h_1ab97db3bbfc9e3a73de01e1ee95fa0bb5" kindref="member">SWIG_GetModule</ref>(L);</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>clss-&gt;<ref refid="structswig__lua__class_1a25f24829385c30c59cec92c91fceca23" kindref="member">base_names</ref>[i];<sp/>i++)</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clss-&gt;<ref refid="structswig__lua__class_1a468e2d019d6cff6bbe8fefc8f572420b" kindref="member">bases</ref>[i]<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>found<sp/>yet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>lookup<sp/>and<sp/>cache<sp/>the<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*info<sp/>=</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a5b6a2719f95288678fa55ade4493b175" kindref="member">SWIG_TypeQueryModule</ref>(module,<sp/>module,<sp/>clss-&gt;<ref refid="structswig__lua__class_1a25f24829385c30c59cec92c91fceca23" kindref="member">base_names</ref>[i]);</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info)</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clss-&gt;<ref refid="structswig__lua__class_1a468e2d019d6cff6bbe8fefc8f572420b" kindref="member">bases</ref>[i]<sp/>=<sp/>(<ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>*)info-&gt;<ref refid="structswig__type__info_1a19bdd65dceb89cd54befd3ded06558b7" kindref="member">clientdata</ref>;</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SWIG_LUA_SQUASH_BASES)<sp/>&amp;&amp;<sp/>(SWIG_LUA_TARGET<sp/>==<sp/>SWIG_LUA_FLAVOR_LUA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Merges<sp/>two<sp/>tables<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SWIG_Lua_merge_tables_by_index(lua_State<sp/>*L,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>target,</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source)</highlight></codeline>
<codeline lineno="2172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>iterating<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/>lua_pushnil(L);</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(lua_next(L,<sp/>source)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>-1<sp/>-<sp/>value,<sp/>-2<sp/>-<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>have<sp/>to<sp/>copy<sp/>to<sp/>assign<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>-2);<sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>of<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>-2);<sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>of<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_rawset(L,<sp/>target);</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>1);</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>only<sp/>key<sp/>is<sp/>left<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Merges<sp/>two<sp/>tables<sp/>with<sp/>given<sp/>name.<sp/>original<sp/>-<sp/>index<sp/>of<sp/>target<sp/>metatable,<sp/>base</highlight></codeline>
<codeline lineno="2188"><highlight class="comment"><sp/>*<sp/>-<sp/>index<sp/>of<sp/>source<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SWIG_Lua_merge_tables(lua_State<sp/>*L,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structswig__lua__class_1abefc5d1a37e06e1c9305d3456a59f2d0" kindref="member">name</ref>,</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>original,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base)</highlight></codeline>
<codeline lineno="2191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>push<sp/>original[name],<sp/>then<sp/>base[name]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/><ref refid="structswig__lua__class_1abefc5d1a37e06e1c9305d3456a59f2d0" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/>lua_rawget(L,<sp/>original);</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>original_table<sp/>=<sp/>lua_gettop(L);</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/><ref refid="structswig__lua__class_1abefc5d1a37e06e1c9305d3456a59f2d0" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/>lua_rawget(L,<sp/>base);</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base_table<sp/>=<sp/>lua_gettop(L);</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/>SWIG_Lua_merge_tables_by_index(L,<sp/>original_table,<sp/>base_table);</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>clearing<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>2);</highlight></codeline>
<codeline lineno="2202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>takes<sp/>all<sp/>symbols<sp/>from<sp/>base<sp/>and<sp/>adds<sp/>it<sp/>to<sp/>derived<sp/>class.<sp/>It&apos;s<sp/>just</highlight></codeline>
<codeline lineno="2205"><highlight class="comment"><sp/>*<sp/>a<sp/>helper.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SWIG_Lua_class_squash_base(lua_State<sp/>*L,</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>*base_cls)</highlight></codeline>
<codeline lineno="2208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>There<sp/>is<sp/>one<sp/>parameter<sp/>-<sp/>original,<sp/>i.e.<sp/>&apos;derived&apos;<sp/>class<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>original<sp/>=<sp/>lua_gettop(L);</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1af93e8f0a3beec1aefa768abb89fe7485" kindref="member">SWIG_Lua_get_class_metatable</ref>(L,<sp/>base_cls-&gt;<ref refid="structswig__lua__class_1a3c6469ebd6d312208ff380f8e8eff165" kindref="member">fqname</ref>);</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base<sp/>=<sp/>lua_gettop(L);</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/>SWIG_Lua_merge_tables(L,<sp/></highlight><highlight class="stringliteral">&quot;.fn&quot;</highlight><highlight class="normal">,<sp/>original,<sp/>base);</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/>SWIG_Lua_merge_tables(L,<sp/></highlight><highlight class="stringliteral">&quot;.set&quot;</highlight><highlight class="normal">,<sp/>original,<sp/>base);</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/>SWIG_Lua_merge_tables(L,<sp/></highlight><highlight class="stringliteral">&quot;.get&quot;</highlight><highlight class="normal">,<sp/>original,<sp/>base);</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);</highlight></codeline>
<codeline lineno="2218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>squashes<sp/>all<sp/>symbols<sp/>from<sp/>&apos;clss&apos;<sp/>bases<sp/>into<sp/>itself<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SWIG_Lua_class_squash_bases(lua_State<sp/>*L,<sp/><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>*clss)</highlight></codeline>
<codeline lineno="2222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1af93e8f0a3beec1aefa768abb89fe7485" kindref="member">SWIG_Lua_get_class_metatable</ref>(L,<sp/>clss-&gt;<ref refid="structswig__lua__class_1a3c6469ebd6d312208ff380f8e8eff165" kindref="member">fqname</ref>);</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>clss-&gt;<ref refid="structswig__lua__class_1a25f24829385c30c59cec92c91fceca23" kindref="member">base_names</ref>[i];<sp/>i++)</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clss-&gt;<ref refid="structswig__lua__class_1a468e2d019d6cff6bbe8fefc8f572420b" kindref="member">bases</ref>[i]<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>Somehow<sp/>it&apos;s<sp/>not<sp/>found.<sp/>Skip<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Thing<sp/>is:<sp/>all<sp/>bases<sp/>are<sp/>already<sp/>registered.<sp/>Thus<sp/>they<sp/>have<sp/>already</highlight></codeline>
<codeline lineno="2230"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>executed</highlight></codeline>
<codeline lineno="2231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>this<sp/>function.<sp/>So<sp/>we<sp/>just<sp/>need<sp/>to<sp/>squash<sp/>them<sp/>into<sp/>us,<sp/>because<sp/>their</highlight></codeline>
<codeline lineno="2232"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>bases</highlight></codeline>
<codeline lineno="2233"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>are<sp/>already<sp/>squashed<sp/>into<sp/>them.<sp/>No<sp/>need<sp/>for<sp/>recursion<sp/>here!</highlight></codeline>
<codeline lineno="2234"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SWIG_Lua_class_squash_base(L,<sp/>clss-&gt;<ref refid="structswig__lua__class_1a468e2d019d6cff6bbe8fefc8f572420b" kindref="member">bases</ref>[i]);</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*tidy<sp/>stack*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2240"><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(SWIG_LUA_TARGET<sp/>==<sp/>SWIG_LUA_FLAVOR_LUA)<sp/></highlight><highlight class="comment">/*<sp/>In<sp/>elua<sp/>this<sp/>is<sp/>useless<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>helper<sp/>add<sp/>a<sp/>variable<sp/>to<sp/>a<sp/>registered<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2243" refid="swig__runtime_8h_1a7d4fb4ca1944b99a7ac54467d8a11866" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a7d4fb4ca1944b99a7ac54467d8a11866" kindref="member">SWIG_Lua_add_variable</ref>(lua_State<sp/>*L,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structswig__lua__class_1abefc5d1a37e06e1c9305d3456a59f2d0" kindref="member">name</ref>,</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_CFunction<sp/>getFn,<sp/>lua_CFunction<sp/>setFn)</highlight></codeline>
<codeline lineno="2245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a45e06ea798b759df9853467b13abcdfc" kindref="member">SWIG_Lua_get_table</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;.get&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>find<sp/>the<sp/>.get<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a4e0088e1d53848f80738e5a49f1c0cf3" kindref="member">SWIG_Lua_add_function</ref>(L,<sp/><ref refid="structswig__lua__class_1abefc5d1a37e06e1c9305d3456a59f2d0" kindref="member">name</ref>,<sp/>getFn);</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>tidy<sp/>stack<sp/>(remove<sp/>table)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setFn)</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a45e06ea798b759df9853467b13abcdfc" kindref="member">SWIG_Lua_get_table</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;.set&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>find<sp/>the<sp/>.set<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(lua_istable(L,<sp/>-1));<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a4e0088e1d53848f80738e5a49f1c0cf3" kindref="member">SWIG_Lua_add_function</ref>(L,<sp/><ref refid="structswig__lua__class_1abefc5d1a37e06e1c9305d3456a59f2d0" kindref="member">name</ref>,<sp/>setFn);</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>tidy<sp/>stack<sp/>(remove<sp/>table)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"></highlight></codeline>
<codeline lineno="2260"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>helper<sp/>to<sp/>recursively<sp/>add<sp/>class<sp/>static<sp/>details<sp/>(static<sp/>attributes,<sp/>operations</highlight></codeline>
<codeline lineno="2261"><highlight class="comment"><sp/>*<sp/>and<sp/>constants)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2262" refid="swig__runtime_8h_1a893afdb43641c6f2a334bc28b2bc5d90" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a893afdb43641c6f2a334bc28b2bc5d90" kindref="member">SWIG_Lua_add_class_static_details</ref>(lua_State<sp/>*L,</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>*clss)</highlight></codeline>
<codeline lineno="2264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>class<sp/>namespace<sp/>table<sp/>must<sp/>be<sp/>on<sp/>the<sp/>top<sp/>of<sp/>the<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>call<sp/>all<sp/>the<sp/>base<sp/>classes<sp/>first:<sp/>we<sp/>can<sp/>then<sp/>override<sp/>these<sp/>later:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>clss-&gt;<ref refid="structswig__lua__class_1a468e2d019d6cff6bbe8fefc8f572420b" kindref="member">bases</ref>[i];<sp/>i++)</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a893afdb43641c6f2a334bc28b2bc5d90" kindref="member">SWIG_Lua_add_class_static_details</ref>(L,<sp/>clss-&gt;<ref refid="structswig__lua__class_1a468e2d019d6cff6bbe8fefc8f572420b" kindref="member">bases</ref>[i]);</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"></highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a9ee5ba0a0bf072010a447d4b2f98d545" kindref="member">SWIG_Lua_add_namespace_details</ref>(L,<sp/>clss-&gt;<ref refid="structswig__lua__class_1a41b17587e0b26e2112200adfffb22730" kindref="member">cls_static</ref>);</highlight></codeline>
<codeline lineno="2275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a21c9d5d2b378d7fdd5aada2924df05ba" kindref="member">SWIG_Lua_add_class_user_metamethods</ref>(</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/>lua_State<sp/>*L,<sp/><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>*clss);<sp/></highlight><highlight class="comment">/*<sp/>forward<sp/>declaration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2279"><highlight class="normal"></highlight></codeline>
<codeline lineno="2280"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>helper<sp/>to<sp/>recursively<sp/>add<sp/>class<sp/>details<sp/>(attributes<sp/>&amp;<sp/>operations)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2281" refid="swig__runtime_8h_1afbf47dea1fc0e472f8599c32b6b1ea29" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1afbf47dea1fc0e472f8599c32b6b1ea29" kindref="member">SWIG_Lua_add_class_instance_details</ref>(lua_State<sp/>*L,</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>*clss)</highlight></codeline>
<codeline lineno="2283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bases_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>bases<sp/>to<sp/>.bases<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a45e06ea798b759df9853467b13abcdfc" kindref="member">SWIG_Lua_get_table</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;.bases&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));<sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>clss-&gt;<ref refid="structswig__lua__class_1a468e2d019d6cff6bbe8fefc8f572420b" kindref="member">bases</ref>[i];<sp/>i++)</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1af93e8f0a3beec1aefa768abb89fe7485" kindref="member">SWIG_Lua_get_class_metatable</ref>(L,<sp/>clss-&gt;<ref refid="structswig__lua__class_1a468e2d019d6cff6bbe8fefc8f572420b" kindref="member">bases</ref>[i]-&gt;<ref refid="structswig__lua__class_1a3c6469ebd6d312208ff380f8e8eff165" kindref="member">fqname</ref>);</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Base<sp/>class<sp/>must<sp/>be<sp/>already<sp/>registered<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(lua_istable(L,<sp/>-1));</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_rawseti(L,<sp/>-2,<sp/>i<sp/>+<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>In<sp/>lua<sp/>indexing<sp/>starts<sp/>from<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bases_count++;</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/>assert(<ref refid="swig__runtime_8h_1a0a129d773aae7e71b7c30370cd3c3dd9" kindref="member">lua_rawlen</ref>(L,<sp/>-1)<sp/>==<sp/>bases_count);</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>.bases<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>attributes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>clss-&gt;<ref refid="structswig__lua__class_1a3061adc91d7cb1a16967927e8d4a7261" kindref="member">attributes</ref>[i].<ref refid="structswig__lua__attribute_1a693d9481784dfd89e0d9ed3aadf51b04" kindref="member">name</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a7d4fb4ca1944b99a7ac54467d8a11866" kindref="member">SWIG_Lua_add_variable</ref>(L,<sp/>clss-&gt;<ref refid="structswig__lua__class_1a3061adc91d7cb1a16967927e8d4a7261" kindref="member">attributes</ref>[i].<ref refid="structswig__lua__attribute_1a693d9481784dfd89e0d9ed3aadf51b04" kindref="member">name</ref>,</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clss-&gt;<ref refid="structswig__lua__class_1a3061adc91d7cb1a16967927e8d4a7261" kindref="member">attributes</ref>[i].<ref refid="structswig__lua__attribute_1ab18a92c81433b7b3de23856cda4b89b5" kindref="member">getmethod</ref>,</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clss-&gt;<ref refid="structswig__lua__class_1a3061adc91d7cb1a16967927e8d4a7261" kindref="member">attributes</ref>[i].<ref refid="structswig__lua__attribute_1a0b88e38d5417453e7718f7090b797b06" kindref="member">setmethod</ref>);</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>methods<sp/>to<sp/>the<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a45e06ea798b759df9853467b13abcdfc" kindref="member">SWIG_Lua_get_table</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;.fn&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>find<sp/>the<sp/>.fn<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>clss-&gt;<ref refid="structswig__lua__class_1ae0d9f30a8114623b1185b5907fc60719" kindref="member">methods</ref>[i].name;<sp/>i++)</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a4e0088e1d53848f80738e5a49f1c0cf3" kindref="member">SWIG_Lua_add_function</ref>(L,<sp/>clss-&gt;<ref refid="structswig__lua__class_1ae0d9f30a8114623b1185b5907fc60719" kindref="member">methods</ref>[i].name,<sp/>clss-&gt;<ref refid="structswig__lua__class_1ae0d9f30a8114623b1185b5907fc60719" kindref="member">methods</ref>[i].func);</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>tidy<sp/>stack<sp/>(remove<sp/>table)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>operator<sp/>overloads</highlight></codeline>
<codeline lineno="2315"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>adds<sp/>methods<sp/>from<sp/>metatable<sp/>array<sp/>to<sp/>metatable.<sp/>Can<sp/>mess<sp/>up<sp/>garbage</highlight></codeline>
<codeline lineno="2316"><highlight class="comment"><sp/><sp/><sp/><sp/>collectind<sp/>if<sp/>someone<sp/>defines<sp/>__gc<sp/>method</highlight></codeline>
<codeline lineno="2317"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clss-&gt;<ref refid="structswig__lua__class_1a7c56e45895444992b6a42c60ba6a17e5" kindref="member">metatable</ref>)</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>clss-&gt;<ref refid="structswig__lua__class_1a7c56e45895444992b6a42c60ba6a17e5" kindref="member">metatable</ref>[i].name;<sp/>i++)</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a4e0088e1d53848f80738e5a49f1c0cf3" kindref="member">SWIG_Lua_add_function</ref>(L,<sp/>clss-&gt;<ref refid="structswig__lua__class_1a7c56e45895444992b6a42c60ba6a17e5" kindref="member">metatable</ref>[i].name,</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clss-&gt;<ref refid="structswig__lua__class_1a7c56e45895444992b6a42c60ba6a17e5" kindref="member">metatable</ref>[i].func);</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(SWIG_LUA_SQUASH_BASES)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Adding<sp/>metamethods<sp/>that<sp/>are<sp/>defined<sp/>in<sp/>base<sp/>classes.<sp/>If<sp/>bases<sp/>were<sp/>squashed</highlight></codeline>
<codeline lineno="2329"><highlight class="comment"><sp/><sp/><sp/>*<sp/>then<sp/>it<sp/>is<sp/>obviously<sp/>unnecessary</highlight></codeline>
<codeline lineno="2330"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a21c9d5d2b378d7fdd5aada2924df05ba" kindref="member">SWIG_Lua_add_class_user_metamethods</ref>(L,<sp/>clss);</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Helpers<sp/>to<sp/>add<sp/>user<sp/>defined<sp/>class<sp/>metamedhods<sp/>-<sp/>__add,<sp/>__sub<sp/>etc.<sp/>The<sp/>helpers</highlight></codeline>
<codeline lineno="2336"><highlight class="comment"><sp/><sp/><sp/>are<sp/>needed</highlight></codeline>
<codeline lineno="2337"><highlight class="comment"><sp/><sp/><sp/>for<sp/>the<sp/>following<sp/>issue:<sp/>Lua<sp/>runtime<sp/>checks<sp/>for<sp/>metamethod<sp/>existence<sp/>with</highlight></codeline>
<codeline lineno="2338"><highlight class="comment"><sp/><sp/><sp/>rawget<sp/>function</highlight></codeline>
<codeline lineno="2339"><highlight class="comment"><sp/><sp/><sp/>ignoring<sp/>our<sp/>SWIG-provided<sp/>__index<sp/>and<sp/>__newindex<sp/>functions.<sp/>Thus<sp/>our</highlight></codeline>
<codeline lineno="2340"><highlight class="comment"><sp/><sp/><sp/>inheritance-aware<sp/>method</highlight></codeline>
<codeline lineno="2341"><highlight class="comment"><sp/><sp/><sp/>search<sp/>algorithm<sp/>doesn&apos;t<sp/>work<sp/>in<sp/>such<sp/>case.<sp/>(Not<sp/>to<sp/>say<sp/>that<sp/>Lua<sp/>runtime</highlight></codeline>
<codeline lineno="2342"><highlight class="comment"><sp/><sp/><sp/>queries<sp/>metamethod<sp/>directly</highlight></codeline>
<codeline lineno="2343"><highlight class="comment"><sp/><sp/><sp/>in<sp/>metatable<sp/>and<sp/>not<sp/>in<sp/>object).</highlight></codeline>
<codeline lineno="2344"><highlight class="comment"><sp/><sp/><sp/>Current<sp/>solution<sp/>is<sp/>this:<sp/>if<sp/>somewhere<sp/>in<sp/>hierarchy<sp/>metamethod<sp/>__x<sp/>is</highlight></codeline>
<codeline lineno="2345"><highlight class="comment"><sp/><sp/><sp/>defined,<sp/>then<sp/>all<sp/>descendants</highlight></codeline>
<codeline lineno="2346"><highlight class="comment"><sp/><sp/><sp/>are<sp/>automatically<sp/>given<sp/>a<sp/>special<sp/>proxy<sp/>__x<sp/>that<sp/>calls<sp/>the<sp/>real<sp/>__x<sp/>method.</highlight></codeline>
<codeline lineno="2347"><highlight class="comment"><sp/><sp/><sp/>Obvious<sp/>idea<sp/>-<sp/>to<sp/>copy<sp/>__x<sp/>instead<sp/>of<sp/>creating<sp/>__x-proxy<sp/>is<sp/>wrong<sp/>because<sp/>if</highlight></codeline>
<codeline lineno="2348"><highlight class="comment"><sp/><sp/><sp/>someone<sp/>changes<sp/>__x<sp/>in<sp/>runtime,</highlight></codeline>
<codeline lineno="2349"><highlight class="comment"><sp/><sp/><sp/>those<sp/>changes<sp/>must<sp/>be<sp/>reflected<sp/>in<sp/>all<sp/>descendants.</highlight></codeline>
<codeline lineno="2350"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"></highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><ref refid="swig__runtime_8h_1a19b76c2a9ea81187953f48fbfbf5d4ac" kindref="member">SWIG_Lua_resolve_metamethod</ref>(lua_State<sp/>*L);<sp/></highlight><highlight class="comment">/*forward<sp/>declaration*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"></highlight></codeline>
<codeline lineno="2355"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>real<sp/>function<sp/>that<sp/>resolves<sp/>a<sp/>metamethod.</highlight></codeline>
<codeline lineno="2356"><highlight class="comment"><sp/>*<sp/>Function<sp/>searches<sp/>given<sp/>class<sp/>and<sp/>all<sp/>it&apos;s<sp/>bases(recursively)<sp/>for<sp/>first</highlight></codeline>
<codeline lineno="2357"><highlight class="comment"><sp/>*<sp/>instance<sp/>of<sp/>something<sp/>that<sp/>is</highlight></codeline>
<codeline lineno="2358"><highlight class="comment"><sp/>*<sp/>not<sp/>equal<sp/>to<sp/>SWIG_Lua_resolve_metatmethod.<sp/>(Almost<sp/>always<sp/>this<sp/>&apos;something&apos;<sp/>is</highlight></codeline>
<codeline lineno="2359"><highlight class="comment"><sp/>*<sp/>actual<sp/>metamethod<sp/>implementation</highlight></codeline>
<codeline lineno="2360"><highlight class="comment"><sp/>*<sp/>and<sp/>it<sp/>is<sp/>a<sp/>SWIG-generated<sp/>C<sp/>function.).<sp/>It<sp/>returns<sp/>value<sp/>on<sp/>the<sp/>top<sp/>of<sp/>the<sp/>L</highlight></codeline>
<codeline lineno="2361"><highlight class="comment"><sp/>*<sp/>and<sp/>there<sp/>is<sp/>no<sp/>garbage<sp/>below<sp/>the</highlight></codeline>
<codeline lineno="2362"><highlight class="comment"><sp/>*<sp/>answer.</highlight></codeline>
<codeline lineno="2363"><highlight class="comment"><sp/>*<sp/>Returns<sp/>1<sp/>if<sp/>found,<sp/>0<sp/>otherwise.</highlight></codeline>
<codeline lineno="2364"><highlight class="comment"><sp/>*<sp/>clss<sp/>is<sp/>class<sp/>which<sp/>metatable<sp/>we<sp/>will<sp/>search<sp/>for<sp/>method</highlight></codeline>
<codeline lineno="2365"><highlight class="comment"><sp/>*<sp/>metamethod_name_idx<sp/>is<sp/>index<sp/>in<sp/>L<sp/>where<sp/>metamethod<sp/>name<sp/>(as<sp/>string)<sp/>lies</highlight></codeline>
<codeline lineno="2366"><highlight class="comment"><sp/>*<sp/>skip_check<sp/>allows<sp/>to<sp/>skip<sp/>searching<sp/>metamethod<sp/>in<sp/>givel<sp/>clss<sp/>and<sp/>immideatelly</highlight></codeline>
<codeline lineno="2367"><highlight class="comment"><sp/>*<sp/>go<sp/>to<sp/>searching<sp/>in<sp/>bases.<sp/>skip_check</highlight></codeline>
<codeline lineno="2368"><highlight class="comment"><sp/>*<sp/>is<sp/>not<sp/>caried<sp/>to<sp/>subsequent<sp/>recursive<sp/>calls<sp/>-<sp/>false<sp/>is<sp/>always<sp/>passed.<sp/>It<sp/>is</highlight></codeline>
<codeline lineno="2369"><highlight class="comment"><sp/>*<sp/>set<sp/>to<sp/>true<sp/>only<sp/>at<sp/>first<sp/>call<sp/>from</highlight></codeline>
<codeline lineno="2370"><highlight class="comment"><sp/>*<sp/>SWIG_Lua_resolve_metamethod</highlight></codeline>
<codeline lineno="2371"><highlight class="comment"><sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2372" refid="swig__runtime_8h_1a147dffa5775be5d916031e37e068d187" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a147dffa5775be5d916031e37e068d187" kindref="member">SWIG_Lua_do_resolve_metamethod</ref>(lua_State<sp/>*L,</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>*clss,</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>metamethod_name_idx,</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>skip_check)</highlight></codeline>
<codeline lineno="2376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>is<sp/>called<sp/>recursively<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"></highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!skip_check)</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1af93e8f0a3beec1aefa768abb89fe7485" kindref="member">SWIG_Lua_get_class_metatable</ref>(L,<sp/>clss-&gt;<ref refid="structswig__lua__class_1a3c6469ebd6d312208ff380f8e8eff165" kindref="member">fqname</ref>);</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>metamethod_name_idx);</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_rawget(L,<sp/>-2);</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>cfunction<sp/>and<sp/>it<sp/>is<sp/>equal<sp/>to<sp/>SWIG_Lua_resolve_metamethod</highlight></codeline>
<codeline lineno="2387"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>then</highlight></codeline>
<codeline lineno="2388"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>this<sp/>isn&apos;t<sp/>the<sp/>function<sp/>we<sp/>are<sp/>looking<sp/>for<sp/>:)</highlight></codeline>
<codeline lineno="2389"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>lua_tocfunction<sp/>will<sp/>return<sp/>NULL<sp/>if<sp/>not<sp/>cfunction</highlight></codeline>
<codeline lineno="2390"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lua_isnil(L,<sp/>-1)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_tocfunction(L,<sp/>-1)<sp/>!=<sp/><ref refid="swig__runtime_8h_1a19b76c2a9ea81187953f48fbfbf5d4ac" kindref="member">SWIG_Lua_resolve_metamethod</ref>)</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_remove(L,<sp/>-2);<sp/></highlight><highlight class="comment">/*<sp/>removing<sp/>class<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>2);<sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>class<sp/>metatable<sp/>and<sp/>query<sp/>result<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"></highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Forwarding<sp/>calls<sp/>to<sp/>bases<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>clss-&gt;<ref refid="structswig__lua__class_1a468e2d019d6cff6bbe8fefc8f572420b" kindref="member">bases</ref>[i];<sp/>i++)</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="swig__runtime_8h_1a147dffa5775be5d916031e37e068d187" kindref="member">SWIG_Lua_do_resolve_metamethod</ref>(L,<sp/>clss-&gt;<ref refid="structswig__lua__class_1a468e2d019d6cff6bbe8fefc8f572420b" kindref="member">bases</ref>[i],</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metamethod_name_idx,<sp/>0);</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result)</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"></highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"></highlight></codeline>
<codeline lineno="2412"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>proxy<sp/>function<sp/>for<sp/>metamethod.<sp/>All<sp/>parameters<sp/>are<sp/>passed<sp/>as<sp/>cclosure.</highlight></codeline>
<codeline lineno="2413"><highlight class="comment"><sp/>*<sp/>Searches<sp/>for<sp/>actual<sp/>method</highlight></codeline>
<codeline lineno="2414"><highlight class="comment"><sp/>*<sp/>and<sp/>calls<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2415" refid="swig__runtime_8h_1a19b76c2a9ea81187953f48fbfbf5d4ac" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a19b76c2a9ea81187953f48fbfbf5d4ac" kindref="member">SWIG_Lua_resolve_metamethod</ref>(lua_State<sp/>*L)</highlight></codeline>
<codeline lineno="2416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numargs;</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>metamethod_name_idx;</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>*clss;</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"></highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/>lua_checkstack(L,<sp/>5);</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/>numargs<sp/>=</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_gettop(L);<sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>arguments<sp/>to<sp/>pass<sp/>to<sp/>actual<sp/>metamethod<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>upvalues<sp/>from<sp/>closure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/>lua_pushvalue(L,<sp/>lua_upvalueindex(1));<sp/></highlight><highlight class="comment">/*Get<sp/>function<sp/>name*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/>metamethod_name_idx<sp/>=<sp/>lua_gettop(L);</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"></highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/>lua_pushvalue(L,<sp/>lua_upvalueindex(2));</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/>clss<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>*)(lua_touserdata(L,<sp/>-1));</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>lightuserdata<sp/>with<sp/>clss<sp/>from<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"></highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Actual<sp/>work<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/><ref refid="swig__runtime_8h_1a147dffa5775be5d916031e37e068d187" kindref="member">SWIG_Lua_do_resolve_metamethod</ref>(L,<sp/>clss,<sp/>metamethod_name_idx,<sp/>1);</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result)</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1ad4708a823127d389179291ebcace732d" kindref="member">SWIG_Lua_pushferrstring</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>metamethod<sp/>proxy<sp/>is<sp/>set,<sp/>but<sp/>it<sp/>failed<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;to<sp/>find<sp/>actual<sp/>metamethod.<sp/>Memory<sp/>corruption<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;is<sp/>most<sp/>likely<sp/>explanation.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_error(L);</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"></highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/>lua_remove(L,<sp/>-2);<sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>metamethod<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/>lua_insert(L,<sp/>1);<sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>function<sp/>to<sp/>correct<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/>lua_call(L,<sp/>numargs,<sp/>LUA_MULTRET);</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lua_gettop(L);<sp/></highlight><highlight class="comment">/*<sp/>return<sp/>all<sp/>results<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"></highlight></codeline>
<codeline lineno="2451"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>given<sp/>metamethod<sp/>must<sp/>be<sp/>present<sp/>in<sp/>given<sp/>class,<sp/>then<sp/>creates<sp/>appropriate</highlight></codeline>
<codeline lineno="2452"><highlight class="comment"><sp/>*<sp/>proxy</highlight></codeline>
<codeline lineno="2453"><highlight class="comment"><sp/>*<sp/>Returns<sp/>1<sp/>if<sp/>successfully<sp/>added,<sp/>0<sp/>if<sp/>not<sp/>added<sp/>because<sp/>no<sp/>base<sp/>class<sp/>has<sp/>it,</highlight></codeline>
<codeline lineno="2454"><highlight class="comment"><sp/>*<sp/>-1</highlight></codeline>
<codeline lineno="2455"><highlight class="comment"><sp/>*<sp/>if<sp/>method<sp/>is<sp/>defined<sp/>in<sp/>the<sp/>class<sp/>metatable<sp/>itself</highlight></codeline>
<codeline lineno="2456"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2457" refid="swig__runtime_8h_1a57ec001b1cd68ba7e26ded840d06363d" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a57ec001b1cd68ba7e26ded840d06363d" kindref="member">SWIG_Lua_add_class_user_metamethod</ref>(lua_State<sp/>*L,</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>*clss,</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>metatable_index)</highlight></codeline>
<codeline lineno="2460"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key_index;</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>success<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"></highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>metamethod<sp/>name<sp/>-<sp/>on<sp/>the<sp/>top<sp/>of<sp/>the<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/>assert(lua_isstring(L,<sp/>-1));</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"></highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/>key_index<sp/>=<sp/>lua_gettop(L);</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"></highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>whether<sp/>method<sp/>is<sp/>already<sp/>defined<sp/>in<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/>lua_pushvalue(L,<sp/>key_index);<sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>of<sp/>the<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/>lua_gettable(L,<sp/>metatable_index);</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lua_isnil(L,<sp/>-1))</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>1);</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"></highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Iterating<sp/>over<sp/>immediate<sp/>bases<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>clss-&gt;<ref refid="structswig__lua__class_1a468e2d019d6cff6bbe8fefc8f572420b" kindref="member">bases</ref>[i];<sp/>i++)</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>*base<sp/>=<sp/>clss-&gt;<ref refid="structswig__lua__class_1a468e2d019d6cff6bbe8fefc8f572420b" kindref="member">bases</ref>[i];</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1af93e8f0a3beec1aefa768abb89fe7485" kindref="member">SWIG_Lua_get_class_metatable</ref>(L,<sp/>base-&gt;<ref refid="structswig__lua__class_1a3c6469ebd6d312208ff380f8e8eff165" kindref="member">fqname</ref>);</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>key_index);</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_rawget(L,<sp/>-2);</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lua_isnil(L,<sp/>-1))</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>key_index);</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>proxy<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key_index);<sp/></highlight><highlight class="comment">/*<sp/>first<sp/>closure<sp/>value<sp/>is<sp/>function<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushlightuserdata(</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,<sp/>clss);<sp/></highlight><highlight class="comment">/*<sp/>second<sp/>closure<sp/>value<sp/>is<sp/>swig_lua_class<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushcclosure(L,<sp/><ref refid="swig__runtime_8h_1a19b76c2a9ea81187953f48fbfbf5d4ac" kindref="member">SWIG_Lua_resolve_metamethod</ref>,<sp/>2);</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"></highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_rawset(L,<sp/>metatable_index);</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>function<sp/>or<sp/>nil<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>base<sp/>class<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2503"><highlight class="normal"></highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(success)</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"></highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="2509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"></highlight></codeline>
<codeline lineno="2511" refid="swig__runtime_8h_1a21c9d5d2b378d7fdd5aada2924df05ba" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a21c9d5d2b378d7fdd5aada2924df05ba" kindref="member">SWIG_Lua_add_class_user_metamethods</ref>(lua_State<sp/>*L,</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>*clss)</highlight></codeline>
<codeline lineno="2513"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>metatable_index;</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>metamethods_info_index;</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tostring_undefined;</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eq_undefined<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1af93e8f0a3beec1aefa768abb89fe7485" kindref="member">SWIG_Lua_get_class_metatable</ref>(L,<sp/>clss-&gt;<ref refid="structswig__lua__class_1a3c6469ebd6d312208ff380f8e8eff165" kindref="member">fqname</ref>);</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/>metatable_index<sp/>=<sp/>lua_gettop(L);</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a787cb072f40cbd1801240c0c84226cb0" kindref="member">SWIG_Lua_get_inheritable_metamethods</ref>(L);</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/>metamethods_info_index<sp/>=<sp/>lua_gettop(L);</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/>lua_pushnil(L);<sp/></highlight><highlight class="comment">/*<sp/>first<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(lua_next(L,<sp/>metamethods_info_index)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>key<sp/>at<sp/>index<sp/>-2,<sp/>value<sp/>at<sp/>index<sp/>-1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_inheritable<sp/>=<sp/>lua_toboolean(L,<sp/>-2);</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>value<sp/>-<sp/>we<sp/>don&apos;t<sp/>need<sp/>it<sp/>anymore<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"></highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_inheritable)</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>if<sp/>metamethod<sp/>is<sp/>inheritable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a57ec001b1cd68ba7e26ded840d06363d" kindref="member">SWIG_Lua_add_class_user_metamethod</ref>(L,<sp/>clss,<sp/>metatable_index);</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"></highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>inheritable<sp/>metatmethods<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2538"><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Special<sp/>handling<sp/>for<sp/>__tostring<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/></highlight><highlight class="stringliteral">&quot;__tostring&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/>lua_pushvalue(L,<sp/>-1);</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/>lua_rawget(L,<sp/>metatable_index);</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/>tostring_undefined<sp/>=<sp/>lua_isnil(L,<sp/>-1);</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tostring_undefined)</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushcfunction(L,<sp/><ref refid="swig__runtime_8h_1aeabb40f074f78d6ff46831b93e4750e1" kindref="member">SWIG_Lua_class_tostring</ref>);</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_rawset(L,<sp/>metatable_index);</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>copy<sp/>of<sp/>the<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"></highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Special<sp/>handling<sp/>for<sp/>__eq<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/></highlight><highlight class="stringliteral">&quot;__eq&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/>lua_pushvalue(L,<sp/>-1);</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/>lua_rawget(L,<sp/>metatable_index);</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/>eq_undefined<sp/>=<sp/>lua_isnil(L,<sp/>-1);</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eq_undefined)</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushcfunction(L,<sp/><ref refid="swig__runtime_8h_1a0063e5175fc7c3ee38480307c0d857f5" kindref="member">SWIG_Lua_class_equal</ref>);</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_rawset(L,<sp/>metatable_index);</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>copy<sp/>of<sp/>the<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Warning:<sp/>__index<sp/>and<sp/>__newindex<sp/>are<sp/>SWIG-defined.<sp/>For<sp/>user-defined</highlight></codeline>
<codeline lineno="2571"><highlight class="comment"><sp/><sp/><sp/>*<sp/>operator[]</highlight></codeline>
<codeline lineno="2572"><highlight class="comment"><sp/><sp/><sp/>*<sp/>a<sp/>__getitem/__setitem<sp/>method<sp/>should<sp/>be<sp/>defined</highlight></codeline>
<codeline lineno="2573"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>pop<sp/>class<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"></highlight></codeline>
<codeline lineno="2577"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Register<sp/>class<sp/>static<sp/>methods,attributes<sp/>etc<sp/>as<sp/>well<sp/>as<sp/>constructor<sp/>proxy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2578" refid="swig__runtime_8h_1a2451693ac83d6d677ab826b113491760" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a2451693ac83d6d677ab826b113491760" kindref="member">SWIG_Lua_class_register_static</ref>(lua_State<sp/>*L,</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>*clss)</highlight></codeline>
<codeline lineno="2580"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a6ee41cd160d397aa76668bf4db65e2d1" kindref="member">SWIGUNUSED</ref><sp/>begin<sp/>=<sp/>lua_gettop(L);</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/>lua_checkstack(L,<sp/>5);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));<sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/>assert(strcmp(clss-&gt;<ref refid="structswig__lua__class_1abefc5d1a37e06e1c9305d3456a59f2d0" kindref="member">name</ref>,<sp/>clss-&gt;<ref refid="structswig__lua__class_1a41b17587e0b26e2112200adfffb22730" kindref="member">cls_static</ref>-&gt;<ref refid="structswig__lua__namespace_1a5ac77da56177f2221e7b4383d08289ae" kindref="member">name</ref>)<sp/>==</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0);<sp/></highlight><highlight class="comment">/*<sp/>in<sp/>class<sp/>those<sp/>2<sp/>must<sp/>be<sp/>equal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2586"><highlight class="normal"></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a85ebfe3fdce248c83e2e3620dc6f330e" kindref="member">SWIG_Lua_namespace_register</ref>(L,<sp/>clss-&gt;<ref refid="structswig__lua__class_1a41b17587e0b26e2112200adfffb22730" kindref="member">cls_static</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"></highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));<sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2590"><highlight class="normal"></highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>add<sp/>its<sp/>constructor<sp/>to<sp/>module<sp/>with<sp/>the<sp/>name<sp/>of<sp/>the<sp/>class</highlight></codeline>
<codeline lineno="2592"><highlight class="comment"><sp/><sp/>so<sp/>you<sp/>can<sp/>do<sp/>MyClass(...)<sp/>as<sp/>well<sp/>as<sp/>new_MyClass(...)</highlight></codeline>
<codeline lineno="2593"><highlight class="comment"><sp/><sp/>BUT<sp/>only<sp/>if<sp/>a<sp/>constructor<sp/>is<sp/>defined</highlight></codeline>
<codeline lineno="2594"><highlight class="comment"><sp/><sp/>(this<sp/>overcomes<sp/>the<sp/>problem<sp/>of<sp/>pure<sp/>virtual<sp/>classes<sp/>without<sp/>constructors)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clss-&gt;<ref refid="structswig__lua__class_1aac6eb9dc9a5e0b5f2c9d31a97ce0282e" kindref="member">constructor</ref>)</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_getmetatable(L,<sp/>-1);</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(lua_istable(L,<sp/>-1));<sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a4e0088e1d53848f80738e5a49f1c0cf3" kindref="member">SWIG_Lua_add_function</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;__call&quot;</highlight><highlight class="normal">,<sp/>clss-&gt;<ref refid="structswig__lua__class_1aac6eb9dc9a5e0b5f2c9d31a97ce0282e" kindref="member">constructor</ref>);</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>1);</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"></highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));<sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a893afdb43641c6f2a334bc28b2bc5d90" kindref="member">SWIG_Lua_add_class_static_details</ref>(L,<sp/>clss);</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"></highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/>assert(lua_gettop(L)<sp/>==<sp/>begin);</highlight></codeline>
<codeline lineno="2609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Performs<sp/>the<sp/>instance<sp/>(non-static)<sp/>class<sp/>registration<sp/>process.<sp/>Metatable<sp/>for</highlight></codeline>
<codeline lineno="2612"><highlight class="comment"><sp/>*<sp/>class<sp/>is<sp/>created</highlight></codeline>
<codeline lineno="2613"><highlight class="comment"><sp/>*<sp/>and<sp/>added<sp/>to<sp/>the<sp/>class<sp/>registry.</highlight></codeline>
<codeline lineno="2614"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2615" refid="swig__runtime_8h_1aa8ec77fb7e1350b87d183a7708f5bdae" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1aa8ec77fb7e1350b87d183a7708f5bdae" kindref="member">SWIG_Lua_class_register_instance</ref>(lua_State<sp/>*L,</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>*clss)</highlight></codeline>
<codeline lineno="2617"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a6ee41cd160d397aa76668bf4db65e2d1" kindref="member">SWIGUNUSED</ref><sp/>begin<sp/>=<sp/>lua_gettop(L);</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>name<sp/>already<sp/>there<sp/>(class<sp/>is<sp/>already<sp/>registered)<sp/>then<sp/>do<sp/>nothing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a882b457b337f778c6925c77b59cbae79" kindref="member">SWIG_Lua_get_class_registry</ref>(L);<sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>registry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/>clss-&gt;<ref refid="structswig__lua__class_1a3c6469ebd6d312208ff380f8e8eff165" kindref="member">fqname</ref>);<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/>lua_rawget(L,<sp/>-2);</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lua_isnil(L,<sp/>-1))</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>2);</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(lua_gettop(L)<sp/>==<sp/>begin);</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>2);<sp/></highlight><highlight class="comment">/*<sp/>tidy<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recursively<sp/>initialize<sp/>all<sp/>bases<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>clss-&gt;<ref refid="structswig__lua__class_1a468e2d019d6cff6bbe8fefc8f572420b" kindref="member">bases</ref>[i];<sp/>i++)</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1aa8ec77fb7e1350b87d183a7708f5bdae" kindref="member">SWIG_Lua_class_register_instance</ref>(L,<sp/>clss-&gt;<ref refid="structswig__lua__class_1a468e2d019d6cff6bbe8fefc8f572420b" kindref="member">bases</ref>[i]);</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Again,<sp/>get<sp/>registry<sp/>and<sp/>push<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a882b457b337f778c6925c77b59cbae79" kindref="member">SWIG_Lua_get_class_registry</ref>(L);<sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>registry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/>clss-&gt;<ref refid="structswig__lua__class_1a3c6469ebd6d312208ff380f8e8eff165" kindref="member">fqname</ref>);<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/>lua_newtable(L);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>the<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2640"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SWIG_LUA_SQUASH_BASES)<sp/>&amp;&amp;<sp/>(SWIG_LUA_TARGET<sp/>==<sp/>SWIG_LUA_FLAVOR_LUA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>squashing<sp/>is<sp/>requested,<sp/>then<sp/>merges<sp/>all<sp/>bases<sp/>metatable<sp/>into<sp/>this<sp/>one.</highlight></codeline>
<codeline lineno="2642"><highlight class="comment"><sp/><sp/><sp/>*<sp/>It<sp/>would<sp/>get<sp/>us<sp/>all<sp/>special<sp/>methods:<sp/>__getitem,<sp/>__add<sp/>etc.</highlight></codeline>
<codeline lineno="2643"><highlight class="comment"><sp/><sp/><sp/>*<sp/>This<sp/>would<sp/>set<sp/>.fn,<sp/>.type,<sp/>and<sp/>other<sp/>.xxx<sp/>incorrectly,<sp/>but<sp/>we<sp/>will</highlight></codeline>
<codeline lineno="2644"><highlight class="comment"><sp/><sp/><sp/>*<sp/>overwrite<sp/>it<sp/>right<sp/>away</highlight></codeline>
<codeline lineno="2645"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_metatable_index<sp/>=<sp/><ref refid="swig__runtime_8h_1a9c4332806d14eef7167aac79d101b5ff" kindref="member">lua_absindex</ref>(L,<sp/>-1);</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>clss-&gt;<ref refid="structswig__lua__class_1a468e2d019d6cff6bbe8fefc8f572420b" kindref="member">bases</ref>[i];<sp/>i++)</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base_metatable;</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1af93e8f0a3beec1aefa768abb89fe7485" kindref="member">SWIG_Lua_get_class_metatable</ref>(L,<sp/>clss-&gt;<ref refid="structswig__lua__class_1a468e2d019d6cff6bbe8fefc8f572420b" kindref="member">bases</ref>[i]-&gt;<ref refid="structswig__lua__class_1a3c6469ebd6d312208ff380f8e8eff165" kindref="member">fqname</ref>);</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_metatable<sp/>=<sp/><ref refid="swig__runtime_8h_1a9c4332806d14eef7167aac79d101b5ff" kindref="member">lua_absindex</ref>(L,<sp/>-1);</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SWIG_Lua_merge_tables_by_index(L,<sp/>new_metatable_index,<sp/>base_metatable);</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>1);</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>And<sp/>now<sp/>we<sp/>will<sp/>overwrite<sp/>all<sp/>incorrectly<sp/>set<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2658"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>string<sp/>of<sp/>class<sp/>name<sp/>called<sp/>&quot;.type&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/></highlight><highlight class="stringliteral">&quot;.type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/>clss-&gt;<ref refid="structswig__lua__class_1a3c6469ebd6d312208ff380f8e8eff165" kindref="member">fqname</ref>);</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/>lua_rawset(L,<sp/>-3);</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>a<sp/>table<sp/>called<sp/>bases<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/></highlight><highlight class="stringliteral">&quot;.bases&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/>lua_newtable(L);</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/>lua_rawset(L,<sp/>-3);</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>a<sp/>table<sp/>called<sp/>&quot;.get&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/></highlight><highlight class="stringliteral">&quot;.get&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/>lua_newtable(L);</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/>lua_rawset(L,<sp/>-3);</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>a<sp/>table<sp/>called<sp/>&quot;.set&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/></highlight><highlight class="stringliteral">&quot;.set&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/>lua_newtable(L);</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/>lua_rawset(L,<sp/>-3);</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>a<sp/>table<sp/>called<sp/>&quot;.fn&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/></highlight><highlight class="stringliteral">&quot;.fn&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/>lua_newtable(L);</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>manual<sp/>disown<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a4e0088e1d53848f80738e5a49f1c0cf3" kindref="member">SWIG_Lua_add_function</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;__disown&quot;</highlight><highlight class="normal">,<sp/><ref refid="swig__runtime_8h_1aa6dab0ada88ba05ba8067207c79efbd8" kindref="member">SWIG_Lua_class_disown</ref>);</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/>lua_rawset(L,<sp/>-3);</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>accessor<sp/>fns<sp/>for<sp/>using<sp/>the<sp/>.get,.set&amp;.fn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a4e0088e1d53848f80738e5a49f1c0cf3" kindref="member">SWIG_Lua_add_function</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;__index&quot;</highlight><highlight class="normal">,<sp/><ref refid="swig__runtime_8h_1a85b5ba6bf2bdbe0d21a3611f3b5f8df3" kindref="member">SWIG_Lua_class_get</ref>);</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a4e0088e1d53848f80738e5a49f1c0cf3" kindref="member">SWIG_Lua_add_function</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;__newindex&quot;</highlight><highlight class="normal">,<sp/><ref refid="swig__runtime_8h_1ab75aeed852fd5b630a45dd2312ced041" kindref="member">SWIG_Lua_class_set</ref>);</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a4e0088e1d53848f80738e5a49f1c0cf3" kindref="member">SWIG_Lua_add_function</ref>(L,<sp/></highlight><highlight class="stringliteral">&quot;__gc&quot;</highlight><highlight class="normal">,<sp/><ref refid="swig__runtime_8h_1aba87e0d4ef2c7e61e81b4f685eef7b7b" kindref="member">SWIG_Lua_class_destruct</ref>);</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/>lua_rawset(L,<sp/>-3);<sp/></highlight><highlight class="comment">/*<sp/>metatable<sp/>into<sp/>registry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>tidy<sp/>stack<sp/>(remove<sp/>registry)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/>assert(lua_gettop(L)<sp/>==<sp/>begin);</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"></highlight></codeline>
<codeline lineno="2690"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SWIG_LUA_SQUASH_BASES)<sp/>&amp;&amp;<sp/>(SWIG_LUA_TARGET<sp/>==<sp/>SWIG_LUA_FLAVOR_LUA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>merge<sp/>all<sp/>symbols<sp/>from<sp/>.fn,<sp/>.set,<sp/>.get<sp/>etc<sp/>from<sp/>bases<sp/>to<sp/>our<sp/>tables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/>SWIG_Lua_class_squash_bases(L,<sp/>clss);</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1af93e8f0a3beec1aefa768abb89fe7485" kindref="member">SWIG_Lua_get_class_metatable</ref>(L,<sp/>clss-&gt;<ref refid="structswig__lua__class_1a3c6469ebd6d312208ff380f8e8eff165" kindref="member">fqname</ref>);</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1afbf47dea1fc0e472f8599c32b6b1ea29" kindref="member">SWIG_Lua_add_class_instance_details</ref>(</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>L,<sp/>clss);<sp/><sp/></highlight><highlight class="comment">/*<sp/>recursive<sp/>adding<sp/>of<sp/>details<sp/>(atts<sp/>&amp;<sp/>ops)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>tidy<sp/>stack<sp/>(remove<sp/>class<sp/>metatable)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/>assert(lua_gettop(L)<sp/>==<sp/>begin);</highlight></codeline>
<codeline lineno="2699"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"></highlight></codeline>
<codeline lineno="2701" refid="swig__runtime_8h_1a96a75364a5f20fd525bb603440f698d3" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a96a75364a5f20fd525bb603440f698d3" kindref="member">SWIG_Lua_class_register</ref>(lua_State<sp/>*L,<sp/><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>*clss)</highlight></codeline>
<codeline lineno="2702"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a6ee41cd160d397aa76668bf4db65e2d1" kindref="member">SWIGUNUSED</ref><sp/>begin;</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));<sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>a<sp/>table<sp/>(module<sp/>or<sp/>namespace)<sp/>where</highlight></codeline>
<codeline lineno="2705"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classes<sp/>will<sp/>be<sp/>added<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1aa8ec77fb7e1350b87d183a7708f5bdae" kindref="member">SWIG_Lua_class_register_instance</ref>(L,<sp/>clss);</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a2451693ac83d6d677ab826b113491760" kindref="member">SWIG_Lua_class_register_static</ref>(L,<sp/>clss);</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"></highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>links<sp/>from<sp/>static<sp/>part<sp/>to<sp/>instance<sp/>part<sp/>and<sp/>vice<sp/>versa<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>[SWIG<sp/>registry]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[Module]</highlight></codeline>
<codeline lineno="2711"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>&quot;MyClass&quot;<sp/>----&gt;<sp/>[MyClass<sp/>metatable]<sp/>&lt;=====<sp/><sp/><sp/><sp/><sp/>&quot;MyClass&quot;<sp/>-+&gt;<sp/>[static</highlight></codeline>
<codeline lineno="2712"><highlight class="comment"><sp/><sp/><sp/>*<sp/>part]</highlight></codeline>
<codeline lineno="2713"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;.get&quot;<sp/>----&gt;<sp/>...<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="2714"><highlight class="comment"><sp/><sp/><sp/>*<sp/>getmetatable()----|</highlight></codeline>
<codeline lineno="2715"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;.set&quot;<sp/>----&gt;<sp/>...<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>|</highlight></codeline>
<codeline lineno="2716"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;.static&quot;<sp/>--------------)----------------/</highlight></codeline>
<codeline lineno="2717"><highlight class="comment"><sp/><sp/><sp/>*<sp/>[static<sp/>part<sp/>metatable]</highlight></codeline>
<codeline lineno="2718"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>&quot;.get&quot;<sp/>--&gt;<sp/>...</highlight></codeline>
<codeline lineno="2719"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>&quot;.set&quot;<sp/>--&gt;<sp/>....</highlight></codeline>
<codeline lineno="2720"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|===============================</highlight></codeline>
<codeline lineno="2721"><highlight class="comment"><sp/><sp/><sp/>*<sp/>&quot;.instance&quot;</highlight></codeline>
<codeline lineno="2722"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/>begin<sp/>=<sp/>lua_gettop(L);</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/>clss-&gt;<ref refid="structswig__lua__class_1a41b17587e0b26e2112200adfffb22730" kindref="member">cls_static</ref>-&gt;<ref refid="structswig__lua__namespace_1a5ac77da56177f2221e7b4383d08289ae" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/>lua_rawget(L,<sp/>-2);<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>class<sp/>static<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/>lua_getmetatable(L,<sp/>-1);</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>class<sp/>static<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/></highlight><highlight class="stringliteral">&quot;.instance&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>prepare<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2730"><highlight class="normal"></highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1af93e8f0a3beec1aefa768abb89fe7485" kindref="member">SWIG_Lua_get_class_metatable</ref>(L,<sp/>clss-&gt;<ref refid="structswig__lua__class_1a3c6469ebd6d312208ff380f8e8eff165" kindref="member">fqname</ref>);<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>class<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/></highlight><highlight class="stringliteral">&quot;.static&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>prepare<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/>lua_pushvalue(L,<sp/>-4);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>push<sp/>static<sp/>class<sp/>TABLE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/>assert(lua_istable(L,<sp/>-1));</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/>lua_rawset(L,<sp/>-3);<sp/></highlight><highlight class="comment">/*<sp/>assign<sp/>static<sp/>class<sp/>table(!NOT<sp/>metatable)<sp/>as<sp/>&quot;.static&quot;</highlight></codeline>
<codeline lineno="2737"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>member<sp/>of<sp/>class<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/>lua_rawset(L,<sp/>-3);<sp/></highlight><highlight class="comment">/*<sp/>assign<sp/>class<sp/>metatable<sp/>as<sp/>&quot;.instance&quot;<sp/>member<sp/>of<sp/>class</highlight></codeline>
<codeline lineno="2739"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>METATABLE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>2);</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/>assert(lua_gettop(L)<sp/>==<sp/>begin);</highlight></codeline>
<codeline lineno="2742"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SWIG_LUA_TARGET<sp/>==<sp/>SWIG_LUA_FLAVOR_LUA<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2744"><highlight class="normal"></highlight></codeline>
<codeline lineno="2745"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(SWIG_LUA_TARGET<sp/>==<sp/>SWIG_LUA_FLAVOR_ELUA)<sp/>||<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2746"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(SWIG_LUA_TARGET<sp/>==<sp/>SWIG_LUA_FLAVOR_ELUAC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SWIG_Lua_elua_class_register_instance(lua_State<sp/>*L,</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>*clss)</highlight></codeline>
<codeline lineno="2749"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a6ee41cd160d397aa76668bf4db65e2d1" kindref="member">SWIGUNUSED</ref><sp/>begin<sp/>=<sp/>lua_gettop(L);</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>name<sp/>already<sp/>there<sp/>(class<sp/>is<sp/>already<sp/>registered)<sp/>then<sp/>do<sp/>nothing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a882b457b337f778c6925c77b59cbae79" kindref="member">SWIG_Lua_get_class_registry</ref>(L);<sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>registry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/>clss-&gt;<ref refid="structswig__lua__class_1a3c6469ebd6d312208ff380f8e8eff165" kindref="member">fqname</ref>);<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/>lua_rawget(L,<sp/>-2);</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lua_isnil(L,<sp/>-1))</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>2);</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(lua_gettop(L)<sp/>==<sp/>begin);</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>2);<sp/></highlight><highlight class="comment">/*<sp/>tidy<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recursively<sp/>initialize<sp/>all<sp/>bases<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>clss-&gt;<ref refid="structswig__lua__class_1a468e2d019d6cff6bbe8fefc8f572420b" kindref="member">bases</ref>[i];<sp/>i++)</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SWIG_Lua_elua_class_register_instance(L,<sp/>clss-&gt;<ref refid="structswig__lua__class_1a468e2d019d6cff6bbe8fefc8f572420b" kindref="member">bases</ref>[i]);</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Again,<sp/>get<sp/>registry<sp/>and<sp/>push<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a882b457b337f778c6925c77b59cbae79" kindref="member">SWIG_Lua_get_class_registry</ref>(L);<sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>registry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/>clss-&gt;<ref refid="structswig__lua__class_1a3c6469ebd6d312208ff380f8e8eff165" kindref="member">fqname</ref>);<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/>assert(clss-&gt;<ref refid="structswig__lua__class_1a7c56e45895444992b6a42c60ba6a17e5" kindref="member">metatable</ref>);</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/>lua_pushrotable(L,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(clss-&gt;<ref refid="structswig__lua__class_1a7c56e45895444992b6a42c60ba6a17e5" kindref="member">metatable</ref>));<sp/></highlight><highlight class="comment">/*<sp/>create<sp/>the<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/>lua_rawset(L,<sp/>-3);</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/>lua_pop(L,<sp/>1);</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/>assert(lua_gettop(L)<sp/>==<sp/>begin);</highlight></codeline>
<codeline lineno="2776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>elua<sp/>&amp;&amp;<sp/>eluac<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2778"><highlight class="normal"></highlight></codeline>
<codeline lineno="2779"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2780"><highlight class="comment"><sp/>*<sp/>Class/structure<sp/>conversion<sp/>fns</highlight></codeline>
<codeline lineno="2781"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2782"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2783"><highlight class="normal"></highlight></codeline>
<codeline lineno="2784"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>helper<sp/>to<sp/>add<sp/>metatable<sp/>to<sp/>new<sp/>lua<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2785" refid="swig__runtime_8h_1a8f7e025e07d705726404f14e59195797" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a8f7e025e07d705726404f14e59195797" kindref="member">SWIG_Lua_AddMetatable</ref>(lua_State<sp/>*L,<sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*<ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="2786"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>-&gt;<ref refid="structswig__type__info_1a19bdd65dceb89cd54befd3ded06558b7" kindref="member">clientdata</ref>)<sp/></highlight><highlight class="comment">/*<sp/>there<sp/>is<sp/>clientdata:<sp/>so<sp/>add<sp/>the<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1af93e8f0a3beec1aefa768abb89fe7485" kindref="member">SWIG_Lua_get_class_metatable</ref>(</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,<sp/>((<ref refid="structswig__lua__class" kindref="compound">swig_lua_class</ref><sp/>*)(<ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>-&gt;<ref refid="structswig__type__info_1a19bdd65dceb89cd54befd3ded06558b7" kindref="member">clientdata</ref>))-&gt;fqname);</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lua_istable(L,<sp/>-1))</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_setmetatable(L,<sp/>-2);</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>1);</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"></highlight></codeline>
<codeline lineno="2802"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>pushes<sp/>a<sp/>new<sp/>object<sp/>into<sp/>the<sp/>lua<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2803" refid="swig__runtime_8h_1a96c4cba9e0940983c98de6a9d6f339c8" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a96c4cba9e0940983c98de6a9d6f339c8" kindref="member">SWIG_Lua_NewPointerObj</ref>(lua_State<sp/>*L,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*<ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>own)</highlight></codeline>
<codeline lineno="2805"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><ref refid="structswig__lua__userdata" kindref="compound">swig_lua_userdata</ref><sp/>*usr;</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr)</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushnil(L);</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/>usr<sp/>=<sp/>(<ref refid="structswig__lua__userdata" kindref="compound">swig_lua_userdata</ref><sp/>*)lua_newuserdata(</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>L,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structswig__lua__userdata" kindref="compound">swig_lua_userdata</ref>));<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/>usr-&gt;<ref refid="structswig__lua__userdata_1a2d3be052ee0b81986ab31ef5dc08fd25" kindref="member">ptr</ref><sp/>=<sp/>ptr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>the<sp/>ptr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/>usr-&gt;<ref refid="structswig__lua__userdata_1aed83344d96f9da7bf57f9bb604cb1d53" kindref="member">type</ref><sp/>=<sp/><ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/>usr-&gt;<ref refid="structswig__lua__userdata_1a12970d19b437f84b1e7fba18ede882cb" kindref="member">own</ref><sp/>=<sp/>own;</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(SWIG_LUA_TARGET<sp/>!=<sp/>SWIG_LUA_FLAVOR_ELUAC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a8f7e025e07d705726404f14e59195797" kindref="member">SWIG_Lua_AddMetatable</ref>(L,<sp/><ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>);<sp/></highlight><highlight class="comment">/*<sp/>add<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"></highlight></codeline>
<codeline lineno="2822"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>takes<sp/>a<sp/>object<sp/>from<sp/>the<sp/>lua<sp/>stack<sp/>&amp;<sp/>converts<sp/>it<sp/>into<sp/>an<sp/>object<sp/>of<sp/>the<sp/>correct</highlight></codeline>
<codeline lineno="2823"><highlight class="comment"><sp/>type</highlight></codeline>
<codeline lineno="2824"><highlight class="comment"><sp/>(if<sp/>possible)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2825" refid="swig__runtime_8h_1a0d0394796468d0001b1d3d358a19891f" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a0d0394796468d0001b1d3d358a19891f" kindref="member">SWIG_Lua_ConvertPtr</ref>(lua_State<sp/>*L,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**ptr,</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*<ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags)</highlight></codeline>
<codeline lineno="2827"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><ref refid="structswig__lua__userdata" kindref="compound">swig_lua_userdata</ref><sp/>*usr;</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><ref refid="structswig__cast__info" kindref="compound">swig_cast_info</ref><sp/>*cast;</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lua_isnil(L,<sp/>index))</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*ptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1af9ecbac56d4c5cd6104ae8f6bb82e9f7" kindref="member">SWIG_OK</ref>;</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>special<sp/>case:<sp/>lua<sp/>nil<sp/>=&gt;<sp/>NULL<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/>usr<sp/>=<sp/>(<ref refid="structswig__lua__userdata" kindref="compound">swig_lua_userdata</ref><sp/>*)lua_touserdata(L,<sp/>index);<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(usr)</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/><ref refid="swig__runtime_8h_1aa56139a289829795ed651d533826b65e" kindref="member">SWIG_POINTER_DISOWN</ref>)<sp/></highlight><highlight class="comment">/*<sp/>must<sp/>disown<sp/>the<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usr-&gt;<ref refid="structswig__lua__userdata_1a12970d19b437f84b1e7fba18ede882cb" kindref="member">own</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>)<sp/></highlight><highlight class="comment">/*<sp/>special<sp/>cast<sp/>void*,<sp/>no<sp/>casting<sp/>fn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr<sp/>=<sp/>usr-&gt;<ref refid="structswig__lua__userdata_1a2d3be052ee0b81986ab31ef5dc08fd25" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1af9ecbac56d4c5cd6104ae8f6bb82e9f7" kindref="member">SWIG_OK</ref>;<sp/></highlight><highlight class="comment">/*<sp/>ok<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cast<sp/>=<sp/><ref refid="swig__runtime_8h_1a898a1dfcdf96d53a2c7fd90e8500b36e" kindref="member">SWIG_TypeCheckStruct</ref>(usr-&gt;<ref refid="structswig__lua__userdata_1aed83344d96f9da7bf57f9bb604cb1d53" kindref="member">type</ref>,</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>);<sp/></highlight><highlight class="comment">/*<sp/>performs<sp/>normal<sp/>type<sp/>checking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cast)</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newmemory<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr<sp/>=<sp/><ref refid="swig__runtime_8h_1a334486cb1e8f569c949a0384cbdb2a16" kindref="member">SWIG_TypeCast</ref>(cast,<sp/>usr-&gt;<ref refid="structswig__lua__userdata_1a2d3be052ee0b81986ab31ef5dc08fd25" kindref="member">ptr</ref>,<sp/>&amp;newmemory);</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!newmemory);<sp/></highlight><highlight class="comment">/*<sp/>newmemory<sp/>handling<sp/>not<sp/>yet<sp/>implemented<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1af9ecbac56d4c5cd6104ae8f6bb82e9f7" kindref="member">SWIG_OK</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ok<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1acfa11a770d66f9ca6ba170b173c56c94" kindref="member">SWIG_ERROR</ref>;<sp/></highlight><highlight class="comment">/*<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"></highlight></codeline>
<codeline lineno="2860" refid="swig__runtime_8h_1a8ed84d67fe041f17069ed2e28e23d1e4" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="swig__runtime_8h_1a8ed84d67fe041f17069ed2e28e23d1e4" kindref="member">SWIG_Lua_MustGetPtr</ref>(lua_State<sp/>*L,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*<ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argnum,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*func_name)</highlight></codeline>
<codeline lineno="2863"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*result;</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="swig__runtime_8h_1aea8ef410fde907633cb76d9d18131fa1" kindref="member">SWIG_IsOK</ref>(<ref refid="swig__runtime_8h_1a3a4e5f587d3994722b0628b2cc96ed42" kindref="member">SWIG_ConvertPtr</ref>(L,<sp/>index,<sp/>&amp;result,<sp/><ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>,<sp/>flags)))</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>luaL_error(L,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>%s,<sp/>expected<sp/>a<sp/>%s<sp/>at<sp/>argument<sp/>number<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func_name,<sp/>(<ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref><sp/>&amp;&amp;<sp/><ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>-&gt;<ref refid="structswig__type__info_1abbe7cc58a083feb4329b748643324064" kindref="member">str</ref>)<sp/>?<sp/><ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>-&gt;<ref refid="structswig__type__info_1abbe7cc58a083feb4329b748643324064" kindref="member">str</ref><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;void*&quot;</highlight><highlight class="normal">,<sp/>argnum);</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"></highlight></codeline>
<codeline lineno="2873"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>pushes<sp/>a<sp/>packed<sp/>userdata.<sp/>user<sp/>for<sp/>member<sp/>fn<sp/>pointers<sp/>only<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2874" refid="swig__runtime_8h_1ab98924e8e52ff8f34ace1515120ccda6" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1ab98924e8e52ff8f34ace1515120ccda6" kindref="member">SWIG_Lua_NewPackedObj</ref>(lua_State<sp/>*L,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*<ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="2876"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><ref refid="structswig__lua__rawdata" kindref="compound">swig_lua_rawdata</ref><sp/>*raw;</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/>assert(ptr);<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>acceptable<sp/>to<sp/>pass<sp/>in<sp/>a<sp/>NULL<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/>raw<sp/>=<sp/>(<ref refid="structswig__lua__rawdata" kindref="compound">swig_lua_rawdata</ref><sp/>*)lua_newuserdata(</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>L,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structswig__lua__rawdata" kindref="compound">swig_lua_rawdata</ref>)<sp/>-<sp/>1<sp/>+<sp/>size);<sp/></highlight><highlight class="comment">/*<sp/>alloc<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/>raw-&gt;<ref refid="structswig__lua__rawdata_1a935edef9803f54e65acaa0ecf8c81ed2" kindref="member">type</ref><sp/>=<sp/><ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/>raw-&gt;<ref refid="structswig__lua__rawdata_1ac52566bcb4a7b4d8421c17d182048924" kindref="member">own</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/>memcpy(raw-&gt;<ref refid="structswig__lua__rawdata_1acbba29d10dcd1b96ba3b8d255b777749" kindref="member">data</ref>,<sp/>ptr,<sp/>size);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>the<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><ref refid="swig__runtime_8h_1a8f7e025e07d705726404f14e59195797" kindref="member">SWIG_Lua_AddMetatable</ref>(L,<sp/><ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>);<sp/></highlight><highlight class="comment">/*<sp/>add<sp/>metatable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"></highlight></codeline>
<codeline lineno="2887"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>converts<sp/>a<sp/>packed<sp/>userdata.<sp/>user<sp/>for<sp/>member<sp/>fn<sp/>pointers<sp/>only<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2888" refid="swig__runtime_8h_1a34313b58896afa8f8a27f1d0bfd2b7c4" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a34313b58896afa8f8a27f1d0bfd2b7c4" kindref="member">SWIG_Lua_ConvertPacked</ref>(lua_State<sp/>*L,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*<ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="2890"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><ref refid="structswig__lua__rawdata" kindref="compound">swig_lua_rawdata</ref><sp/>*raw;</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/>raw<sp/>=<sp/>(<ref refid="structswig__lua__rawdata" kindref="compound">swig_lua_rawdata</ref><sp/>*)lua_touserdata(L,<sp/>index);<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!raw)</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1acfa11a770d66f9ca6ba170b173c56c94" kindref="member">SWIG_ERROR</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref><sp/>==<sp/>0<sp/>||<sp/><ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref><sp/>==<sp/>raw-&gt;<ref refid="structswig__lua__rawdata_1a935edef9803f54e65acaa0ecf8c81ed2" kindref="member">type</ref>)<sp/></highlight><highlight class="comment">/*<sp/>void*<sp/>or<sp/>identical<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(ptr,<sp/>raw-&gt;<ref refid="structswig__lua__rawdata_1acbba29d10dcd1b96ba3b8d255b777749" kindref="member">data</ref>,<sp/>size);<sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1af9ecbac56d4c5cd6104ae8f6bb82e9f7" kindref="member">SWIG_OK</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ok<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1acfa11a770d66f9ca6ba170b173c56c94" kindref="member">SWIG_ERROR</ref>;<sp/></highlight><highlight class="comment">/*<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"></highlight></codeline>
<codeline lineno="2903"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>a<sp/>function<sp/>to<sp/>get<sp/>the<sp/>typestring<sp/>of<sp/>a<sp/>piece<sp/>of<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2904" refid="swig__runtime_8h_1a3ebd284134ee5f4877fe86f646aebde6" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="swig__runtime_8h_1a3ebd284134ee5f4877fe86f646aebde6" kindref="member">SWIG_Lua_typename</ref>(lua_State<sp/>*L,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tp)</highlight></codeline>
<codeline lineno="2905"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><ref refid="structswig__lua__userdata" kindref="compound">swig_lua_userdata</ref><sp/>*usr;</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lua_isuserdata(L,<sp/>tp))</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>usr<sp/>=<sp/>(<ref refid="structswig__lua__userdata" kindref="compound">swig_lua_userdata</ref><sp/>*)lua_touserdata(L,<sp/>tp);<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(usr<sp/>&amp;&amp;<sp/>usr-&gt;<ref refid="structswig__lua__userdata_1aed83344d96f9da7bf57f9bb604cb1d53" kindref="member">type</ref><sp/>&amp;&amp;<sp/>usr-&gt;<ref refid="structswig__lua__userdata_1aed83344d96f9da7bf57f9bb604cb1d53" kindref="member">type</ref>-&gt;<ref refid="structswig__type__info_1abbe7cc58a083feb4329b748643324064" kindref="member">str</ref>)</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>usr-&gt;<ref refid="structswig__lua__userdata_1aed83344d96f9da7bf57f9bb604cb1d53" kindref="member">type</ref>-&gt;<ref refid="structswig__type__info_1abbe7cc58a083feb4329b748643324064" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;userdata<sp/>(unknown<sp/>type)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lua_typename(L,<sp/>lua_type(L,<sp/>tp));</highlight></codeline>
<codeline lineno="2915"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"></highlight></codeline>
<codeline lineno="2917"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>lua<sp/>callable<sp/>function<sp/>to<sp/>get<sp/>the<sp/>userdata&apos;s<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2918" refid="swig__runtime_8h_1a85bb429fb2e29e3681bbda49ce8c34c1" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a42cd9c1d67d803040a3e78515945afcb" kindref="member">SWIGRUNTIME</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a85bb429fb2e29e3681bbda49ce8c34c1" kindref="member">SWIG_Lua_type</ref>(lua_State<sp/>*L)</highlight></codeline>
<codeline lineno="2919"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/>lua_pushstring(L,<sp/><ref refid="swig__runtime_8h_1a3ebd284134ee5f4877fe86f646aebde6" kindref="member">SWIG_Lua_typename</ref>(L,<sp/>1));</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2922"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"></highlight></codeline>
<codeline lineno="2924"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2925"><highlight class="comment"><sp/>*<sp/>global<sp/>variable<sp/>support<sp/>code:<sp/>class/struct<sp/>typemap<sp/>functions</highlight></codeline>
<codeline lineno="2926"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2927"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2928"><highlight class="normal"></highlight></codeline>
<codeline lineno="2929"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>((SWIG_LUA_TARGET<sp/>!=<sp/>SWIG_LUA_FLAVOR_ELUA)<sp/>&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2930"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>(SWIG_LUA_TARGET<sp/>!=<sp/>SWIG_LUA_FLAVOR_ELUAC))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2931"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Install<sp/>Constants<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2932" refid="swig__runtime_8h_1af6d78a7441d3788ad73c978698a0cc1e" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1af6d78a7441d3788ad73c978698a0cc1e" kindref="member">SWIG_Lua_InstallConstants</ref>(lua_State<sp/>*L,</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structswig__lua__const__info" kindref="compound">swig_lua_const_info</ref><sp/>constants[])</highlight></codeline>
<codeline lineno="2934"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>constants[i].<ref refid="structswig__lua__const__info_1a1c9ffb014aea4d37c1b73e0a446c9be1" kindref="member">type</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(constants[i].<ref refid="structswig__lua__class_1a139831b0d9b661d6e64c1f902d63142d" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1ae486ba0f8ccf6c87507633344d3f6a96" kindref="member">SWIG_LUA_INT</ref>:</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushstring(L,<sp/>constants[i].<ref refid="structswig__lua__class_1abefc5d1a37e06e1c9305d3456a59f2d0" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushinteger(L,<sp/>(lua_Number)constants[i].lvalue);</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_rawset(L,<sp/>-3);</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a9c4ea7e25de05f5a501e7163fd480b67" kindref="member">SWIG_LUA_FLOAT</ref>:</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushstring(L,<sp/>constants[i].<ref refid="structswig__lua__class_1abefc5d1a37e06e1c9305d3456a59f2d0" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushnumber(L,<sp/>(lua_Number)constants[i].dvalue);</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_rawset(L,<sp/>-3);</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a50c58df5c9bd1cea902021a7f7fc9896" kindref="member">SWIG_LUA_CHAR</ref>:</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushstring(L,<sp/>constants[i].<ref refid="structswig__lua__class_1abefc5d1a37e06e1c9305d3456a59f2d0" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>constants[i].<ref refid="structswig__lua__const__info_1a0f4d6393367808867778882594520a44" kindref="member">lvalue</ref>;</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushlstring(L,<sp/>&amp;c,<sp/>1);</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_rawset(L,<sp/>-3);</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1af6a25edb9ad2ab838e1b1fa3e4450121" kindref="member">SWIG_LUA_STRING</ref>:</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushstring(L,<sp/>constants[i].<ref refid="structswig__lua__class_1abefc5d1a37e06e1c9305d3456a59f2d0" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushstring(L,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)constants[i].pvalue);</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_rawset(L,<sp/>-3);</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a2f4d58f9ce413585253063575c033082" kindref="member">SWIG_LUA_POINTER</ref>:</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushstring(L,<sp/>constants[i].<ref refid="structswig__lua__class_1abefc5d1a37e06e1c9305d3456a59f2d0" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a8eb06167550295873af166db6a49cf36" kindref="member">SWIG_NewPointerObj</ref>(L,<sp/>constants[i].pvalue,<sp/>*(constants[i]).ptype,<sp/>0);</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_rawset(L,<sp/>-3);</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1af2062cfc3a6907d38c2587cdab77ae38" kindref="member">SWIG_LUA_BINARY</ref>:</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushstring(L,<sp/>constants[i].<ref refid="structswig__lua__class_1abefc5d1a37e06e1c9305d3456a59f2d0" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a20c6437f49ae257857683ba0e7b2100f" kindref="member">SWIG_NewMemberObj</ref>(L,<sp/>constants[i].pvalue,<sp/>constants[i].lvalue,</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(constants[i]).ptype);</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_rawset(L,<sp/>-3);</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2978"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2980"><highlight class="normal"></highlight></codeline>
<codeline lineno="2981"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2982"><highlight class="comment"><sp/>*<sp/>executing<sp/>lua<sp/>code<sp/>from<sp/>within<sp/>the<sp/>wrapper</highlight></codeline>
<codeline lineno="2983"><highlight class="comment"><sp/>*<sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2984"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2985"><highlight class="normal"></highlight></codeline>
<codeline lineno="2986"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIG_DOSTRING_FAIL<sp/></highlight><highlight class="comment">/*<sp/>Allows<sp/>redefining<sp/>of<sp/>error<sp/>function<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2987" refid="swig__runtime_8h_1a054a85a15c821ad190018e106214a1ac" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWIG_DOSTRING_FAIL(S)<sp/>fprintf(stderr,<sp/>&quot;%s\n&quot;,<sp/>S)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2988"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2989"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Executes<sp/>a<sp/>C<sp/>string<sp/>in<sp/>Lua<sp/>which<sp/>is<sp/>a<sp/>really<sp/>simple<sp/>way<sp/>of<sp/>calling<sp/>lua<sp/>from<sp/>C</highlight></codeline>
<codeline lineno="2990"><highlight class="comment">Unfortunately<sp/>lua<sp/>keeps<sp/>changing<sp/>its<sp/>APIs,<sp/>so<sp/>we<sp/>need<sp/>a<sp/>conditional<sp/>compile</highlight></codeline>
<codeline lineno="2991"><highlight class="comment">In<sp/>lua<sp/>5.0.X<sp/>it&apos;s<sp/>lua_dostring()</highlight></codeline>
<codeline lineno="2992"><highlight class="comment">In<sp/>lua<sp/>5.1.X<sp/>it&apos;s<sp/>luaL_dostring()</highlight></codeline>
<codeline lineno="2993"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2994" refid="swig__runtime_8h_1a3af0c40da7cc32dc9af81d722828ad63" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a8f2319f775e5b9d5906c9ef25d9b819a" kindref="member">SWIGINTERN</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a3af0c40da7cc32dc9af81d722828ad63" kindref="member">SWIG_Lua_dostring</ref>(lua_State<sp/>*L,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="2995"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ok,<sp/>top;</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/>0<sp/>||<sp/>str[0]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nothing<sp/>to<sp/>do<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/>top<sp/>=<sp/>lua_gettop(L);<sp/></highlight><highlight class="comment">/*<sp/>save<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3000"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(LUA_VERSION_NUM)<sp/>&amp;&amp;<sp/>(LUA_VERSION_NUM<sp/>&gt;=<sp/>501))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/>ok<sp/>=<sp/>luaL_dostring(L,<sp/>str);<sp/></highlight><highlight class="comment">/*<sp/>looks<sp/>like<sp/>this<sp/>is<sp/>lua<sp/>5.1.X<sp/>or<sp/>later,<sp/>good<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3002"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/>ok<sp/>=<sp/>lua_dostring(L,<sp/>str);<sp/></highlight><highlight class="comment">/*<sp/>might<sp/>be<sp/>lua<sp/>5.0.x,<sp/>using<sp/>lua_dostring<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3004"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ok<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="swig__runtime_8h_1a054a85a15c821ad190018e106214a1ac" kindref="member">SWIG_DOSTRING_FAIL</ref>(lua_tostring(L,<sp/>-1));</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/>lua_settop(L,<sp/>top);<sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>the<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok;</highlight></codeline>
<codeline lineno="3011"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"></highlight></codeline>
<codeline lineno="3013"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3014"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3016"><highlight class="normal"></highlight></codeline>
<codeline lineno="3017"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>------------------------------<sp/>end<sp/>luarun.swg<sp/><sp/>------------------------------</highlight></codeline>
<codeline lineno="3018"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3019"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-----------------------------------------------------------------------------*</highlight></codeline>
<codeline lineno="3020"><highlight class="comment"><sp/><sp/><sp/>Standard<sp/>SWIG<sp/>API<sp/>for<sp/>use<sp/>inside<sp/>user<sp/>code.</highlight></codeline>
<codeline lineno="3021"><highlight class="comment"></highlight></codeline>
<codeline lineno="3022"><highlight class="comment"><sp/><sp/><sp/>Don&apos;t<sp/>include<sp/>this<sp/>file<sp/>directly,<sp/>run<sp/>the<sp/>command</highlight></codeline>
<codeline lineno="3023"><highlight class="comment"><sp/><sp/><sp/>swig<sp/>-python<sp/>-external-runtime</highlight></codeline>
<codeline lineno="3024"><highlight class="comment"><sp/><sp/><sp/>Also,<sp/>read<sp/>the<sp/>Modules<sp/>chapter<sp/>of<sp/>the<sp/>SWIG<sp/>Manual.</highlight></codeline>
<codeline lineno="3025"><highlight class="comment"></highlight></codeline>
<codeline lineno="3026"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3027"><highlight class="comment"><sp/>-----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3028"><highlight class="normal"></highlight></codeline>
<codeline lineno="3029"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SWIG_MODULE_CLIENTDATA_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3030"><highlight class="normal"></highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><ref refid="swig__runtime_8h_1affa7aa2bcce5bea24a20e5b184ae0533" kindref="member">SWIGRUNTIMEINLINE</ref><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*</highlight></codeline>
<codeline lineno="3032" refid="swig__runtime_8h_1a7dd78b07dde208ce1a05f97f1b6d2501" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a7dd78b07dde208ce1a05f97f1b6d2501" kindref="member">SWIG_TypeQuery</ref>(<ref refid="swig__runtime_8h_1a50d0a80dccc1d34749f07c82d6a04169" kindref="member">SWIG_MODULE_CLIENTDATA_TYPE</ref><sp/>clientdata,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structswig__lua__class_1abefc5d1a37e06e1c9305d3456a59f2d0" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="3033"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><ref refid="structswig__module__info" kindref="compound">swig_module_info</ref><sp/>*module<sp/>=<sp/><ref refid="swig__runtime_8h_1ab97db3bbfc9e3a73de01e1ee95fa0bb5" kindref="member">SWIG_GetModule</ref>(clientdata);</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a5b6a2719f95288678fa55ade4493b175" kindref="member">SWIG_TypeQueryModule</ref>(module,<sp/>module,<sp/><ref refid="structswig__lua__class_1abefc5d1a37e06e1c9305d3456a59f2d0" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="3036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"></highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><ref refid="swig__runtime_8h_1affa7aa2bcce5bea24a20e5b184ae0533" kindref="member">SWIGRUNTIMEINLINE</ref><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*</highlight></codeline>
<codeline lineno="3039" refid="swig__runtime_8h_1a810714d8aa076f5821d7af57872b38cf" refkind="member"><highlight class="normal"><ref refid="swig__runtime_8h_1a810714d8aa076f5821d7af57872b38cf" kindref="member">SWIG_MangledTypeQuery</ref>(<ref refid="swig__runtime_8h_1a50d0a80dccc1d34749f07c82d6a04169" kindref="member">SWIG_MODULE_CLIENTDATA_TYPE</ref><sp/>clientdata,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structswig__lua__class_1abefc5d1a37e06e1c9305d3456a59f2d0" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="3040"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><ref refid="structswig__module__info" kindref="compound">swig_module_info</ref><sp/>*module<sp/>=<sp/><ref refid="swig__runtime_8h_1ab97db3bbfc9e3a73de01e1ee95fa0bb5" kindref="member">SWIG_GetModule</ref>(clientdata);</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1ac63ad9b58a96793188f944c92ff40ec6" kindref="member">SWIG_MangledTypeQueryModule</ref>(module,<sp/>module,<sp/><ref refid="structswig__lua__class_1abefc5d1a37e06e1c9305d3456a59f2d0" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="3043"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"></highlight></codeline>
<codeline lineno="3045"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3046"><highlight class="normal"></highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><ref refid="swig__runtime_8h_1affa7aa2bcce5bea24a20e5b184ae0533" kindref="member">SWIGRUNTIMEINLINE</ref><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*<ref refid="swig__runtime_8h_1a7dd78b07dde208ce1a05f97f1b6d2501" kindref="member">SWIG_TypeQuery</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structswig__lua__class_1abefc5d1a37e06e1c9305d3456a59f2d0" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="3048"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><ref refid="structswig__module__info" kindref="compound">swig_module_info</ref><sp/>*module<sp/>=<sp/><ref refid="swig__runtime_8h_1ab97db3bbfc9e3a73de01e1ee95fa0bb5" kindref="member">SWIG_GetModule</ref>(<ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1a5b6a2719f95288678fa55ade4493b175" kindref="member">SWIG_TypeQueryModule</ref>(module,<sp/>module,<sp/><ref refid="structswig__lua__class_1abefc5d1a37e06e1c9305d3456a59f2d0" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="3051"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"></highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><ref refid="swig__runtime_8h_1affa7aa2bcce5bea24a20e5b184ae0533" kindref="member">SWIGRUNTIMEINLINE</ref><sp/><ref refid="structswig__type__info" kindref="compound">swig_type_info</ref><sp/>*<ref refid="swig__runtime_8h_1a810714d8aa076f5821d7af57872b38cf" kindref="member">SWIG_MangledTypeQuery</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structswig__lua__class_1abefc5d1a37e06e1c9305d3456a59f2d0" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="3054"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><ref refid="structswig__module__info" kindref="compound">swig_module_info</ref><sp/>*module<sp/>=<sp/><ref refid="swig__runtime_8h_1ab97db3bbfc9e3a73de01e1ee95fa0bb5" kindref="member">SWIG_GetModule</ref>(<ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="swig__runtime_8h_1ac63ad9b58a96793188f944c92ff40ec6" kindref="member">SWIG_MangledTypeQueryModule</ref>(module,<sp/>module,<sp/><ref refid="structswig__lua__class_1abefc5d1a37e06e1c9305d3456a59f2d0" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="3057"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"></highlight></codeline>
<codeline lineno="3059"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="njligames-njlic_engine/njli/generated/swig/lua/swig_runtime.h"/>
  </compounddef>
</doxygen>
